{
  "version": 3,
  "sources": ["https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/id.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/overload.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/cache.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/curry.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/noop.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/assign.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/create.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/arg.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/id.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/noop.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/self.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/nothing.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/mod.js", "https://cdn.jsdelivr.net/gh/stephband/midi@1.1.1/modules/note.js", "../../modules/glyphs.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/arg.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/self.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/nothing.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/mod.js", "../../modules/number/mod-12.js", "https://cdn.jsdelivr.net/gh/soundio/sequence@0.1.1/modules/event.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/get.js", "../../modules/event/to-duration.js", "../../modules/event/to-stop-beat.js", "../../modules/maths.js", "../../modules/scale.js", "../../modules/keys.js", "../../modules/pitch.js", "../../modules/spelling.js", "../../modules/stave/stave.js", "../../modules/stave/drum.js", "../../modules/stave/percussion.js", "../../modules/stave/piano.js", "../../modules/stave.js", "../../modules/config.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/rect.js", "../../modules/beam.js", "https://cdn.jsdelivr.net/gh/soundio/sequence@0.1.1/modules/event/transpose.js", "https://cdn.jsdelivr.net/gh/soundio/sequence@0.1.1/modules/transform.js", "https://cdn.jsdelivr.net/gh/soundio/sequence@0.1.1/modules/sequence-iterator.js", "../../modules/tuplet.js", "../../modules/number/float.js", "../../modules/number/power-of-2.js", "../../modules/number/grain-pow-2.js", "../../modules/object/push.js", "../../modules/object/length-of.js", "../../modules/object/last.js", "../../modules/object/map.js", "../../modules/part.js", "../../modules/bar.js", "../../modules/create-bars.js", "../../modules/event.js", "../../modules/create-symbol-element.js", "../../modules/render.js"],
  "sourcesContent": ["/**\nid(value)\nReturns `value`.\n**/\n\nexport default function id(value) { return value; }\n", "/**\noverload(fn, object)\n\nReturns an overloaded.\n\nTakes a `fn` that returns a string key, and an `object` of key:function\npairs. The returned function calls `fn` with all arguments to get a key,\nthen calls the function at `object[key]` with all arguments.\n\nWhere `fn` returns `undefined`, `object.default` is called if it is defined\nin `object`, otherwise `overload` throws a 'no function defined for key' error.\n\n```\nvar handleEvent = overload(get('type'), {\n    click:   (e) => {...},\n    input:   (e) => {...},\n    default: (e) => {...}\n});\n```\n*/\n\n\nexport default function overload(fn, map) {\n    return function overload() {\n        const key     = fn.apply(this, arguments);\n        const handler = (map[key] || map.default);\n\n        if (!handler) {\n            throw new Error('overload() no function defined for key \"' + key + '\"');\n        }\n\n        return handler.apply(this, arguments);\n    };\n}\n", "/**\ncache(fn)\nReturns a function that caches the output values of `fn(input)` against input\nvalues in a map, such that for each input value `fn` is only ever called once.\n*/\n\nlet warned;\n\nexport default function cacheByObject(fn) {\n    var map = new Map();\n\n    return function cache(object) {\n        if (window.DEBUG && !warned && object === undefined) {\n            warned = true;\n            console.warn('cache() called with undefined. Not illegal, but potentially bad.');\n        }\n\n        if (window.DEBUG && arguments.length > 1) {\n            console.warn('cache() called with ' + arguments.length + ' arguments. Accepts exactly 1.');\n        }\n\n        if (map.has(object)) {\n            return map.get(object);\n        }\n\n        var value = fn(object);\n        map.set(object, value);\n        return value;\n    };\n}\n", "/**\ncurry(fn [, muteable, arity])\nReturns a function that wraps `fn` and makes it partially applicable.\n*/\n\nimport cache from './cache.js';\n\nconst A     = Array.prototype;\n\nfunction applyFn(fn, args) {\n    return typeof fn === 'function' ? fn.apply(null, args) : fn ;\n}\n\nfunction curry(fn, muteable, arity) {\n    arity = arity || fn.length;\n\n    var memo = arity === 1 ?\n        // Don't cache if `muteable` flag is true\n        muteable ? fn : cache(fn) :\n\n        // It's ok to always cache intermediate memos, though\n        cache(function(object) {\n            return curry(function() {\n                var args = [object];\n                args.push.apply(args, arguments);\n                return fn.apply(null, args);\n            }, muteable, arity - 1) ;\n        }) ;\n\n    return function partial(object) {\n        return arguments.length === 0 ?\n            partial :\n        arguments.length === 1 ?\n            memo(object) :\n        arguments.length >= arity ?\n            fn.apply(null, arguments) :\n        // This is bad, I think. We don't want [[fn],[fn]].map(get(0)) to be firing the fns\n        //arguments.length > arity ?\n        //    applyFn(fn.apply(null, A.splice.call(arguments, 0, arity)), arguments) :\n        applyFn(memo(object), A.slice.call(arguments, 1)) ;\n    };\n}\n\n//function curry(fn, muteable, arity) {\n//    arity = arity || fn.length;\n//    return function curried() {\n//        return arguments.length >= arity ?\n//            fn.apply(null, arguments) :\n//            curried.bind(null, ...arguments) ;\n//    };\n//}\n\nif (window.DEBUG) {\n    const _curry = curry;\n\n    // Feature test\n\tconst isFunctionLengthDefineable = (function() {\n\t\tvar fn = function() {};\n\n\t\ttry {\n\t\t\t// Can't do this on Safari - length non configurable :(\n\t\t\tObject.defineProperty(fn, 'length', { value: 2 });\n\t\t}\n\t\tcatch(e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn fn.length === 2;\n\t})();\n\n    const setFunctionProperties = function setFunctionProperties(text, parity, fn1, fn2) {\n        // Make the string representation of fn2 display parameters of fn1\n        fn2.toString = function() {\n            return /function\\s*[\\w\\d]*\\s*\\([,\\w\\d\\s]*\\)/.exec(fn1.toString()) + ' { [' + text + '] }';\n        };\n\n        // Where possible, define length so that curried functions show how\n        // many arguments they are yet expecting\n        if (isFunctionLengthDefineable) {\n            Object.defineProperty(fn2, 'length', { value: parity });\n        }\n\n        return fn2;\n    };\n\n    // Make curried functions log a pretty version of their partials\n    curry = function curry(fn, muteable, arity) {\n        arity  = arity || fn.length;\n        return setFunctionProperties('curried', arity, fn, _curry(fn, muteable, arity));\n    };\n}\n\n\nexport default curry;\n", "/**\nnoop()\nDoes nothing, returns undefined.\n**/\n\nexport default function noop() {}\n", "/**\nassign(node, properties)\n\nAssigns each property of `properties` to `node`, as a property where that\nproperty exists in `node`, otherwise as an attribute.\n\nIf `properties` has a property `'children'` it must be an array of nodes;\nthey are appended to 'node'.\n\nThe property `'html'` is aliased to `'innerHTML'`. The property `'text'`\nis aliased to `'textContent'`. The property `'tag'` is treated as an alias\nof `'tagName'` (which is ignored, as `node.tagName` is read-only). The\nproperty `'is'` is also ignored.\n*/\n\nimport curry from 'fn/curry.js';\nimport id from 'fn/id.js';\nimport noop from 'fn/noop.js';\nimport overload from 'fn/overload.js';\n\nconst assignProperty = overload(id, {\n\t// Ignore read-only properties or attributes\n\tis: noop,\n\ttag: noop,\n\n\tdata: function(name, node, object) {\n\t\t// Strip undefined\n\t\tfor (name in object) {\n\t\t\tif (object[name] === undefined) {\n\t\t\t\tdelete object[name];\n\t\t\t}\n\t\t}\n\n\t\tObject.assign(node.dataset, object);\n\t},\n\n\tdataset: function(name, node, object) {\n        // Strip undefined\n        for (name in object) {\n            if (object[name] === undefined) {\n                delete object[name];\n            }\n        }\n\n\t\tObject.assign(node.dataset, object);\n\t},\n\n\thtml: function(name, node, content) {\n\t\tnode.innerHTML = content;\n\t},\n\n\ttext: function(name, node, content) {\n\t\tnode.textContent = content;\n\t},\n\n\tstyle: overload((name, node, content) => typeof content, {\n\t\tstring: (name, node, content) => node.style = content,\n\t\tobject: (name, node, content) => Object.assign(node.style, content)\n\t}),\n\n\tchildren: function(name, node, content) {\n\t\t// Empty the node and append children\n\t\tnode.innerHTML = '';\n\t\tnode.append.apply(node, content);\n\t},\n\n\t// SVG elements have a read-only properties, and must be set as string\n\t// attributes. Todo: explore the SVG property API to make these take\n\t// advantage of it\n    href: function(name, node, content) {\n        if (node instanceof SVGElement) {\n            node.setAttribute('href', content);\n        }\n        else {\n            node.href = content;\n        }\n    },\n\n\tpoints:    setAttribute,\n    cx:        setAttribute,\n    cy:        setAttribute,\n    r:         setAttribute,\n\tx:         setAttribute,\n\ty:         setAttribute,\n\tdx:        setAttribute,\n\tdy:        setAttribute,\n\ttransform: setAttribute,\n    preserveAspectRatio: setAttribute,\n    viewBox:   setAttribute,\n\n\tdefault: function(name, node, content) {\n\t\tif (name in node) {\n\t\t\tnode[name] = content;\n\t\t}\n\t\telse {\n\t\t\tnode.setAttribute(name, content);\n\t\t}\n\t}\n});\n\nfunction setAttribute(name, node, content) {\n\tnode.setAttribute(name, content);\n}\n\nexport function assign(node, attributes) {\n\tvar names = Object.keys(attributes);\n\tvar n = names.length;\n\n    // Avoid setting undefined\n    while (n--) if (attributes[names[n]] !== undefined) {\n        assignProperty(names[n], node, attributes[names[n]]);\n    }\n\n\treturn node;\n}\n\nexport default curry(assign, true);\n", "\nimport id       from 'fn/id.js';\nimport overload from 'fn/overload.js';\nimport assign   from './assign.js';\n\nconst svgNamespace = 'http://www.w3.org/2000/svg';\n\nconst template      = document.createElement('template');\nconst typeofContent = (type, content) => (content && typeof content);\n\n// Constructors\n\nfunction createContextFragment(context, html = '') {\n    const range = document.createRange();\n    range.selectNode(context);\n    return range.createContextualFragment(html);\n}\n\nconst createSVG = overload(typeofContent, {\n    string: function(tag, html) {\n        const node = document.createElementNS(svgNamespace, tag);\n        node.innerHTML = html;\n        return node;\n    },\n\n    object: function(tag, object) {\n        const node = document.createElementNS(svgNamespace, tag);\n\n        // Is it array-like?\n        if (typeof object.length === 'number') {\n            // Be careful here in case object is a live NodeList, which will\n            // mutate as you iterate over it. Applying object to .append()\n            // appears to not have this problem, and will work on arrays.\n            node.append.apply(node, object);\n        }\n        else {\n            assign(node, object);\n        }\n\n        return node;\n    },\n\n    default: (tag) => document.createElementNS(svgNamespace, tag)\n});\n\nconst createHTML = overload(typeofContent, {\n    string: function(tag, html) {\n        const node = document.createElement(tag);\n        node.innerHTML = html;\n        return node;\n    },\n\n    object: function(tag, object) {\n        const node = document.createElement(tag);\n\n        // Is it array-like?\n        if (typeof object.length === 'number') {\n            // Be careful here in case object is a live NodeList, which will\n            // mutate as you iterate over it. Applying object to .append()\n            // appears to not have this problem, and will work on arrays.\n            node.append.apply(node, object);\n        }\n        else {\n            assign(node, object);\n        }\n\n        return node;\n    },\n\n    default: (tag) => document.createElement(tag)\n});\n\n/**\ncreate(tag, content)\n\nConstructs and returns a new DOM node.\n\n- If `tag` is `\"text\"` a text node is created.\n- If `tag` is `\"fragment\"` a fragment is created.\n- If `tag` is `\"comment\"` a comment is created.\n- If `tag` is any other string the element `<tag></tag>` is created.\n\nWhere a comment or text node is created `content` must be a string, as is set as\ntextContent. For fragments and other nodes:\n\n- If `content` is a string it is set as innerHTML.\n- If `content` is array-like its items are appended to node. Note that where\n`content` is a NodeList, this removes nodes from whatever the NodeList belongs\nto.\n- If `content` is an object its properties are assigned as node properties or\nattributes.\n\n##### `create(tag, content, context)`\n\nWhere `tag` is `fragment` there is an optional third parameter `context`, which\nmust be an element. The fragment parser is run in the context of this element.\n\n```\ncreate('fragment', '<li>', create('ul'));\n```\n**/\n\nconst create = overload(id, {\n    comment: function(tag, text) {\n        return document.createComment(text || '');\n    },\n\n    fragment: overload(typeofContent, {\n        string: function(tag, html, context) {\n            if (context) {\n                return createContextFragment(context, html);\n            }\n\n            template.innerHTML = html;\n            return template.content.cloneNode(true);\n        },\n\n        object: function(tag, object, context) {\n            // If there is context, create a context-aware fragment\n            const fragment = context ?\n                createContextFragment(context) :\n                document.createDocumentFragment() ;\n\n            // Is object array-like?\n            if (typeof object.length === 'number') {\n                // Be careful here in case object is a live NodeList, which will\n                // mutate as you iterate over it. Applying object to .append()\n                // appears to not have this problem, and will work on arrays.\n                fragment.append.apply(fragment, object);\n            }\n            else {\n                assign(fragment, object);\n            }\n\n            return fragment;\n        },\n\n        default: () => document.createDocumentFragment()\n    }),\n\n    /*text: function (tag, text) {\n        return document.createTextNode(text || '');\n    },*/\n\n    circle:   createSVG,\n    ellipse:  createSVG,\n    g:        createSVG,\n    glyph:    createSVG,\n    image:    createSVG,\n    line:     createSVG,\n    rect:     createSVG,\n    use:      createSVG,\n    path:     createSVG,\n    pattern:  createSVG,\n    polygon:  createSVG,\n    polyline: createSVG,\n    svg:      createSVG,\n    tspan:    createSVG,\n    text:     createSVG,\n\n    default:  createHTML\n});\n\nexport default create;\n\n", "/**\narg(n)\n\nReturns a function that returns `argument[n]`.\n\n```js\n```\n**/\n\nexport default function arg(n) {\n    return function arg() {\n        return arguments[n];\n    };\n}\n", "/**\nid(value)\nReturns `value`.\n**/\n\nexport default function id(value) { return value; }\n", "/**\nnoop()\nDoes nothing, returns undefined.\n**/\n\nexport default function noop() {}\n", "/**\nself()\nReturns `this`.\n*/\n\nexport default function self() { return this; }\n", "\n/**\nnothing\nA frozen array-like and stream-like object that contains no value.\n**/\n\nimport arg  from './arg.js';\nimport id   from './id.js';\nimport noop from './noop.js';\nimport self from './self.js';\n\nconst create = Object.create;\nconst freeze = Object.freeze;\n\nexport default freeze(create(create(Object.prototype, {\n    // Array methods\n    at:        { value: noop },\n    shift:     { value: noop },\n    push:      { value: noop },\n    forEach:   { value: noop },\n    join:      { value: function() { return ''; } },\n    every:     { value: function() { return true; } },\n    filter:    { value: self },\n    find:      { value: noop },\n    findIndex: { value: function() { return -1; } },\n    flat:      { value: self },\n    flatMap:   { value: self },\n    includes:  { value: function() { return false; } },\n    indexOf:   { value: function() { return -1; } },\n    map:       { value: self },\n    reduce:    { value: arg(1) },\n    sort:      { value: self },\n\n   // Stream methods\n    each:      { value: self },\n    pipe:      { value: id },\n    start:     { value: self },\n    stop:      { value: self },\n    done:      { value: self },\n\n    // Primitive coercion\n    valueOf:   { value: function() { return null; } }\n}), {\n    length: { value: 0 }\n}));\n", "/**\nmod(divisor, n)\nJavaScript's modulus operator (`%`) uses Euclidean division, but for\nstuff that cycles through 0 the symmetrics of floored division are often\nare more useful. This function implements floored division.\n**/\n\nexport default function mod(d, n) {\n    return ((n % d) + d) % d ;\n}\n", "\nimport nothing from '../../fn/modules/nothing.js';\nimport mod     from '../../fn/modules/mod.js';\n\n\n/**\nnormaliseNoteName(name)\n\nReplaces the characters `'b'` and `'#'` with the unicode musical characters `'♭'`\nand `'♯'` respectively.\n\n```js\nnormaliseNoteName('Eb6');      // 'E♭6'\n```\n*/\n\nconst rTextSymbol    = /b|#/g;\nconst unicodeSymbols = { 'b': '♭', '#': '♯' };\nconst mod12          = (n) => mod(12, n);\n\nfunction replaceSymbol($0) {\n    return unicodeSymbols[$0];\n}\n\nexport function normaliseNoteName(name) {\n    return name.replace(rTextSymbol, replaceSymbol);\n}\n\n\n/**\ntoNoteNumber(name)\n\nGiven a note name, returns a value in the range 0-127.\n\n```js\ntoNoteNumber('D6');     // 86\n```\n*/\n\nconst rnotename   = /^([A-G][♭♯#b]?)(-?\\d)$/;\nconst rnoteroot   = /^[A-G][♭♯#b]?/;\nconst rnoteoctave = /-?\\d$/;\nconst rhz         = /[Hh]z$/;\n\n/* noteNumbers exported because used by Scribe */\nexport const noteNumbers = {\n    'C':  0, 'C♯': 1, 'C#': 1, 'D♭': 1, 'Db': 1, 'D': 2, 'D♯': 3, 'D#': 3, 'E♭': 3, 'Eb': 3, 'E': 4,\n    'F':  5, 'F♯': 6, 'F#': 6, 'G♭': 6, 'Gb': 6, 'G': 7, 'G♯': 8, 'G#': 8, 'A♭': 8, 'Ab': 8, 'A': 9,\n    'A♯': 10, 'A#': 10, 'B♭': 10, 'Bb': 10, 'B': 11\n};\n\nconst drumNames = {\n    // Roland extension to General MIDI\n    27: 'High Q',\n    28: 'Slap',\n    29: 'Scratch Push',\n    30: 'Scratch Pull',\n    31: 'Sticks',\n    32: 'Square Click',\n    33: 'Metronome Click',\n    34: 'Metronome Bell',\n    // General MIDI\n    35: 'Low Bass Drum',\n    36: 'High Bass Drum',\n    37: 'Side Stick',\n    38: 'Snare Drum 1',\n    39: 'Hand Clap',\n    40: 'Snare Drum 2',\n    41: 'Low Floor Tom',\n    42: 'Closed Hi-hat',\n    43: 'High Floor Tom',\n    44: 'Pedal Hi-hat',\n    45: 'Low Tom',\n    46: 'Open Hi-hat',\n    47: 'Low Mid Tom',\n    48: 'High Mid Tom',\n    49: 'Crash Cymbal 1',\n    50: 'High Tom',\n    51: 'Ride Cymbal 1',\n    52: 'Chinese Cymbal',\n    53: 'Ride Bell',\n    54: 'Tambourine',\n    55: 'Splash Cymbal',\n    56: 'Cowbell',\n    57: 'Crash Cymbal 2',\n    58: 'Vibra Slap',\n    59: 'Ride Cymbal 2',\n    60: 'High Bongo',\n    61: 'Low Bongo',\n    62: 'Mute High Conga',\n    63: 'Open High Conga',\n    64: 'Low Conga',\n    65: 'High Timbale',\n    66: 'Low Timbale',\n    67: 'High Agogo',\n    68: 'Low Agogo',\n    69: 'Cabasa',\n    70: 'Maracas',\n    71: 'Short Whistle',\n    72: 'Long Whistle',\n    73: 'Short Guiro',\n    74: 'Long Guiro',\n    75: 'Claves',\n    76: 'High Wood Block',\n    77: 'Low Wood Block',\n    78: 'Mute Cuica',\n    79: 'Open Cuica',\n    80: 'Mute Triangle',\n    81: 'Open Triangle',\n    // Roland extension to General MIDI\n    82: 'Shaker',\n    83: 'Jingle Bell',\n    84: 'Belltree',\n    85: 'Castanets',\n    86: 'Mute Surdo',\n    87: 'Open Surdo'\n};\n\nfunction slugify(string) {\n    return string.toLowerCase().replace(/\\s+/g, '-');\n}\n\nfor (let n in drumNames) {\n    noteNumbers[slugify(drumNames[n])] = parseInt(n, 10);\n}\n\n\n\n/**\nfrequencyToNote(n, ref = 440)\nReturns note number as a 32bit float from frequency float `n`.\n**/\n\nconst A4 = 69;\n\nexport function frequencyToFloat(freq, ref = 440) {\n    var number = A4 + 12 * Math.log(freq / ref) / Math.log(2);\n\n    // Rounded it to nearest 32-bit value to avoid floating point errors\n    // and return whole semitone numbers where possible.\n    return Math.fround(number);\n}\n\n\n/**\nfloatToFrequency(n, ref = 440)\nReturns frequency from note number float `n`.\n**/\n\nexport function floatToFrequency(n, ref = 440) {\n    return ref * Math.pow(2, (n - A4) / 12);\n}\n\n\n/**\ntoNoteNumber(n)\nReturns note number from a frequency string, note name or drum name.\n\n```js\ntoNoteNumber('A4');       // 69\ntoNoteNumber('440Hz');    // 69\ntoNoteNumber('Cabasa');   // 69\n```\n**/\n\nexport function toNoteNumber(name) {\n    // Name is a number\n    if (typeof name === 'number') return name;\n\n    // Name is a frequency string post-fixed with 'Hz'\n    if (rhz.test(name)) return frequencyToFloat(parseFloat(name));\n\n    const r = rnotename.exec(name);\n\n    return r ?\n        // Name is a pitch string\n        (parseInt(r[2], 10) + 1) * 12 + noteNumbers[r[1]] :\n        // Name is a GM drum string\n        noteNumbers[slugify(name)] ;\n}\n\nexport function toRootNumber(name) {\n    return typeof name === 'number' ?\n        mod12(name) :\n        noteNumbers[rnoteroot.exec(name)[0]] ;\n}\n\n\n/* noteNames exported because used by Scribe, but TODO a toNoteName that returns\na name without an octave. */\nexport const noteNames = [\n    'C', 'C♯', 'D', 'E♭', 'E', 'F', 'F♯', 'G', 'G♯', 'A', 'B♭', 'B'\n];\n\n/**\ntoNoteName(n)\nReturns note name from a value in the range 0-127.\n```js\ntoNoteName(69);       // 'A4'\n```\n*/\n\nexport function toNoteName(n) {\n    return toRootName(n) + toNoteOctave(n);\n}\n\n\n/**\ntoNoteRootName(n)\nWhere `n` is a note number, returns the root name, one of 'C', 'C♯', 'D', 'E♭',\n'E', 'F', 'F♯', 'G', 'G♯', 'A', 'B♭', 'B'.\n*/\n\nexport function toRootName(n) {\n    return noteNames[mod12(n)];\n}\n\n\n/**\ntoNoteOctave(note)\nGiven `n` as a note name or number, returns the numerical octave.\n\n```js\ntoNoteOctave(69);     // 4\n```\n*/\n\nexport function toNoteOctave(n) {\n    return typeof n === 'number' ?\n        Math.floor(n / 12) - 1 :\n        Number(noteNumbers[(rnoteoctave.exec(name) || nothing)[0]]) ;\n}\n\n/**\ntoDrumName(n)\nReturns a standard General MIDI drum name for note number or note name `n`.\n**/\n\nexport function toDrumName(n) {\n    const number = toNoteNumber(n);\n    return drumNames[number] || '';\n}\n", "\nexport const clefTreble      = '&#xE050;';\nexport const clefTrebleDown  = '&#xE052;';\nexport const clefTrebleUp    = '&#xE053;';\nexport const clefAlto        = '&#xE05C;';\nexport const clefBass        = '&#xE062;';\nexport const clefDrum        = '&#xE069;';\nexport const clefPercussion  = '&#xE069;';\n\nexport const timeSig0         = '&#xE080;';\nexport const timeSig1         = '&#xE081;';\nexport const timeSig2         = '&#xE082;';\nexport const timeSig3         = '&#xE083;';\nexport const timeSig4         = '&#xE084;';\nexport const timeSig5         = '&#xE085;';\nexport const timeSig6         = '&#xE086;';\nexport const timeSig7         = '&#xE087;';\nexport const timeSig8         = '&#xE088;';\nexport const timeSig9         = '&#xE089;';\nexport const timeSigCommon    = '&#xE08A;';\nexport const timeSigCutCommon = '&#xE08B;';\n\nexport const acciDoubleFlat  = '&#xE264;';\nexport const acciFlat        = '&#xE260;';\nexport const acciNatural     = '&#xE261;';\nexport const acciSharp       = '&#xE262;';\nexport const acciDoubleSharp = '&#xE263;';\nexport const acciParensLeft  = '&#xE26A;';\nexport const acciParensRight = '&#xE26B;';\n\n// https://w3c.github.io/smufl/latest/tables/noteheads.html\nexport const head1                   = '&#xE0A4;';\nexport const head2                   = '&#xE0A3;';\nexport const head4                   = '&#xE0A2;';\nexport const headBracketLeft         = '&#xE0F5;';\nexport const headBracketRight        = '&#xE0F6;';\nexport const headSlashed2            = '&#xE0D0;';\nexport const headDiamond             = '&#xE0DB;';\nexport const headDiamondWide         = '&#xE0DC;';\nexport const headX                   = '&#xE0A9;';\nexport const headPlus                = '&#xE0AF;';\nexport const headCircle              = '&#xE0E8;';\nexport const headCircleX             = '&#xE0B3;';\nexport const headTriangleUp          = '&#xE0BE;';\nexport const headSlashVerticalEnds   = '&#xE100;';\nexport const headSlashHorizontalEnds = '&#xE101;';\n\n// https://w3c.github.io/smufl/latest/tables/individual-notes.html\nexport const note2Up      = '&#xE1D3;';\nexport const note1Up      = '&#xE1D5;';\nexport const note05Up     = '&#xE1D7;';\nexport const note025Up    = '&#xE1D9;';\nexport const note0125Up   = '&#xE1DB;';\nexport const note2Down    = '&#xE1D4;';\nexport const note1Down    = '&#xE1D6;';\nexport const note05Down   = '&#xE1D8;';\nexport const note025Down  = '&#xE1DA;';\nexport const note0125Down = '&#xE1DC;';\nexport const augmentationDot = '&#xE1E7;';\n\n// https://w3c.github.io/smufl/latest/tables/metronome-marks.html\nexport const metNote2Up    = '&#xECA3;';\nexport const metNote1Up    = '&#xECA5;';\nexport const metNote05Up   = '&#xECA7;';\nexport const metNote2Down  = '&#xECA4;';\nexport const metNote1Down  = '&#xECA6;';\nexport const metNote05Down = '&#xECA8;';\nexport const metDot        = '&#xECB7;';\n\nexport const graceNoteStemUp   = '&#xE560;';\nexport const graceNoteStemDown = '&#xE561;';\n\nexport const tailUp05     = '&#xE240;'\nexport const tailDown05   = '&#xE241;'\nexport const tailUp025    = '&#xE242;'\nexport const tailDown025  = '&#xE243;'\nexport const tailUp0125   = '&#xE244;'\nexport const tailDown0125 = '&#xE245;'\n\n// 200A is a unicode HAIR SPACE, it's needed to seperate rest from dot in Jazz.\n// TODO: do other fonts need it tho?\nexport const rest0125  = '&#xE4E8;';\nexport const rest01875 = '&#xE4E8;&#xE1E7;';\nexport const rest025   = '&#xE4E7;';\nexport const rest0375  = '&#xE4E7;&#xE1E7;';\nexport const rest05    = '&#xE4E6;';\nexport const rest075   = '&#xE4E6;&#xE1E7;';\nexport const rest1     = '&#xE4E5;';\nexport const rest15    = '&#xE4E5;&#x200A;&#xE1E7;';\nexport const rest2     = '&#xE4E4;';\nexport const rest3     = '&#xE4E4;&#x200A;&#xE1E7;';\nexport const rest4     = '&#xE4E3;';\nexport const rest6     = '&#xE4E3;&#x200A;&#xE1E7;';\n\n// These are only supported in Bravura, Petaluma font...\n/*export const braceBegin = '&#xE000';\nexport const braceEnd   = '&#xE001';\nexport const bracket    = '&#xE002';\nexport const bracketTop       = '&#xE003';\nexport const bracketBottom    = '&#xE004';\nexport const bracketEndTop    = '&#xE005';\nexport const bracketEndBottom = '&#xE006';*/\n\nexport const barLine    = '&#xE030';\nexport const barRepeat1 = '&#xE500;';\nexport const barRepeat2 = '&#xE501;';\nexport const barRepeat4 = '&#xE502;';\nexport const barRepeatSlash = '&#xE504;';\nexport const barRepeatUpperDot = '&#xE503;';\nexport const barRepeatLowerDot = '&#xE505;';\n\n// These are only supported in Bravura, Leipzig, Petaluma...\n/*export const barLineDouble = '&#xE031';\nexport const barLineEnd    = '&#xE032';\nexport const barLineBegin  = '&#xE033';\nexport const barLineHeavy  = '&#xE034';*/\n// Not supported by Ash, Broadway, use a fallback font with support\nexport const barRepeatBegin = '&#xE040';\nexport const barRepeatEnd   = '&#xE041';\nexport const barRepeatEndBegin = '&#xE042';\nexport const barRepeatDots = '&#xE043';\n\nexport const coda = '&#xE048';\n\nexport const tuplet0   = '&#xE880;';\nexport const tuplet1   = '&#xE881;';\nexport const tuplet2   = '&#xE882;';\nexport const tuplet3   = '&#xE883;';\nexport const tuplet4   = '&#xE884;';\nexport const tuplet5   = '&#xE885;';\nexport const tuplet6   = '&#xE886;';\nexport const tuplet7   = '&#xE887;';\nexport const tuplet8   = '&#xE888;';\nexport const tuplet9   = '&#xE889;';\n\n// Not supported by any font\n/*export const beamBegin   = '&#xE8E0;';\nexport const beamEnd     = '&#xE8E1;';\nexport const tieBegin    = '&#xE8E2;';\nexport const tieEnd      = '&#xE8E3;';\nexport const slurBegin   = '&#xE8E4;';\nexport const slurEnd     = '&#xE8E5;';\nexport const phraseBegin = '&#xE8E6;';\nexport const phraseEnd   = '&#xE8E7;';*/\n\nexport const chordDiminished      = '&#xE870;';\n// Not supported in Jazz, Ash, Broadway, Leipzig\n/*export const chordDiminishedSmall = '&#xF4D8;';*/\nexport const chordHalfDiminished  = '&#xE871;';\nexport const chordAugmented       = '&#xE872;';\nexport const chordMajorSeventh    = '&#xE873;';\nexport const chordMinor           = '&#xE874;';\nexport const chordParensLeftTall  = '&#xE875;';\nexport const chordParensRightTall = '&#xE876;';\nexport const chordBracketLeft     = '(';\nexport const chordBracketRight    = ')';\nexport const chordBassSlash       = '&#xE87B;';\n\nexport const chordGlyphs = {\n    \"∆♯11\": \"\\uE873\\uED6211\",\n    \"∆\": \"\\uE873\",\n    \"7\": \"7\",\n    \"-7\": \"\\uE8747\",\n    \"-♭6\": \"\\uE874\\uED606\",\n    \"7sus♭9\": \"7sus\\uED62\",\n    \"ø\": \"\\uE871\",\n    \"7♯11\": \"7\\uED6211\",\n    \"-∆\": \"\\uE874\\uE873\",\n    \"∆♭6\": \"\\uE873\\uED606\",\n    \"-♭9\": \"\\uE874\\uED609\",\n    \"ø7\": \"\\uE8717\",\n    \"∆♯5\": \"\\uE873\\uED625\",\n    \"7alt\": \"7alt\",\n    \"°\": \"\\uE870\",\n    \"dim\": \"\\uE870\",\n    \"7♭9\": \"7\\uED60\",\n    \"+7\": \"\\uE8727\",\n};\n\n/* These glyphs are not aligned to centted baseline as other musical symbols\n   are - these are intended for use in paragraph text content */\n\nexport const textNoteShort        = '&#xE1F0;';\nexport const textNoteLong         = '&#xE1F1;';\nexport const textNote8Short       = '&#xE1F2;';\nexport const textNote8Long        = '&#xE1F3;';\nexport const textNote16Short      = '&#xE1F4;';\nexport const textNote16Long       = '&#xE1F5;';\nexport const textBeam8Short       = '&#xE1F7;';\nexport const textBeam8Long        = '&#xE1F8;';\nexport const textBeam16Short      = '&#xE1F9;';\nexport const textBeam16Long       = '&#xE1FA;';\nexport const textDot              = '&#xE1FC;';\nexport const textTie              = '&#xE1FD;';\nexport const textTupletBeginShort = '&#xE1FE';\nexport const textTuplet3Short     = '&#xE1FF';\nexport const textTupletEndShort   = '&#xE200';\nexport const textTupletBeginLong  = '&#xE201';\nexport const textTuplet3Long      = '&#xE202';\nexport const textTupletEndLong    = '&#xE203';\n\n\n\n", "/**\narg(n)\n\nReturns a function that returns `argument[n]`.\n\n```js\n```\n**/\n\nexport default function arg(n) {\n    return function arg() {\n        return arguments[n];\n    };\n}\n", "/**\nself()\nReturns `this`.\n*/\n\nexport default function self() { return this; }\n", "\n/**\nnothing\nA frozen array-like and stream-like object that contains no value.\n**/\n\nimport arg  from './arg.js';\nimport id   from './id.js';\nimport noop from './noop.js';\nimport self from './self.js';\n\nconst create = Object.create;\nconst freeze = Object.freeze;\n\nexport default freeze(create(create(Object.prototype, {\n    // Array methods\n    at:        { value: noop },\n    shift:     { value: noop },\n    push:      { value: noop },\n    forEach:   { value: noop },\n    join:      { value: function() { return ''; } },\n    every:     { value: function() { return true; } },\n    filter:    { value: self },\n    find:      { value: noop },\n    findIndex: { value: function() { return -1; } },\n    flat:      { value: self },\n    flatMap:   { value: self },\n    includes:  { value: function() { return false; } },\n    indexOf:   { value: function() { return -1; } },\n    map:       { value: self },\n    reduce:    { value: arg(1) },\n    sort:      { value: self },\n\n   // Stream methods\n    each:      { value: self },\n    pipe:      { value: id },\n    start:     { value: self },\n    stop:      { value: self },\n    done:      { value: self },\n\n    // Primitive coercion\n    valueOf:   { value: function() { return null; } }\n}), {\n    length: { value: 0 }\n}));\n", "/**\nmod(divisor, n)\nJavaScript's modulus operator (`%`) uses Euclidean division, but for\nstuff that cycles through 0 the symmetrics of floored division are often\nare more useful. This function implements floored division.\n**/\n\nexport default function mod(d, n) {\n    return ((n % d) + d) % d ;\n}\n", "\nimport mod from 'fn/mod.js';\n\n/* mod12()\nFinds the modulus `n % 12`, but using floored division (the JS operator uses\neuclidean division).\n*/\n\nexport default function mod12(n) {\n    return mod(12, n);\n}\n", "\nconst assign   = Object.assign;\nconst define   = Object.defineProperty;\nconst writable = { writable: true };\n\nfunction arrayify(event) {\n    const array = [];\n    let n = -1;\n    while (event[++n] !== undefined) array.push(event[n]);\n    return array;\n}\n\nexport default class Event {\n    constructor() {\n        assign(this, arguments);\n        define(this, 'event',  writable);\n        define(this, 'events', writable);\n        define(this, 'index',  writable);\n        define(this, 'target', writable);\n    }\n\n    toJSON() {\n        return arrayify(this);\n    }\n\n    static of(...data) {\n        return new Event(...data);\n    }\n\n    static from(data, events, index) {\n        const event = new Event(...data);\n        event.event  = data;\n        event.events = events;\n        event.index  = index;\n        return event;\n    }\n\n    static isChordEvent    = isChordEvent;\n    static isNoteEvent     = isNoteEvent;\n    static isSequenceEvent = isSequenceEvent;\n}\n\nexport function isChordEvent(event) {\n    return event[1] === 'chord';\n}\n\nexport function isNoteEvent(event) {\n    return event[1] === 'note';\n}\n\nexport function isSequenceEvent(event) {\n    return event[1] === 'sequence';\n}\n", "\n/**\nget(name, object)\nGet property `name` of `object`.\n*/\n\nimport curry from './curry.js';\n\nexport function get(key, object) {\n    // Todo? Support WeakMaps and Maps and other map-like objects with a\n    // get method - but not by detecting the get method\n    return object[key];\n}\n\nexport default curry(get, true);\n", "\nimport get      from 'fn/get.js';\nimport overload from 'fn/overload.js';\n\nexport default overload(get(1), {\n    chord:    (event) => event[4],\n    lyric:    (event) => event[3],\n    note:     (event) => event[4],\n    sequence: (event) => event[4],\n    // Return 0 duration as default\n    default:  (event) => 0\n});\n", "\nimport toDuration from './to-duration.js';\n\nexport default function toStopBeat(event) {\n    return event[0] + toDuration(event);\n}\n", "\nexport function byGreater(a, b) {\n    return a > b ? 1 :\n        a < b ? -1 :\n        0 ;\n}\n", "\nimport mod12 from './number/mod-12.js';\nimport { byGreater } from './maths.js';\n\nexport const major = [0,2,4,5,7,9,11];\n\n/**\ntransposeScale(notes, tranpose)\nReturns a new scale, that is, an array of unique note numbers in the range\n`0-12`, from an array of note numbers, `notes`.\n**/\n\nfunction unique(value, i, array) {\n    return array.indexOf(value) === i;\n}\n\nexport function transposeScale(scale, transpose) {\n    return scale\n    // Transpose\n    .map((n) => mod12(n + transpose))\n    // Make unique\n    .filter(unique)\n    // Small to big, BTW may not start with 0\n    .sort(byGreater);\n}\n\nexport function transposeScale4ths(scale, transpose) {\n    return transposeScale(scale, transpose * 7);\n}\n", "\nimport overload           from 'fn/overload.js';\nimport { toNoteNumber, toRootNumber, toRootName } from 'midi/note.js';\nimport { isChordEvent, isNoteEvent } from 'sequence/event.js';\nimport toStopBeat         from './event/to-stop-beat.js';\nimport { transposeScale } from './scale.js';\nimport { major }          from './scale.js';\n\nexport default [\n    //                                       C      D       E  F      G      A       B\n    { name: 'C',  symbol: 'C∆',  spellings: [0,  1, 0, -1,  0, 0,  1, 0, -1, 0, -1,  0] },\n    { name: 'D♭', symbol: 'D♭∆', spellings: [0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, -1] },\n    { name: 'D',  symbol: 'D∆',  spellings: [0,  1, 0,  1,  0, 0,  1, 0,  1, 0, -1,  0] },\n    { name: 'E♭', symbol: 'E♭∆', spellings: [0, -1, 0, -1,  0, 0, -1, 0, -1, 0, -1, -1] },\n    { name: 'E',  symbol: 'E∆',  spellings: [0,  1, 0,  1,  0, 1,  1, 0,  1, 0,  1,  0] },\n    { name: 'F',  symbol: 'F∆',  spellings: [0, -1, 0, -1,  0, 0,  1, 0, -1, 0, -1,  0] },\n    { name: 'F♯', symbol: 'F♯∆', spellings: [1,  1, 0,  1,  0, 1,  1, 0,  1, 0,  1,  0] },  // (Should have G##?)\n  //{ name: 'G♭', symbol: 'G♭∆', spellings: [0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, -1] },  // (Should have Ebb?)\n    { name: 'G',  symbol: 'G∆',  spellings: [0,  1, 0, -1,  0, 0,  1, 0,  1, 0, -1,  0] },\n    { name: 'A♭', symbol: 'A♭∆', spellings: [0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, -1] },\n    { name: 'A',  symbol: 'A∆',  spellings: [0,  1, 0,  1,  0, 0,  1, 0,  1, 0,  1,  0] },\n    { name: 'B♭', symbol: 'B♭∆', spellings: [0, -1, 0, -1,  0, 0, -1, 0, -1, 0, -1,  0] },\n    { name: 'B',  symbol: 'B∆',  spellings: [1,  1, 0,  1,  0, 1,  1, 0,  1, 0,  1,  0] }\n];\n\nexport function toKeyScale(key) {\n    return transposeScale(major, key);\n}\n\n\n\nconst { abs } = Math;\n\nconst extensions = {\n    \"\":       [0,4,7],\n    \"∆\":      [0,4,7,11],\n    \"∆7\":     [0,4,7,11],\n    \"∆♯11\":   [0,4,6,7,11],\n    \"7\":      [0,4,7,10],\n    \"13\":     [0,4,7,9,10],\n    \"7sus\":   [0,5,7,10],\n    \"-\":      [0,3,7],\n    \"-7\":     [0,3,7,10],\n    \"-11\":    [0,3,5,7],\n    \"-13\":    [0,3,7,9],\n    \"-♭6\":    [0,3,7,8],\n    \"7sus♭9\": [0,1,5,7,10],\n    \"ø\":      [0,3,6,10],\n    \"-∆\":     [0,3,7,11],\n    \"7♯11\":   [0,4,6,7,10],\n    \"∆♭6\":    [0,4,7,8],\n    \"-♭9\":    [0,1,3,7],\n    \"ø7\":     [0,2,3,6,10],\n    \"∆♯5\":    [0,2,4,6,8,9,11],\n    \"7alt\":   [0,1,3,4,6,8,10],\n    \"°\":      [0,3,6,9],\n    \"7♭9\":    [0,1,4,7,10],\n    \"7♯9\":    [0,3,4,7,10],\n    \"7♭13\":   [0,4,7,8,10],\n    \"+\":      [0,2,4,6,8,10],\n    \"+7\":     [0,2,4,6,8,10],\n    \"dim\":    [0,3,6,9],\n};\n\nconst degreeWeights = Float32Array.of(\n//  Root b9   9    min3 maj3 11   #11  5    b6   13   7    maj7\n    1,   0.9, 0.8, 1,   1,   0.8, 0.8, 1,   0.9, 1,   1,   1\n);\n\nconst modulationWeights = [\n    // Influence of ...\n    // Cycle of  Minor   Major\n    // fourths   thirds  thirds\n    1,                          // Root\n    (1/6       + 0     + 0),    // b9\n    (4/6       + 0     + 0),    // 9\n    (3/6       + 1/9   + 0),    // min3\n    (2/6       + 0     + 1/5),  // maj3\n    (5/6       + 0     + 0),    // 11\n    (0         + 1/11  + 0),    // #11\n    (5/6       + 0     + 0),    // 5\n    (2/6       + 0     + 1/5),  // b6\n    (3/6       + 1/8   + 0),    // 13\n    (4/6       + 0     + 0),    // 7\n    (1/6       + 0     + 0)     // maj7\n];\n\nconst factors = {\n    3: [10/16, 13/16, 10/16],\n    4: [10/16, 13/16, 10/16, 12/16]\n};\n\n/*function toChordKeys(root, ext) {\n    const r       = toRootNumber(root);\n    const notes   = extensions[ext];\n    const weights = Float32Array.of(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);\n    const facts   = factors[notes.length];\n    let n = notes.length, number, keys;\n    while (n--) {\n        number = r + notes[n];\n        keys   = keysContainingNote(number);\n        multiplyWeights(weights, keys, facts[n]);\n    }\n    return weights;\n}*/\n\nfunction toChordNotes(root, ext) {\n    const r = toRootNumber(root);\n    return extensions[ext].map((n) => toRootNumber(r + n)).sort();\n}\n\nfunction keysContainingNote(number) {\n    const keys = new Float32Array(12);\n    let n = toRootNumber(number + 2);\n    let i = 7;\n    while (i--) {\n        n = toRootNumber(n + 5);\n        keys[n] = 1;\n    }\n    return keys;\n}\n\nfunction multiplyWeights(weights1, weights2, factor) {\n//const a = Array.from(weights1, (weight) => weight === 0 ? '     ' : weight.toFixed(3)).join(' ');\n\n    let n = weights1.length;\n    while (n--) weights1[n] *= (1 - factor) + factor * weights2[n];\n/*\nconsole.log('x weights', factor, '\\n'\n    + Array.from({ length: 12 }, (n, i) => (toRootName(i) + '       ').slice(0, 5)).join(' ') + '\\n'\n    + a + '\\n'\n    + Array.from(weights2, (weight) => weight === 0 ? '     ' : weight.toFixed(3)).join(' ') + '\\n'\n    + Array.from(weights1, (weight) => weight === 0 ? '     ' : weight.toFixed(3)).join(' ')\n);\n*/\n    return weights1;\n}\n\nconst types = {\n    note: (weights, event, influence = 1) => {\n        const number = toNoteNumber(event[2]);\n        const probs  = keysContainingNote(number);\n\n        return multiplyWeights(weights, probs, influence\n            // Weight bass notes more importantly than treble notes\n            * (1 - number / 192)\n        );\n    },\n\n    chord: (weights, event, influence = 1) => {\n        const r = toRootNumber(event[2]);\n        const degrees = extensions[event[3].replace(/\\(|\\)/g, '')];\n\n        if (!degrees) {\n            console.warn('No scale for chord extension \"' + event[3] + '\"');\n            return weights;\n        }\n\n        const notes = degrees.map((n) => toRootNumber(r + n));\n\n        let n = notes.length, probs;\n        while (n--) {\n            probs = keysContainingNote(notes[n]);\n            multiplyWeights(weights, probs, (influence / notes.length)\n                // Weight notes based on chord degree\n                * degreeWeights[degrees[n]]\n            );\n        }\n        return weights;\n    }\n}\n\nexport function keyWeightsForEvent(events, n, currentKey) {\n    let event = events[n];\n\n    const beat    = event[0];\n    const weights =\n        isNoteEvent(event)  ? keysContainingNote(toNoteNumber(event[2])) :\n        isChordEvent(event) ? types.chord(Float32Array.of(1,1,1,1,1,1,1,1,1,1,1,1), event) :\n        0 ;\n\n    // Weight by influence of current key\n    if (currentKey !== undefined) {\n        const probs = Float32Array.from({ length: 12 }, (n, i) => modulationWeights[(i + 12 - currentKey) % 12]);\n        multiplyWeights(weights, probs, 0.3);\n    }\n\n    // Weight by influence of surrounding events\n    let m = n;\n    while (event = events[--m]) {\n        const fn = types[event[1]];\n        if (!fn) continue;\n\n        const stopBeat = toStopBeat(event);\n\n        // Events that are playing concurrently\n        if (stopBeat > beat) {\n//console.log('STOPBEAT', event[1]);\n            // Fairly influential 0.5\n            fn(weights, event, 0.5);\n        }\n        // Notes that recently stopped\n        else if (event[1] === 'note' && beat - stopBeat < 3) {\n            if ((1 - (beat - stopBeat) / 3) > 1) throw new Error('Influence should never be > 1 ' + beat + ' ' + stopBeat);\n//console.log('RECENT NOTE', event[2], 0.25 * (1 - (beat - stopBeat) / 3));\n            // Weight by distance from stopBeat to beat\n            fn(weights, event, 0.25 * (1 - (beat - event[0]) / 3));\n        }\n    }\n\n    m = n;\n    // Events in the future\n    while ((event = events[++m]) && event[0] - beat < 2) {\n        if (!isNoteEvent(event)) continue;\n\n        const fn = types[event[1]];\n        if (!fn) continue;\n        if ((1 - (event[0] - beat) / 2) > 1) throw new Error('Influence should never be > 1 ' + beat + ' ' + stopBeat);\n//console.log('FUTURE NOTE', event[2], 0.3 * (1 - (event[0] - beat) / 2));\n        // Weight by distance to startBeat from beat\n        fn(weights, event, 0.3 * (1 - (event[0] - beat) / 2));\n    }\n\n    return weights;\n}\n\n\n// Order search from keys with more accidentals to fewer accidentals so that if\n// we see two keys weighted the same we end up with the one with fewer accidentals\nconst order = [0,7,5,2,10,9,3,4,8,11,1,6];\n\nexport function chooseKeyFromWeights(weights) {\n    let n = order.length;\n    let value = 0, key;\n    while(n--) if (weights[order[n]] > value) {\n        value = weights[order[n]];\n        key   = order[n];\n    }\n    return key;\n}\n", "\n\nexport const rrootname    = /^([A-G])([b#♭♯𝄫𝄪])?/;\nexport const rpitch       = /^([A-G])([b#♭♯𝄫𝄪])?(-?\\d)?$/;\nexport const rflat        = /b|♭/;\nexport const rsharp       = /#|♯/;\nexport const rdoubleflat  = /bb|𝄫/;\nexport const rdoublesharp = /##|𝄪/;\nexport const rflatsharp   = /b|♭|#|♯/g;\n", "\nimport nothing from 'fn/nothing.js';\nimport { noteNames, toNoteNumber, toRootNumber, toNoteOctave } from 'midi/note.js';\nimport mod12      from './number/mod-12.js';\nimport keys       from './keys.js';\nimport { rpitch } from './pitch.js';\n\nconst accidentals = {\n    '-2': '𝄫',\n    '-1': '♭',\n    '0':  '',\n    '1':  '♯',\n    '2':  '𝄪'\n};\n\nexport function spellRoot(key, pitch) {\n    const keyData = keys[key];\n    const n = toRootNumber(pitch);\n    const a = keyData.spellings[mod12(n)];\n    return noteNames[mod12(n - a)] + accidentals[a];\n}\n\nexport function spellPitch(key, pitch) {\n    const keyData = keys[key];\n    let n, a, o;\n\n    if (typeof pitch === 'string') {\n        let [notename, letter, accidental, octave] = rpitch.exec(pitch) || [pitch];\n        if (octave) {\n            // pitch is note name like \"C4\", deconstruct it and put it back together\n            n = toNoteNumber(pitch);\n            a = keyData.spellings[mod12(n)];\n            o = toNoteOctave(n - a);\n        }\n    }\n    else {\n        // pitch is a number\n        n = pitch;\n        a = keyData.spellings[mod12(n)];\n        o = toNoteOctave(n - a);\n    }\n\n    // key.spellings makes sure name is a natural note name\n    const name = noteNames[mod12(n - a)];\n    const accidental = accidentals[a];\n\n    if (window.DEBUG && name === undefined) {\n        throw new Error('Incorrect spelling for pitch number ' + n + ': \"' + name + '\"');\n    }\n\n    return name + accidental + o;\n}\n", "\nimport nothing        from 'fn/nothing.js';\nimport { toNoteName, toNoteNumber, toNoteOctave } from 'midi/note.js';\nimport { spellRoot, spellPitch } from '../spelling.js';\nimport { rflatsharp } from '../pitch.js';\nimport * as glyphs    from \"../glyphs.js\";\n\n\nconst global = globalThis || window;\nconst assign = Object.assign;\nconst { floor, round } = Math;\n\n\n/* Stave */\n\nexport default class Stave {\n    constructor() {}\n\n    /**\n    .clef\n    String containing single clef glyph.\n    **/\n    clef = '';\n\n    /**\n    .pitched\n    A boolean indicating whether this stave supports keys and transposition.\n    **/\n    pitched = true;\n\n    /**\n    .rows\n    An array of row names, from bottom to top of stave. Row names must correspond\n    to those defined for a given stave in CSS.\n    **/\n    rows = nothing;\n\n    /**\n    .getNoteHTML(pitch, dynamic, duration)\n    Get the HTML content used for a note of given `pitch`, `dynamic` and\n    `duration`. For normal chromatic staves only `duration` really matters, but\n    percussion staves may replace heads based on pitch and dynamics.\n    **/\n\n    getNoteHTML(pitch, dynamic, duration) {\n        const name =\n            // Semibreve\n            duration >= 4 ? 'head4' :\n            // Triplet semibreve\n            Math.fround(duration) === Math.fround(2.666666667) ? 'head4' :\n            // Minim\n            duration >= 2 ? 'head2' :\n            // Triplet minim\n            Math.fround(duration) === Math.fround(1.333333333) ? 'head2' :\n            // Everything else\n            'head1' ;\n\n        return `<span class=\"head\" data-glyph=\"${ name }\">${ glyphs[name] }</span>`;\n    }\n\n    /**\n    .minRow, .bottomRow, .centerRow, .topRow, .maxRow\n    Minimum and maximum row numbers supported by the stave. Note that `.minRow`\n    is greater than `.maxRow`. We are counting rows in pitch order.\n    **/\n\n    get maxRow()    { return 0; }\n    get topRow()    { return this.centerRow - 4; }\n    get centerRow() { return floor(0.5 * (this.rows.length - 1)); }\n    get bottomRow() { return this.centerRow + 5; }\n    get minRow()    { return this.rows.length - 1; }\n\n    /**\n    .minPitch, .bottomPitch, .centerPitch, .topPitch, .maxPitch\n    Minimum and maximum pitch names supported by the stave corresponding to the\n    first and last row names in `.rows`, and lower, middle and upper stave pitches\n    corresponding to the lower, middle and upper lines of the stave.\n    **/\n\n    get maxPitch()    { return this.rows[this.maxRow]; }\n    get topPitch()    { return this.rows[this.topRow]; }\n    get centerPitch() { return this.rows[this.centerRow]; }\n    get bottomPitch() { return this.rows[this.bottomRow]; }\n    get minPitch()    { return this.rows[this.minRow]; }\n\n    /**\n    .movePitch(pitch, n)\n    Chromatically transpose `pitch` by `n` semitones within the bounds of\n    `.minPitch` and `.maxPitch`. Should a transposed pitch fall outside this\n    range, returns `undefined`.\n    **/\n    movePitch(pitch, n) {\n        // Chromatic transpose\n        const min    = toNoteNumber(this.minPitch);\n        const max    = toNoteNumber(this.maxPitch);\n        const number = toNoteNumber(pitch) + n;\n        // Don't transpose outside the limits of the stave\n        return number >= min && number <= max ?\n            number :\n            undefined ;\n    }\n\n    /**\n    .getPart(pitch)\n    **/\n\n    parts = [{\n        name:   'main',\n        top:    'stave-top',\n        center: 'stave-center',\n        bottom: 'stave-bottom',\n        DEFAULT: true\n    }];\n\n    getPart(pitch) {\n        return this.parts[0];\n    }\n\n    /**\n    .getRow(part, pitch)\n    Returns the row index of a given pitch name or number. Multi-staff staves\n    require part to know which staff they are positioned upon.\n    **/\n    getRow(part, pitch) {\n        const name = typeof pitch === 'string' ? pitch : toNoteName(pitch) ;\n        const row  = name.replace(rflatsharp, '');\n        const i    = this.rows.indexOf(row);\n        if (global.DEBUG && i === -1) throw new Error('Pitch \"' + pitch + '\" is not supported by stave ' + this.constructor.name);\n        if (i === -1) console.warn('Pitch \"' + pitch + '\" is not supported by stave ' + this.constructor.name);\n        return i > -1 ? i : undefined ;\n    }\n\n    /**\n    .getRowDiff(pitch1, pitch2)\n    Given two pitches `pitch1` and `pitch2`, returns the difference in rows\n    between their rendered positions.\n    **/\n    getRowDiff(pitch1, pitch2) {\n        const i1 = this.getRow(pitch1);\n        const i2 = this.getRow(pitch2);\n        return i2 - i1;\n    }\n\n    /**\n    .getSpelling()\n    Gets spelling of a given pitch. Returns a pitch name string.\n    **/\n    getSpelling(key, event) {\n        return event[1] === 'chord' ?\n            spellRoot(key, event[2]) :\n            spellPitch(key, event[2]) ;\n    }\n\n    /**\n    .yRatioToPitch(y)\n    Used for converting pointer movements to pitch changes.\n    **/\n    yRatioToPitch(y) {\n        const n = floor(y * this.pitches.length);\n        return n < 0 ? this.pitches[0] :\n            n > this.pitches.length - 1 ? this.pitches[this.pitches.length - 1] :\n            this.pitches[n] ;\n    }\n}\n", "\nimport slugify from 'fn/slugify.js';\nimport { toNoteName, toDrumName, toNoteNumber } from 'midi/note.js';\nimport { spellRoot, spellPitch }    from '../spelling.js';\nimport * as glyphs from \"../glyphs.js\";\nimport Stave       from './stave.js';\n\n\nconst global = globalThis || window;\n\n\nfunction toDrumPitch(number) {\n    return toDrumName(number)\n        .toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/-drum|-cymbal/, '');\n}\n\nexport default class DrumStave extends Stave {\n    type = 'drum';\n    clef = glyphs.clefDrum;\n\n    pitched = false;\n\n    rows = [\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"splash chinese\",\n        \"crash-2\",\n        \"crash-1\",\n        \"ride-1 ride-2 ride-bell\",\n        \"closed-hi-hat open-hi-hat\",\n        \"high-tom cowbell\",\n        \"low-mid-tom high-mid-tom\",\n        \"snare-1 snare2 side-stick\",\n        \"low-tom sticks hand-clap tambourine\",\n        \"high-floor-tom\",\n        \"low-floor-tom\",\n        \"low-bass high-bass\",\n        \"\",\n        \"pedal-hi-hat\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\"\n    ];\n\n    #headnames = {\n        31: 'headX',          // Sticks\n        37: 'headCircle',     // Side Stick\n        39: 'headX',          // Hand Clap\n        42: 'headX',          // Closed Hi-Hat\n        44: 'headX',          // Pedal Hi-Hat\n        46: 'headCircleX',    // Open Hi-Hat\n        49: 'headCircleX',    // Crash Cymbal 1\n        51: 'headX',          // Ride Cymbal 1\n        52: 'headCircleX',    // Chinese Cymbal\n        53: 'headDiamond',    // Ride Bell\n        54: 'headX',          // Tambourine\n        55: 'headX',          // Splash Cymbal\n        56: 'headTriangleUp', // Cowbell\n        57: 'headCircleX',    // Crash Symbol 2\n        58: 'headTriangleUp', // Vibraslap\n        59: 'headX'           // Ride Cymbal 2\n    };\n\n\n\n    getNoteHTML(pitch, dynamic, duration) {\n        const number = toNoteNumber(pitch);\n        const name   = this.#headnames[number];\n        const head   = glyphs[name];\n        const html   = name ?\n            `<span class=\"head\" data-glyph=\"${ name }\">${ head }</span>` :\n             super.getNoteHTML(pitch, dynamic, duration) ;\n\n        // Ghost note gets brackets\n        return dynamic < 0.02 ?\n            glyphs.headBracketLeft + html + glyphs.headBracketRight :\n            html ;\n    }\n\n    parts = {\n        drums: {\n            name:   'drums',\n            // Does not need name, existence is enough actually\n            beam:   'drums-beam',\n            stemup: false\n        },\n\n        cymbals: {\n            name:   'cymbals',\n            // Does not need name, existence is enough actually\n            beam:   'cymbals-beam',\n            stemup: true\n        }\n    };\n\n    getPart(pitch) {\n        // Split drums stave into drums and cymbals parts\n        return [35, 36, 37, 38, 40, 41, 43, 44, 45, 47, 50].includes(toNoteNumber(pitch)) ?\n            this.parts.drums :\n            this.parts.cymbals ;\n    }\n\n    /**\n    .getRow(pitch)\n    Returns the row index of a given pitch name or number.\n    **/\n    getRow(part, n) {\n        const pitch = typeof n === 'string' ? n : toDrumPitch(n) ;\n        if (!pitch) throw new Error('Drum name not found for pitch ' + n);\n        const i = this.rows.findIndex((row) => row.includes(pitch));\n        if (global.DEBUG && i === -1) throw new Error('Pitch \"' + pitch + '\" is not supported by stave ' + this.constructor.name);\n        if (i === -1) console.warn('Pitch \"' + pitch + '\" is not supported by stave ' + this.constructor.name);\n        return i > -1 ? i : undefined ;\n    }\n\n    getSpelling(key, event) {\n        if (event[1] === 'note') {\n            // Use standard MIDI note names. We don't want any spelling happening\n            // on drum parts.\n            return toDrumPitch(toNoteNumber(event[2]));\n        }\n\n        return super.getSpelliing(key, event[2]);\n    }\n\n    yRatioToPitch(y) {\n        const i = floor(y * this.rows.length);\n        const j = i < 4 ? 4 : i > 17 ? 17 : i ;\n        return this.pitches[j];\n    }\n}\n", "\nimport { toNoteNumber } from 'midi/note.js';\nimport * as glyphs from \"../glyphs.js\";\nimport DrumStave from './drum.js';\n\n\nexport default class PercussionStave extends DrumStave {\n    type = 'percussion';\n    clef = glyphs.clefPercussion;\n\n    rows = ['','','','','','','','','note','','','','','','','',''];\n\n    get maxPitch() {\n        return this.rows[17];\n    }\n\n    get bottomPitch() {\n        return this.rows[8];\n    }\n\n    get centerPitch() {\n        return this.rows[8];\n    }\n\n    get topPitch() {\n        return this.rows[8];\n    }\n\n    parts = {\n        drums: {\n            name: 'drums',\n            beam: 'drums-beam',\n            stemup: false\n        },\n\n        cymbals: {\n            name: 'cymbals',\n            beam: 'cymbals-beam',\n            stemup: true\n        }\n    };\n\n    getRowDiff(pitch1, pitch2) {\n        // All notes display on one line\n        return 0;\n    }\n}\n", "\nimport * as glyphs from \"../glyphs.js\";\nimport Stave       from './stave.js';\nimport { rflatsharp } from '../pitch.js';\n\n\nconst global = globalThis || window;\n\n\n/**\nA simple piano grand stave which brute splits treble from bass at Bb3.\n**/\n\nexport default class PianoStave extends Stave {\n    type = 'piano';\n    rows = [\n        \"rh-A6\",\n        \"rh-G6\",\n        \"rh-F6\",\n        \"rh-E6\",\n        \"rh-D6\",\n        \"rh-C6\",\n        \"rh-B5\",\n        \"rh-A5\",\n        \"rh-G5\",\n        \"rh-F5\",\n        \"rh-E5\",\n        \"rh-D5\",\n        \"rh-C5\",\n        \"rh-B4\",\n        \"rh-A4\",\n        \"rh-G4\",\n        \"rh-F4\",\n        \"rh-E4\",\n        \"rh-D4\",\n        \"rh-C4\",\n        \"rh-B3\",\n        \"lh-B4 rh-A3\",\n        \"lh-A4 rh-G3\",\n        \"lh-G4 rh-F3\",\n        \"lh-F4 rh-E3\",\n        \"lh-E4 rh-D3\",\n        \"lh-D4\",\n        \"lh-C4\",\n        \"lh-B3\",\n        \"lh-A3\",\n        \"lh-G3\",\n        \"lh-F3\",\n        \"lh-E3\",\n        \"lh-D3\",\n        \"lh-C3\",\n        \"lh-B2\",\n        \"lh-A2\",\n        \"lh-G2\",\n        \"lh-F2\",\n        \"lh-E2\",\n        \"lh-D2\",\n        \"lh-C2\",\n        \"lh-B1\",\n        \"lh-A1\",\n        \"lh-G1\",\n        \"lh-F1\",\n        \"lh-E1\"\n    ];\n\n    getClefHTML() {\n        return `<span class=\"treble-clef clef\">${\n            glyphs.clefTreble\n        }</span><span class=\"bass-clef clef\">${\n            glyphs.clefBass\n        }</span>`;\n    }\n\n    getTimeSigHTML(numerator, denominator, eventId) {\n        return `<span class=\"timesig\" data-event=\"${ eventId }\" data-part=\"rh\">\n            <sup>${ glyphs['timeSig' + numerator] }</sup>\n            <sub>${ glyphs['timeSig' + denominator] }</sub>\n        </span>\n        <span class=\"timesig\" data-event=\"${ eventId }\" data-part=\"lh\">\n            <sup>${ glyphs['timeSig' + numerator] }</sup>\n            <sub>${ glyphs['timeSig' + denominator] }</sub>\n        </span>`;\n    }\n\n    parts = [{}, {\n        name:        'lh',\n        topRow:      29,\n        centerRow:   33,\n        bottomRow:   38,\n        topPitch:    'A3',\n        centerPitch: 'D3',\n        bottomPitch: 'G2',\n        stemup: false,\n        DEFAULT: true\n    }, {\n        name:        'rh',\n        topRow:      9,\n        centerRow:   13,\n        bottomRow:   18,\n        topPitch:    'F5',\n        centerPitch: 'B4',\n        bottomPitch: 'E4',\n        DEFAULT: true\n    }, {\n        name:        'soprano',\n        topRow:      9,\n        centerRow:   13,\n        bottomRow:   18,\n        topPitch:    'F5',\n        centerPitch: 'B4',\n        bottomPitch: 'E4',\n        stemup: true\n    }, {\n        name:        'alto',\n        topRow:      9,\n        centerRow:   13,\n        bottomRow:   18,\n        topPitch:    'F5',\n        centerPitch: 'B4',\n        bottomPitch: 'E4',\n        stemup: false\n    }, {\n        name:        'tenor',\n        topRow:      29,\n        centerRow:   33,\n        bottomRow:   38,\n        topPitch:    'A3',\n        centerPitch: 'D3',\n        bottomPitch: 'G2',\n        stemup: true\n    }, {\n        name:        'bass',\n        topRow:      29,\n        centerRow:   33,\n        bottomRow:   38,\n        topPitch:    'A3',\n        centerPitch: 'D3',\n        bottomPitch: 'G2',\n        stemup: false\n    }];\n\n    /**\n    .getRow(part, pitch)\n    Returns the row index of a given pitch name or number.\n    **/\n    getRow(part, pitch) {\n        pitch = typeof pitch === 'string' ? pitch : toNoteName(pitch) ;\n        const name = part.name + '-' + pitch.replace(rflatsharp, '');\n        const i = this.rows.findIndex((row) => row.includes(name));\n        if (global.DEBUG && i === -1) throw new Error('Pitch \"' + name + '\" is not supported by ' + this.constructor.name);\n        if (i === -1) console.warn('Pitch \"' + name + '\" is not supported by ' + this.constructor.name);\n        return i > -1 ? i : undefined ;\n    }\n\n    getPart(pitch) {\n        return /[012]$|[AC-G][b#♭♯𝄫𝄪]*3$/.test(pitch) ?\n            this.parts[1] :\n            this.parts[2] ;\n    }\n}\n", "\nimport * as glyphs     from \"./glyphs.js\";\nimport Stave           from './stave/stave.js';\nimport DrumStave       from './stave/drum.js';\nimport PercussionStave from './stave/percussion.js';\nimport PianoStave      from './stave/piano.js';\n\nconst assign = Object.assign;\n\nclass TrebleUpStave extends Stave {\n    type = 'treble-up';\n    clef = glyphs.clefTrebleUp;\n    rows = ['C4','D4','E4','F4','G4','A4','B4','C5','D5','E5','F5','G5','A5','B5','C6','D6','E6','F6','G6','A6','B6','C7','D7','E7','F7','G7','A7'];\n}\n\nclass TrebleStave extends Stave {\n    type = 'treble';\n    clef = glyphs.clefTreble;\n    rows = [\n        \"A6\",\n        \"G6\",\n        \"F6\",\n        \"E6\",\n        \"D6\",\n        \"C6\",\n        \"B5\",\n        \"A5\",\n        \"G5\",\n        \"F5\",\n        \"E5\",\n        \"D5\",\n        \"C5\",\n        \"B4\",\n        \"A4\",\n        \"G4\",\n        \"F4\",\n        \"E4\",\n        \"D4\",\n        \"C4\",\n        \"B3\",\n        \"A3\",\n        \"G3\",\n        \"F3\",\n        \"E3\",\n        \"D3\",\n        \"C3\"\n    ];\n}\n\nclass TrebleDownStave extends Stave {\n    type = 'treble-down';\n    clef = glyphs.clefTrebleDown;\n    rows = ['C2','D2','E2','F2','G2','A2','B2','C3','D3','E3','F3','G3','A3','B3','C4','D4','E4','F4','G4','A4','B4','C5','D5','E5','F5','G5','A5'];\n}\n\nclass AltoStave extends Stave {\n    type = 'alto';\n    clef = glyphs.clefAlto;\n    rows = [\n        \"B5\",\n        \"A5\",\n        \"G5\",\n        \"F5\",\n        \"E5\",\n        \"D5\",\n        \"C5\",\n        \"B4\",\n        \"A4\",\n        \"G4\",\n        \"F4\",\n        \"E4\",\n        \"D4\",\n        \"C4\",\n        \"B3\",\n        \"A3\",\n        \"G3\",\n        \"F3\",\n        \"E3\",\n        \"D3\",\n        \"C3\",\n        \"B2\",\n        \"A2\",\n        \"G2\",\n        \"F2\",\n        \"E2\",\n        \"D2\"\n    ];\n}\n\nclass BassStave extends Stave {\n    type = 'bass';\n    clef = glyphs.clefBass;\n    rows = [\n        \"C5\",\n        \"B4\",\n        \"A4\",\n        \"G4\",\n        \"F4\",\n        \"E4\",\n        \"D4\",\n        \"C4\",\n        \"B3\",\n        \"A3\",\n        \"G3\",\n        \"F3\",\n        \"E3\",\n        \"D3\",\n        \"C3\",\n        \"B2\",\n        \"A2\",\n        \"G2\",\n        \"F2\",\n        \"E2\",\n        \"D2\",\n        \"C2\",\n        \"B1\",\n        \"A1\",\n        \"G1\",\n        \"F1\",\n        \"E1\"\n    ];\n}\n\n\n// Register staves by type. Types are the same string used by the clef attribute,\n// as in <scribe-music clef=\"treble\">. Create a stave by type with:\n// Stave.create(type);\n\nStave['treble']      = TrebleStave;\nStave['treble-up']   = TrebleUpStave;\nStave['treble-down'] = TrebleDownStave;\nStave['alto']        = AltoStave;\nStave['bass']        = BassStave;\nStave['piano']       = PianoStave;\nStave['drum']        = DrumStave;\nStave['percussion']  = PercussionStave;\n\n\n/**\nStave.create(type)\nCreate a stave object by type.\n**/\nStave.create = (type) => new Stave[type]();\n\nexport default Stave;\n", "export default {\n    // Spelling\n    spellChordRootCFlatAsB:  true,\n    spellChordRootBSharpAsC: true,\n    spellChordRootESharpAsF: true,\n    spellChordRootFFlatAsE:  true,\n\n    // Swing and shuffle interpretation\n    swingAsStraight8ths:  true,\n    swingAsStraight16ths: true,\n\n    // Allowed head durations\n    headDurations: [\n        1/8, 6/32, /*7/32,*/\n        1/4, 6/16, /*7/16,*/\n        1/2, 6/8,  /*7/8, */\n        1,   6/4,  /*7/4, */\n        2,   6/2,  /*7/2, */\n        4,   6,    /*7,   */\n        8\n    ],\n\n    // Allowed rest durations\n    restDurations: [\n        1/8, 6/32, // 7/32,\n        1/4, 6/16, // 7/16,\n        1/2, 6/8,  // 7/8,\n        1,   6/4,  // 7/4,\n        2,   3,    // 7/2\n        4,   6,\n        8\n    ]\n}\n", "\n/**\nrect(node)\n\nReturns a `DOMRect` object describing the draw rectangle of `node`.\n(If `node` is `window` a preudo-DOMRect object is returned).\n**/\n\nfunction windowBox() {\n\treturn {\n\t\tx:      0,\n\t\ty:      0,\n\t\tleft:   0,\n\t\ttop:    0,\n\t\tright:  window.innerWidth,\n\t\tbottom: window.innerHeight,\n\t\twidth:  window.innerWidth,\n\t\theight: window.innerHeight\n\t};\n}\n\nexport default function rect(node) {\n\treturn node === window ?\n\t\twindowBox() :\n        // In Safari SVG shapes dont get a .getClientRects()[0] so fallback to\n        // .getBoundingClientRect()\n\t\tnode.getClientRects()[0] || node.getBoundingClientRect() ;\n}\n", "\nimport create from 'dom/create.js';\nimport rect   from 'dom/rect.js';\n\n/* Beams */\n\nexport const beamThickness = 1.1;\n\nfunction getDataDuration(note) {\n    return parseFloat(note.dataset.duration);\n}\n\nfunction removeBeamPaths(svg) {\n    const childNodes = svg.childNodes;\n    while (childNodes.length > 1) {\n        svg.removeChild(svg.lastChild);\n    }\n}\n\nfunction renderPathData(range, xs, beam) {\n    return `M${xs[beam[0]]}, ${ -range * xs[beam[0]] - 0.5 * beamThickness }\n        L${xs[beam[beam.length - 1]]},${ -range * xs[beam[beam.length - 1]] - 0.5 * beamThickness }\n        L${xs[beam[beam.length - 1]]},${ -range * xs[beam[beam.length - 1]] + 0.5 * beamThickness }\n        L${xs[beam[0]]}, ${ -range * xs[beam[0]] + 0.5 * beamThickness }\n        Z`;\n}\n\nfunction createBeamPaths(svg, durations, xs, i, range, duration) {\n    // Don't render anything shorter than 32nd note beams\n    if (duration < 0.125) return;\n\n    let n = i - 1;\n    let beam;\n\n    while (durations[++n]) {\n        if (durations[n] <= duration) {\n            // Push to existing beam\n            if (beam) { beam.push(n); }\n            // Or start new beam\n            else { beam = [n]; }\n        }\n        // Render beam\n        else if (beam) {\n            svg.appendChild(create('path', {\n                // Remember duration is the duration of the beam above this one\n                class: `beam-path-${ 4 / duration } beam-path`,\n                d: renderPathData(range, xs, beam)\n            }));\n\n            createBeamPaths(svg, durations, xs, beam[0], range, duration / 2);\n            beam = undefined;\n        }\n    }\n\n    // Render beam\n    if (beam) {\n        svg.appendChild(create('path', {\n            class: `beam-path-${ 4 / duration } beam-path`,\n            d: renderPathData(range, xs, beam)\n        }));\n\n        createBeamPaths(svg, durations, xs, beam[0], range, duration / 2);\n        beam = undefined;\n    }\n}\n\nexport function renderBeam(svg) {\n    const ids       = svg.dataset.events.split(/\\s+/);\n    const parent    = svg.parentElement;\n    const notes     = ids.map((id) => parent.querySelector('.note[data-event=\"' + id + '\"]'));\n    const durations = notes.map(getDataDuration);\n    const box       = svg.viewBox.baseVal;\n    const range =\n        box.y < -0.5 ? box.y + 0.5 :\n        box.height - 1;\n\n    const boxes  = notes.map(rect);\n    const firstX = boxes[0].x;\n    const lastX  = boxes[boxes.length - 1].x;\n    const xs     = boxes.map((box) => (box.x - firstX) / (lastX - firstX));\n\n    removeBeamPaths(svg);\n    createBeamPaths(svg, durations, xs, 0, -range, 0.25);\n}\n", "\nimport id       from 'fn/id.js';\nimport overload from 'fn/overload.js';\nimport { toNoteNumber, toRootNumber } from 'midi/note.js';\n\nexport default overload((n, event) => event[1], {\n    note: (n, event) => {\n        // TODO: do not n GM drum string names\n        event[2] = toNoteNumber(event[2]) + n;\n        return event;\n    },\n\n    chord: (n, event) => {\n        // Root note\n        event[2] = toRootNumber(toRootNumber(event[2]) + n);\n        // Pedal note\n        if (event[5] !== undefined) event[5] = toRootNumber(toRootNumber(event[2]) + n);\n        return event;\n    },\n\n    key: (n, event) => {\n        // TODO: this is supposed to indicate spelling, really\n        event[2] = toRootNumber(toRootNumber(event[2]) + n);\n        return event;\n    },\n\n    default: id\n});\n\n/* Alternative TODO: test speed!\nswitch (event[1]) {\n    case \"note\": {\n        const number = typeof event[2] === 'string' ?\n            toNoteNumber(event[2]) :\n            event[2];\n\n        event[2] = number + transforms[n + 1];\n        break;\n    }\n\n    case \"chord\":\n    case \"key\": {\n        const number = typeof event[2] === 'string' ?\n            toRootNumber(event[2]) :\n            event[2];\n\n        event[2] = mod12(number + transforms[n + 1]);\n        break;\n    }\n}\n*/\n", "\nimport { toNoteNumber, toRootNumber } from 'midi/note.js';\nimport transpose from './event/transpose.js';\nimport mod12 from './number/mod-12.js';\n\n\nconst types = {\n    displace: (transforms, n, event) => {\n        event[0] -= transforms[++n];\n        return n;\n    },\n\n    rate: (transforms, n, event) => {\n        event[0] /= transforms[++n];\n        return n;\n    },\n\n    quantize: (transforms, n, event) => {\n        // TODO: Quantise!\n    },\n\n    transpose: (transforms, n, event) => {\n        transpose(transforms[n + 1], event);\n        return n + 1;\n    }\n};\n\n\nexport default function transform(transforms, event) {\n    let n = -1, type;\n    while (type = transforms[++n]) n = types[type](transforms, n, event);\n    return event;\n}\n", "\nimport Event     from './event.js';\nimport transform from './transform.js';\n\nconst assign = Object.assign;\n\nconst nothing = [];\n\nconst done = {\n    done: true,\n    value: undefined\n};\n\nconst priorities = {\n    // The higher the priority, the earlier an event is ordered when\n    // sorting events\n    key: 2,\n    meter: 1,\n    default: 0\n};\n\nconst temp = {};\n\n\nfunction getPriority(event) {\n    return priorities[event[1]] || priorities.default;\n}\n\nfunction byPriority(b, a) {\n        // a is before b\n    return a[0] < b[0] ? 1 :\n        // a is after b\n        a[0] > b[0] ? -1 :\n        // a and b are at the same time, prioritise by event type\n        getPriority(a) - getPriority(b) ;\n}\n\nfunction insertBy(by, array, object) {\n    let n = -1;\n    while (array[++n] && by(array[n]) <= by(object));\n    array.splice(--n, 0, object);\n    return n;\n}\n\nfunction getSequence(sequences, id) {\n    return sequences.find((sequence) => sequence.id === id);\n}\n\nexport default class SequenceIterator {\n    constructor(events, sequences = nothing, transforms = nothing) {\n        // Sort events by beat and type\n        events.sort(byPriority);\n\n        // Assign properties\n        this.events     = events,\n        this.sequences  = sequences;\n        this.transforms = transforms;\n\n        // Set n to index before first event falling on or after beat\n        let n = -1, event;\n        while ((event = events[++n]) && transform(transforms, assign(temp, event))[0] < 0);\n        this.n = n - 1;\n    }\n\n    next() {\n        const { events, sequences, transforms, n } = this;\n        const event = events[n + 1];\n        const value = event && transform(transforms, Event.from(event, events, n + 1));\n\n        let iterator;\n        let i = -1, j = 0;\n        let b = value ? value[0] : Infinity ;\n        let x;\n        while (iterator = this[++i]) {\n            let value = iterator.value;\n\n            if (!value) {\n                // Get next value from iterator and transform it for current context\n                if (value = iterator.next().value) {\n                    transform(this.transforms, value);\n                    value[0] += iterator.startBeat;\n                    value.target = (value.target || 0) + iterator.target;\n                }\n\n                // If done or beyond stop beat, mark iterator for removal\n                if (iterator.done || value[0] >= iterator.stopBeat) ++j;\n            }\n\n            // Select iterator/value with earliest beat\n            if (value && value[0] < iterator.stopBeat && value[0] < b) {\n                x = iterator;\n                b = value[0];\n            }\n\n            // Remove marked iterators by reassigning remaining iterators\n            if (j) this[i] = this[i + j];\n        }\n\n        if (x) {\n            // Make this iterator value the child iterator's transformed value\n            this.value = x.value;\n            // Mark child iterator as consumed\n            x.value = undefined;\n            return this;\n        }\n\n        // We're out of events TODO: we may not be out of iterators??\n        if (!value) return assign(this, done);\n\n        // Advance index and assign event as this.value\n        this.n += 1;\n        this.value = value;\n\n        // If it is a sequence event spawn a new iterator\n        if (Event.isSequenceEvent(event)) {\n            const sequences = this.sequences;\n            const sequence  = getSequence(sequences, event[2]);\n            if (!sequence) throw new Error('Sequence id \"' + event[2] + '\" not found');\n\n            const iterator = new SequenceIterator(\n                sequence.events,\n                // Join parent sequences to sequences\n                sequence.sequences ?\n                    sequence.sequences.concat(sequences) :\n                    sequences ,\n                // Transforms\n                event.slice(5)\n            );\n\n            // Store info about the event on the iterator object\n            iterator.startBeat = value[0];\n            iterator.stopBeat  = value[0] + value[4];\n            iterator.target    = value[3];\n\n            // Add iterator (indexed as -n) directly to this\n            let i = -1;\n            while (this[++i]);\n            this[i] = iterator;\n        }\n\n        // Return iterator\n        return this;\n    }\n\n    static from(sequence) {\n        return new SequenceIterator(sequence.events, sequence.sequences);\n    }\n\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n", "\nimport getStopBeat from './event/to-stop-beat.js';\n\n\nconst assign = Object.assign;\n\n// Tuplet divisors detected by the algorithm.\nconst tupletDivisors = [2, 3, 4, 5, 6, 7, 9];\n\n// Tuplets producing notes shorter than this duration are ignored.\nconst minTupletDuration = 1/12;\n\n// Tolerance is the minimum score a rhythm must make before being counted as a\n// tuplet. Where all events fall exactly on tuplet divisions a rhythm scores 1.\n// Where all events fall exactly between tuplet divisions a rhythm scores -1.\n// Between these two limits is a range. Rhythms below tolerance are rejected.\nconst tolerance = 0.25;\n\n// The importance of stop beats as compared to start beats.\nconst stopInfluence = 0.2;\n\n\nconst data = {};\nlet score = 0;\n\n\nfunction getScore(wavelength, beat) {\n    return Math.cos(2 * Math.PI * beat / wavelength);\n}\n\nfunction scoreTupletAtBeat(duration, divisor, beat, events, n) {\n    const tupletDuration = duration / divisor;\n\n    let score = 0;\n    let count = 0;\n    // Rhythm is a binary representation of the rhythm where 1 means there are\n    // events in the first division, 10 means there events in the second\n    // division, 100 events in the third and 111 events in all three, etc.\n    let rhythm = 0;\n    let s, r;\n\n    // Did previous event cross into - tie into - tuplet? Mark rhythm as\n    // occupying division 0\n    if (events[n - 1] && getStopBeat(events[n - 1]) > beat + 0.125) {\n        rhythm = 1;\n    }\n\n    // Events before a quarter tuplet are considered the first of a tuplet group\n    --n;\n    while (events[++n] !== undefined && events[n][0] - beat < tupletDuration / 4) {\n        // There's definitely a note in position 0. We're not going to score it,\n        // as division 0 does not in itself make a tuplet. But we do want to\n        // mark it as a populated division.\n        rhythm = 1;\n    }\n\n    // Scan through events up to duration beat less a quarter tuplet\n    --n;\n    while (events[++n] !== undefined && events[n][0] - beat < duration - tupletDuration / 4) {\n        // Rhythmic division number in binary is 2^division\n        s = Math.round((events[n][0] - beat) / tupletDuration);\n        r = 1 << s;\n        // If we have not already filled this division\n        if (s < divisor && r > rhythm) {\n            // Reject large tuplet groups with holes\n            if (divisor > 4 && r > rhythm << 1) return;\n            // Add division to rhythm\n//console.log(beat, duration, divisor, events[n][0] - beat, 'Add r', s, r);\n            rhythm += r;\n        }\n\n        // Score event start\n        score += getScore(tupletDuration, events[n][0] - beat);\n        count += 1;\n\n        // Ignore event stops beyond duration, events may be longer than tuplet\n        if (events[n][0] + events[n][4] - beat > duration) continue;\n\n        // Score event stop\n        score += stopInfluence * getScore(tupletDuration, events[n][0] + events[n][4] - beat);\n        count += stopInfluence;\n    }\n\n    // Detect holes\n    if (divisor > 4 && s !== divisor - 1) return;\n    if (!count) return;\n//console.log(beat, duration, divisor, score, score / (count + 1));\n    // Favour higher counts by adding 1 to count\n    // TODO: Keep this weird number under review!\n    data.score  = score / (count + 1);\n    data.rhythm = rhythm;\n\n    return data;\n}\n\nfunction detectTupletOverDuration(tuplet, duration, events, n, startbeat, divisors, stopBeat) {\n    // n is the index of the first event we are interested in, but there may be an\n    // event that started before startbeat and is still playing, in which case...\n    const beat = events[n - 1] && getStopBeat(events[n - 1]) > startbeat + 0.125 ?\n        // Analyse from startbeat on\n        startbeat :\n        // Analyse from the floored multiple of duration up to this event's beat\n        duration * Math.floor((events[n][0] - startbeat) / duration) + startbeat ;\n\n    // Find greatest divisor producing tuplets longer than minTupletDuration\n    let d = divisors.length;\n    while (duration / divisors[--d] < minTupletDuration);\n    ++d;\n\n    // Loop through lower divisors, keep that with the highest score\n    let divisor, data;\n    while (divisor = divisors[--d]) {\n        // Score tuplet by duration and divisor\n        data = scoreTupletAtBeat(duration, divisor, beat, events, n);\n\n        if (data && data.score >= score && data.score) {\n            score = data.score;\n            tuplet.beat     = beat;\n            tuplet.duration = duration;\n            tuplet.divisor  = divisor;\n            tuplet.rhythm   = data.rhythm;\n        }\n\n        // If first head occurs at or after half a duration of beat\n        if (events[n][0] >= beat + 0.5 * duration && beat + 1.5 * duration < stopBeat) {\n            // Score tuplet offset by half a duration\n            data = scoreTupletAtBeat(duration, divisor, beat + 0.5 * duration, events, n);\n\n            if (data && data.score >= score) {\n                score = data.score;\n                tuplet.beat     = beat + 0.5 * duration;\n                tuplet.duration = duration;\n                tuplet.divisor  = divisor;\n                tuplet.rhythm   = data.rhythm;\n            }\n        }\n    }\n\n    return tuplet;\n}\n\n\n/**\ndetectTuplet(events, beat, duration)\nDetects tuplet and duplet rhythms. Returns a data object with the properties:\n\n```js\n{\n    beat:     // Start beat of tuplet\n    duration: // Duration of tuplet\n    divisor:  // Number of divisions in tuplet\n    rhythm:   // A binary number describing rhythmic divisions\n}\n```\n**/\n\nexport default function detectTuplet(events, beat, duration) {\n    let n = -1;\n\n    // Ignore events up to start `beat`. Beat must be a power of 2 or multiple\n    // of here, so this should not be subject to floating point rounding errors\n    while (events[++n] !== undefined && events[n][0] < beat);\n\n    // If we have found no event, quick out\n    if (!events[n]) return;\n\n    const tuplet = {};\n\n    // Reset score. Use a module-scoped variable, safe only because whole\n    // process is synchronous\n    score = tolerance;\n\n    // Loop upward through power of 2 durations, short to long\n    let d = 1/8;\n    while ((d *= 2) && d <= duration) {\n        detectTupletOverDuration(tuplet, d, events, n, beat, tupletDivisors, beat + duration);\n    }\n\n    return score > tolerance && tuplet;\n}\n", "\nconst { abs, EPSILON } = Math;\n\nexport function round(d, n) {\n    return Math.round(n / d) * d;\n}\n\nexport function eq(a, b, precision = EPSILON) {\n    return a !== undefined && (a === b || abs(a - b) < precision);\n}\n\nexport function lte(a, b, precision) {\n    return eq(a, b, precision) || a < b;\n}\n\nexport function gte(a, b, precision) {\n    return eq(a, b, precision) || a > b;\n}\n\nexport function gt(a, b, precision) {\n    return a !== undefined && b !== undefined && !lte(a, b, precision);\n}\n\nexport function lt(a, b, precision) {\n    return a !== undefined && b !== undefined && !gte(a, b, precision);\n}\n", "\nimport sum from 'fn/sum.js';\n\nexport function ceilPow2(n) {\n    return 2 ** Math.ceil(Math.log2(n));\n}\n\nexport function floorPow2(n) {\n    return 2 ** Math.floor(Math.log2(n));\n}\n\nexport function roundPowerOf2(n) {\n    return 2 ** Math.round(Math.log2(n));\n}\n\nexport function averagePowerOf2(...values) {\n    return 2 ** (values.map(Math.log2).reduce(sum, 0) / values.length);\n}\n\nexport function isPowerOf2(n) {\n    return n > 0 && (n & (n - 1)) === 0;\n}\n", "\nimport mod from 'fn/mod.js';\nimport { eq } from './float.js';\n\n/*\ngrainPower2(n)\ngrainPower2(n, min, max)\nFinds the closest power-of-two number that fits into number `n` with no\nremainder. Where given, `min` and `max` must be power-of-two numbers.\n*/\n\nexport default function grainPower2(min, max, n) {\n    // If n is 0 we can say we are on the maximum grain\n    if (eq(0, n, min / 2)) return max;\n\n    let g = max * 2;\n    while ((g /= 2) > min) {\n        if (eq(0, mod(g, n), min / 2)) return g;\n    }\n    return g;\n}\n", "/* Array-like functions that operate on plain objects */\n\nexport default function push(object, value) {\n    let n = -1, a = 0;;\n    while (object[++n] !== undefined);\n    while (arguments[++a] !== undefined) object[n++] = arguments[a];\n    return object;\n}\n", "export default function lengthOf(object) {\n    let n = -1;\n    while (object[++n] !== undefined);\n    return n;\n}\n", "import lengthOf from './length-of.js';\n\nexport default function join(object) {\n    return object[lengthOf(object) - 1];\n}\n", "\nexport default function map(fn, object) {\n    const array = [];\n    let n = -1;\n    while (object[++n] !== undefined) array.push(fn(object[n], n));\n    return array;\n}\n", "\nimport get      from 'fn/get.js';\nimport { toNoteName, toNoteNumber, toRootName, toRootNumber } from 'midi/note.js';\nimport { keyWeightsForEvent, chooseKeyFromWeights } from './keys.js';\nimport { rflat, rsharp, rdoubleflat, rdoublesharp } from './pitch.js';\nimport { getDivision } from './bar.js';\nimport detectTuplets from './tuplet.js';\nimport { round as roundTo, eq, gte, lte, lt, gt } from './number/float.js';\nimport { floorPow2, ceilPow2, isPowerOf2 } from './number/power-of-2.js';\nimport grainPow2   from './number/grain-pow-2.js';\nimport push        from './object/push.js';\nimport last        from './object/last.js';\nimport lengthOf    from './object/length-of.js';\nimport map         from './object/map.js';\nimport getDuration from './event/to-duration.js';\nimport getStopBeat from './event/to-stop-beat.js';\nimport config      from './config.js';\n\nconst assign = Object.assign;\nconst { abs, ceil, floor, min, max, sqrt, round } = Math;\n\n/* When dealing with rounding errors we only really need beat grid-level\n   precision, our display grid has 24 slots but we only need to compare the\n   smallest possible note values, 32nd notes, or ±1/16 precision */\nconst p16 = 1/16;\nconst p24 = 1/24;\n\n\nfunction average(a, n, i, array) {\n    return a + n / array.length;\n}\n\n\n/* Events */\n\nfunction toMaxStopBeat(n, event) {\n    return max(n, getStopBeat(event));\n}\n\nfunction getPitches(stave, key, notes) {\n    const pitches = {};\n    let n = -1;\n    let note;\n    while (note = notes[++n]) {\n        const events     = note.scribeEvents;\n        const index      = note.scribeIndex;\n        const keyWeights = keyWeightsForEvent(events, index, key);\n        const keyNumber  = chooseKeyFromWeights(keyWeights);\n        pitches[n] = stave.getSpelling(keyNumber, note);\n    }\n\n    return pitches;\n}\n\n\n/* Pitches */\n\nfunction getMinPitchRow(stave, part, pitches) {\n    let n = -1, row = 0;\n    let pitch, r;\n    while (pitches[++n]) {\n        r = stave.getRow(part, pitches[n]);\n        // r may be out of range oof this stave\n        if (r === undefined) continue;\n        // The bigger r, the lower the pitch\n        if (r > row) {\n            row   = r;\n            pitch = pitches[n];\n        }\n    }\n    return { row, pitch };\n}\n\nfunction getMaxPitchRow(stave, part, pitches) {\n    let n = -1, row = 128;\n    let pitch, r;\n    while (pitches[++n]) {\n        r = stave.getRow(part, pitches[n]);\n        // r may be out of range oof this stave\n        if (r === undefined) continue;\n        // The smaller r, the higher the pitch\n        if (r < row) {\n            row   = r;\n            pitch = pitches[n];\n        }\n    }\n    return { row, pitch };\n}\n\n\n/* Stems */\n\nfunction stemupFromRows(stave, part, minRow, maxRow) {\n    const centerRow = part.centerRow || stave.centerRow;\n    const minDiff   = minRow - centerRow;\n    const maxDiff   = maxRow - centerRow;\n    return maxDiff + minDiff > 0;\n}\n\nfunction stemupFromPitches(stave, part, pitches) {\n    const { row: minRow } = getMinPitchRow(stave, part, pitches);\n    const { row: maxRow } = getMaxPitchRow(stave, part, pitches);\n    return stemupFromRows(stave, part, minRow, maxRow);\n}\n\nfunction stemupFromSymbols(stave, part, symbols) {\n    const pitches = [];\n    let n = -1, symbol;\n    while (symbol = symbols[++n]) {\n        if (symbol.type === 'note') pitches.push(symbol.pitch);\n    }\n    return stemupFromPitches(stave, part, pitches);\n}\n\n\n/* Beams */\n\nfunction closeBeam(symbols, stave, part, beam) {\n    // Scan through beam symbols to find note not on beat of beam\n    let n = -1;\n    while (beam[++n] && beam[n].beat === beam.beat);\n    // If there is only notes on start beat of beam, no beam needed\n    if (!beam[n]) return symbols;\n\n    const startBeat  = beam[0].beat;\n    const stopBeat   = last(beam).beat;\n    const duration   = stopBeat - startBeat;\n    const stemup = part.stemup === undefined ?\n        // Calculate stem up or down\n        stemupFromPitches(stave, part, map(get('pitch'), beam)) :\n        // Get stem direction from part\n        part.stemup ;\n\n\n    // If part has beam beams are in a fixed position\n    if (part.beam) {\n        // TEMP: DO it better\n        let note;\n\n        // Apply beamed properties to note symbols\n        n = -1;\n        while (note = beam[++n]) {\n            note.stemup = stemup;\n            note.beam   = beam;\n        }\n\n        //console.log('TODO: Beam has fixed position according to part', part.beam);\n        // Push the beam into symbols\n        symbols.push(assign(beam, {\n            duration,\n            stemup,\n            range: 0\n        }));\n\n        return symbols;\n    }\n\n    // Calculate beam positions\n    const rows = [];\n\n    let note;\n    n = -1;\n    while (note = beam[++n]) {\n        let row = stave.getRow(part, note.pitch);\n        // row may be out of range oof this stave\n        if (row === undefined) continue;\n\n        let r;\n\n        // Find highest or lowest pitch at beat of note\n        while (beam[++n] && eq(beam[n].beat, note.beat, p24)) {\n            r = stave.getRow(part, beam[n].pitch);\n            // row may be out of range oof this stave\n            if (r === undefined) continue;\n            if (stemup) { if (r < row) row = r; }\n            else { if (r > row) row = r; }\n        }\n        --n;\n\n        // Push it into pitches\n        rows.push(row);\n    }\n\n    const beamLength = rows.length - 1;\n    const beginRow   = rows.slice(0, floor(0.5 * rows.length)).reduce(average, 0);\n    const endRow     = rows.slice(ceil(0.5 * rows.length)).reduce(average, 0);\n    // This (0.2 + 0.1 * beamLength) determines the angle of the beam\n    const positions  = Array.from(rows, (r, i) => (0.2 + 0.1 * beamLength) * i * (endRow - beginRow) / beamLength);\n    const range      = positions[positions.length - 1] - positions[0];\n\n    let diff = stemup ? -50 : 50, d;\n    n = rows.length;\n    while (n--) {\n        d = positions[n] - rows[n];\n        diff = stemup ?\n            d > diff ? d : diff :\n            d < diff ? d : diff ;\n    }\n\n    n = rows.length;\n    while (n--) positions[n] -= diff + rows[0];\n\n    // Apply beamed properties to note symbols and stem heights\n    let r = -1;\n    n = -1;\n    while (note = beam[++n]) {\n        ++r;\n        note.stemup = stemup;\n        note.beam   = beam;\n        note.stemHeight = stemup ?\n            1 - 0.125 * (positions[n] - rows[n] + rows[0]) :\n            1 + 0.125 * (positions[n] - rows[n] + rows[0]) ;\n\n        // Find highest or lowest pitch at beat of note\n        while (beam[++n] && eq(beam[n].beat, note.beat, p16)) {\n            beam[n].stemup     = stemup;\n            beam[n].beam       = beam;\n            beam[n].stemHeight = note.stemHeight;\n        }\n        --n;\n    }\n\n    // Push the beam into symbols\n    symbols.push(assign(beam, {\n        pitch: beam[0].pitch,\n        y:     positions[0],\n        duration,\n        stemup,\n        range\n    }));\n\n    return symbols;\n}\n\n\n/* Rests */\n\nfunction fitDottedDuration(min, duration) {\n    let grain = 2 * ceilPow2(duration);\n    while ((grain /= 2) > min / 2) {\n        if (1.75 * grain === duration) return 1.75 * grain;\n        if (1.5  * grain === duration) return 1.5  * grain;\n        if (grain <= duration) return grain;\n    }\n    return min;\n}\n\nfunction fitRoundedUpDuration(min, duration, maxDuration) {\n    maxDuration = maxDuration || Infinity;\n    let grain = 4 * ceilPow2(duration);\n    while ((grain /= 2) > min / 2) {\n        if (grain <= duration * 2 && grain <= maxDuration) return grain;\n    }\n    return min;\n}\n\nfunction fitDuration(durations, bar, startBeat, stopBeat, beat, eventBeat) {\n    // Some analysis of beats...\n    const minGrain = 0.125;\n    const maxGrain = floorPow2(bar.divisor);\n    const div1     = floor(beat / bar.divisor) * bar.divisor;\n    const grain    = grainPow2(minGrain, maxGrain, beat - div1);\n    const div2     = floor(stopBeat / bar.divisor) * bar.divisor;\n    const division = div1 + bar.divisor < stopBeat && div1 + bar.divisor;\n\n    // Decision tree\n    // Beat is on a divisor\n    if (beat === div1) {\n        // TODO: Something\n        if (eventBeat) {}\n        // Beat to stop beat is a valid head duration\n        if (durations.indexOf(stopBeat - beat) !== -1) return stopBeat - beat;\n        // If beat to last division is a valid duration\n        if (durations.indexOf(div2 - beat) !== -1) return div2 - beat;\n        // Beat to divisor\n        if (division) return division - beat;\n        //\n        return fitRoundedUpDuration(0.125, stopBeat - beat, eventBeat - beat);\n    }\n    // Stop beat is on a divisor\n    else if (eq(stopBeat, div2, p16)) {\n        // If beat to stop beat is a valid duration use it\n        if (durations.indexOf(stopBeat - beat) !== -1) return stopBeat - beat;\n        // Otherwise up to the nearest division\n        if (division && durations.indexOf(division - beat) !== -1) return division - beat;\n        // Otherwise fill the grain\n        return grain;\n    }\n    else {\n        const quadDuration = 4 * grain;\n        const quadIndex    = ((beat - div1) % quadDuration) / grain;\n\n        if (quadIndex === 1) {\n            // If this note takes us up to note at 0001 render the duration 0--0\n            if (beat + 2 * grain === eventBeat) return 2 * grain;\n\n            // Is event inside the quadruplet?\n            if (beat + 3 * grain >= eventBeat) {\n                console.log('Next event beat is inside quaduplet');\n            }\n\n            // Grain is less than 1\n            return grain < 1 ?\n                // If stop beat is greater than half of three grains render duration 0---\n                stopBeat >= beat + grain * 3/2 ? 3 * grain :\n                // Otherwise render duration 0-00\n                stopBeat >= beat + grain ? grain :\n                // Stop beat is smaller than grain, fit an appropriate duration\n                fitDottedDuration(0.125, stopBeat - beat) :\n            // Grain is 1 or greater and\n                // stop beat is after 3 grains render 0---\n                stopBeat >=  beat + grain * 3 ? grain * 3 :\n                // Stop beat is after 2 grains render 0--0\n                stopBeat >=  beat + grain * 2 ? grain * 2 :\n                // Stop beat is after 1 grain render  0-00\n                stopBeat > beat + grain ? grain :\n                // Stop beat is shorter than a grain\n                fitDottedDuration(0.125, stopBeat - beat) ;\n        }\n\n            // stop beat is after 4th grain render 000-\n        return stopBeat > beat + grain ? grain :\n            // Stop beat is shorter than grain\n            fitDottedDuration(0.125, stopBeat - beat) ;\n    }\n}\n\nfunction createRest(durations, bar, stave, part, stopBeat, beat) {\n    // Create rest symbol\n    return {\n        type: 'rest',\n        beat,\n        duration: fitDuration(durations, bar, beat, stopBeat, beat, stopBeat),\n        stave,\n        part\n    };\n}\n\nfunction createRests(symbols, durations, bar, stave, part, beat, tobeat) {\n    // Insert rests frombeat - tobeat\n    while (gt(tobeat, beat, p16)) {\n        const rest = createRest(durations, bar, stave, part, tobeat, beat);\n        symbols.push(rest);\n        beat += rest.duration;\n    }\n\n    return tobeat;\n}\n\n\n/* Accidentals */\n\nfunction createAccidental(symbols, bar, stave, part, accidentals, beat, event, pitch) {\n    const acci =\n        rsharp.test(pitch) ? 1 :\n        rflat.test(pitch) ? -1 :\n        undefined ;\n\n    // Line name is note name + octave (no # or b)\n    const line = pitch[0] + pitch.slice(-1);\n\n    if (\n        // If event started before this bar we don't require an accidental\n        gte(event[0], bar.beat, p16)\n        // and if it has changed from the bars current accidentals\n        && acci !== accidentals[line]\n    ) {\n        // Alter current state of bar accidentals\n        accidentals[line] = acci;\n        symbols.push(assign({}/*, head*/, {\n            type: 'acci',\n            beat,\n            pitch,\n            part,\n            stave,\n            event,\n            value: acci || 0\n        }));\n    }\n}\n\nfunction createAccidentals(symbols, bar, stave, part, accidentals, beat, notes, pitches) {\n    let n = -1;\n    while (pitches[++n]) createAccidental(symbols, bar, stave, part, accidentals, beat, notes[n], pitches[n]);\n    return beat;\n}\n\n\n/* Ledger lines */\n\nfunction createLedges(symbols, stave, part, beat, pitches) {\n    // Up ledger lines\n    const { row: maxRow, pitch: maxPitch } = getMaxPitchRow(stave, part, pitches);\n    // Ledges begin two rows away from topPitch, which is the top line\n    let rows = maxRow - (part.topRow || stave.topRow) + 1;\n    if (rows < 0) symbols.push({\n        type: 'ledge',\n        beat,\n        pitch: maxPitch,\n        part,\n        rows\n    });\n\n    // Down ledger lines\n    const { row: minRow, pitch: minPitch } = getMinPitchRow(stave, part, pitches);\n    // Ledges begin two rows away from bottomPitch, which is the bottom line\n    rows = minRow - (part.bottomRow || stave.bottomRow);\n    if (rows > 0)  symbols.push({\n        type: 'ledge',\n        beat,\n        pitch: minPitch,\n        part,\n        rows\n    });\n}\n\n\n/* Symbols */\n\nfunction closeTuplet(stave, part, tuplet) {\n    const { beat, duration, divisor } = tuplet;\n\n    // Stem direction\n    const stemup = part.stemup === undefined ?\n        stemupFromSymbols(stave, part, tuplet) :\n        part.stemup ;\n\n    // Apply stem direction to notes\n    let n = -1, symbol;\n    while (symbol = tuplet[++n]) {\n        if (symbol.type === 'note' && !symbol.beam) symbol.stemup = stemup;\n    }\n\n    // Decide on tuplet pitch, effectively vertical row position\n    const centreBeat = beat + 0.5 * duration;\n\n    // Encourage lowest pitch to be 1 octave below top line, ensuring\n    // triplet (with appropriate styling) always sits above the top line\n    const lowestPitchNumber = toNoteNumber(stave.topPitch) - 12;\n\n    let centreNumber;\n    let h = lengthOf(tuplet);\n    // Scan backwards through tuplet until last symbol before centre beat\n    while ((symbol = tuplet[--h]) && symbol.beat > centreBeat);\n    ++h;\n\n    // Scan backwards through tuplet that cross centre beat, get highest pitch\n    while ((symbol = tuplet[--h]) && symbol.beat + symbol.duration > centreBeat) {\n        const number = toNoteNumber(symbol.pitch);\n        if (!centreNumber || number > centreNumber) centreNumber = number;\n    }\n\n    // Scan forwards from first symbol finding highest pitch beginning head\n    let firstNumber = lowestPitchNumber;\n    h = -1;\n    while ((symbol = tuplet[++h]) && symbol.beat < beat + p16) {\n        const number = toNoteNumber(symbol.pitch);\n        if (!firstNumber || number > firstNumber) firstNumber = number;\n    }\n\n    // Scan backwards from last symbol finding highest pitch ending symbol\n    let lastNumber = lowestPitchNumber;\n    h = lengthOf(tuplet);\n    while ((symbol = tuplet[--h]) && symbol.beat > beat + duration - (duration / divisor) - p16) {\n        const number = toNoteNumber(symbol.pitch);\n        if (!lastNumber || number > lastNumber) lastNumber = number;\n    }\n\n    const avgNumber = Math.ceil((firstNumber + lastNumber) / 2);\n    const avgPitch  = toNoteName(avgNumber);\n    if (avgNumber > centreNumber) centreNumber = avgNumber;\n\n    tuplet.pitch  = toNoteName(centreNumber);\n    tuplet.stemup = stemup;\n\n    const diff = lastNumber - firstNumber;\n    tuplet.angle = diff < 0 ?\n        4 * sqrt(-diff) :\n        -4 * sqrt(diff) ;\n}\n\nfunction createTuplet(symbols, bar, stave, key, accidentals, part, settings, beat, duration, divisor, rhythm, notes, events, n) {\n    // Check if we are to interpret swung 8ths or 16ths as straight 8ths or 16ths.\n    // Rhythm is a binary representation of filled divisions where 1 (1) means\n    // an event in the first division, 10 (2) an event in the second division,\n    // 100 (4) an event in the third, and 101 (5) events in first and third, etc.\n    if ((settings.swingAsStraight8ths && duration === 1 || settings.swingAsStraight16ths && duration === 0.5)\n        && divisor === 3\n        && (rhythm === 4 || rhythm === 5)\n    ) {\n        divisor = 2;\n    }\n\n    const division = duration / divisor;\n    const stopBeat = beat + duration;\n    const tuplet   = {\n        type: 'tuplet',\n        beat,\n        duration,\n        divisor,\n        rhythm,\n        part,\n        stave\n    };\n\n    let event, beam;\n\n    // If divisor is not power of two push tuplet symbol\n    if (!isPowerOf2(divisor)) symbols.push(tuplet);\n\n    // While beat is before end of tuplet\n    while (lt(beat, stopBeat, p24)) {\n        // Fill notes with events playing during beat, and leave event as the\n        // next event after beat\n        while ((event = events[++n]) && lte(event[0] - bar.beat, beat + 0.5 * division, p24)) {\n            notes.push(event);\n        }\n        --n;\n\n        // Insert rest\n        if (!notes.length) {\n            symbols.push({ type: 'rest', beat, duration: division, stave, part });\n            beat += division;\n            continue;\n        }\n\n        // Insert heads\n        const pitches  = getPitches(stave, key, notes);\n        //const minPitch = getMinPitch(pitches);\n        //const maxPitch = getMaxPitch(pitches);\n        const { row: minRow, pitch: minPitch } = getMinPitchRow(stave, part, pitches);\n        const { row: maxRow, pitch: maxPitch } = getMaxPitchRow(stave, part, pitches);\n        const stemup = part.stemup === undefined ?\n            stemupFromRows(stave, part, minRow, maxRow) :\n            part.stemup ;\n\n        const stopBeat = min(\n            // Max stop beat of notes\n            notes.reduce(toMaxStopBeat, 0) - bar.beat,\n            // Start beat of next event, if it exists, or end of bar\n            event ? event[0] - bar.beat : bar.duration,\n            // Beat at end of tuplet\n            tuplet.beat + tuplet.duration\n        );\n\n        const duration = max(\n            // Min duration is 1 tuplet division\n            division,\n            // Distance to stop beat rounded to nearest division\n            roundTo(division, stopBeat - beat)\n        );\n\n        // Manage beam\n        if (gt(duration, 0.5, p24)) {\n            // If there is a beam, close it\n            if (beam) {\n                closeBeam(symbols, stave, part, beam);\n                beam = undefined;\n            }\n        }\n        else if (!beam) beam = {\n            type: 'beam',\n            beat,\n            part\n        };\n\n        // Create ledgers and accidentals\n        createLedges(symbols, stave, part, beat, pitches);\n        createAccidentals(symbols, bar, stave, part, accidentals, beat, notes, pitches);\n\n        let p = -1;\n        while (notes[++p]) symbols.push({\n            type: 'note',\n            beat,\n            pitch: pitches[p],\n            duration,\n            part,\n            stemup,\n            top:    pitches[p] === maxPitch,\n            bottom: pitches[p] === minPitch,\n            stave,\n            event: notes[p]\n        });\n\n        // Push note symbols on to tuplet\n        push(tuplet, ...symbols.slice(-1 * notes.length));\n        // Push note symbols on to beam\n        if (beam) push(beam, ...symbols.slice(-1 * notes.length));\n\n        // Remove notes or insert ties\n        p = notes.length;\n        while (p--) {\n            let stopBeat = getStopBeat(notes[p]) - bar.beat;\n            // Remove notes that end before or near next division, we're done with them\n            if (lte(stopBeat, beat + duration + 0.5 * division, p24)) notes.splice(p, 1);\n            // Add tie to remaining notes\n            else symbols.push({\n                type:   'tie',\n                beat,\n                pitch: pitches[p],\n                duration,\n                stemup,\n                part,\n                event: notes[p]\n            });\n        }\n\n        // Update beat\n        beat += duration;\n    }\n\n    if (beam) closeBeam(symbols, stave, part, beam);\n\n    closeTuplet(stave, part, tuplet);\n\n    return n;\n}\n\nexport function createPart(symbols, bar, stave, key = 0, accidentals = {}, part, events, settings = config) {\n    const notes = [];\n    const { headDurations, restDurations } = settings;\n\n    let beat = 0;\n    let n = -1;\n    let event, duration, beam;\n\n    // Ignore events that stop before beat 0. An extra cautious measure because\n    // events array should already start with events at beat 0\n    while ((event = events[++n]) && lte(event[0] + event[4] - bar.beat, beat, p16));\n    --n;\n\n    while (lt(beat, bar.duration, p16)) {\n        // If there's a beam and beat is on a division close it\n        if (beam && bar.divisions.find((division) => eq(beat, division, p16))\n            // or head started after a new division\n            // || getDivision(bar.divisions, , beat)\n        ) {\n            closeBeam(symbols, stave, part, beam);\n            beam = undefined;\n        }\n\n        // If we are not currently in tuplet mode detect the next tuplet\n        const data = detectTuplets(events, bar.beat + beat, bar.duration - beat);\n\n//if (data) console.log(bar.beat, beat, n, event, 'TUPLETS', data.beat, data.duration, 'divisor', data.divisor, data.rhythm, n, events);\n//else console.log(bar.beat, beat, 'DUPLETS', n, events);\n//if (data) console.log(bar.count, beat, 'Rhythm', data.duration, data.divisor, data.rhythm.toString(2).split('').reverse().join(''));\n\n        if (data && data.divisor !== 2 && data.divisor !== 4) {\n            // Create rests up to tuplet\n            if (gt(data.beat - bar.beat, beat, p16)) createRests(symbols, settings.restDurations, bar, stave, part, beat, data.beat - bar.beat);\n            // Close beam TODO dont close beam\n            if (beam) {\n                closeBeam(symbols, stave, part, beam);\n                beam = undefined;\n            }\n            // Render tuplet\n            n = createTuplet(symbols, bar, stave, key, accidentals, part, settings, data.beat - bar.beat, data.duration, data.divisor, data.rhythm, notes, events, n);\n            // Update beat\n            beat = data.beat - bar.beat + data.duration;\n            //\n            continue;\n        }\n\n        // Fill notes with events playing during beat, and leave event as the\n        // next event after beat\n        while ((event = events[++n]) && lte(event[0] - bar.beat, beat, p16)) {\n            notes.push(event);\n        }\n        --n;\n\n        // Insert rests\n        if (!notes.length) {\n            if (!event) {\n                // If beam close it\n                if (beam) {\n                    // Close the current beam\n                    closeBeam(symbols, stave, part, beam);\n                    beam = undefined;\n                }\n\n                // Fill rest of bar with rests\n                createRests(symbols, settings.restDurations, bar, stave, part, beat, bar.duration);\n                break;\n            }\n\n            // Create rests up to next event\n            const stopBeat = roundTo(0.125, event[0] - bar.beat);\n\nif (stopBeat <= beat) {\n    console.log(`Problem at bar ${ bar.count }, moving to next bar ${ beat } ${ stopBeat }`);\n    bar.error = 'Stop beat has ended up less than beat';\n    break;\n}\n\n            if (beam && (\n                // If beam would cross a division\n                getDivision(bar.divisions, beat, stopBeat)\n                // If beam would have a rest longer than an eighth note\n                || stopBeat - beat >= 0.5\n            )) {\n                // Close the current beam\n                closeBeam(symbols, stave, part, beam);\n                beam = undefined;\n            }\n\n            createRests(symbols, restDurations, bar, stave, part, beat, stopBeat);\n            beat = stopBeat;\n            continue;\n        }\n\n        const pitches  = getPitches(stave, key, notes);\n        const { row: minRow, pitch: minPitch } = getMinPitchRow(stave, part, pitches);\n        const { row: maxRow, pitch: maxPitch } = getMaxPitchRow(stave, part, pitches);\n        const stemup   = part.stemup === undefined ?\n            stemupFromRows(stave, part, minRow, maxRow) :\n            part.stemup ;\n\n        // Create ledgers and accidentals\n        createLedges(symbols, stave, part, beat, pitches);\n        createAccidentals(symbols, bar, stave, part, accidentals, beat, notes, pitches);\n\n        // Original start beat of notes, may be well before beat\n        const startBeat = notes[0][0] - bar.beat;\n        // Max stop beat of notes\n        const stopBeat  = min(bar.duration, notes.reduce(toMaxStopBeat, 0) - bar.beat);\n        // Start beat of next event, if it exists\n        const eventBeat = event && roundTo(0.125, event[0]) - bar.beat;\n        // Duration of next head\n        const duration  = fitDuration(headDurations, bar, startBeat, stopBeat, beat, eventBeat);\n\n        // If duration is a quarter note or longer close beam\n        if (duration >= 1) {\n            if (beam) {\n                closeBeam(symbols, stave, part, beam);\n                beam = undefined;\n            }\n        }\n        // Otherwise if there is no beam open one\n        else if (!beam) beam = {\n            type: 'beam',\n            beat,\n            part\n        };\n\n        let p = -1;\n        while (notes[++p]) symbols.push({\n            type: 'note',\n            beat,\n            pitch: pitches[p],\n            duration,\n            part,\n            stemup,\n            top:    pitches[p] === maxPitch,\n            bottom: pitches[p] === minPitch,\n            stave,\n            event:  notes[p]\n        });\n\n        // Push note symbols on to beam\n        if (beam) push(beam, ...symbols.slice(-1 * notes.length));\n\n        // Remove notes or insert ties\n        p = notes.length;\n        while (p--) {\n            let stopBeat = getStopBeat(notes[p]) - bar.beat;\n            // Remove notes that end before or near next beat\n            if (// Note stops before next beat\n                lte(stopBeat, beat + duration, p16)\n                // Note stops within 0.125 + 1/16 of its own true duration of next beat\n                || stopBeat - (beat + duration) < 0.125 + (1/16) * (getStopBeat(notes[p]) - notes[p][0])) {\n                notes.splice(p, 1);\n            }\n            // Add tie to remaining notes\n            else symbols.push({\n                type:   'tie',\n                beat,\n                pitch: pitches[p],\n                duration,\n                stemup,\n                part,\n                event: notes[p]\n            });\n        }\n\n        // Update beat\n        beat += duration;\n    }\n\n    // If there's still a beam close it\n    if (beam) {\n        closeBeam(symbols, stave, part, beam);\n        beam = undefined;\n    }\n\n    return symbols;\n}\n", "import nothing from 'fn/nothing.js';\nimport { toRootName, toRootNumber } from 'midi/note.js';\nimport toStopBeat from './event/to-stop-beat.js';\nimport { toKeyScale, keyWeightsForEvent, chooseKeyFromWeights } from './keys.js';\nimport { major } from './scale.js';\nimport { createPart } from './part.js';\nimport config     from './config.js';\n\nconst barDivisions = {\n    // 2/2\n    '2,2': [2],\n    // 3/2\n    '3,2': [2,4],\n    // 2/4\n    '2,1': [1],\n    // 3/4\n    '3,1': [1,2],\n    // 4/4\n    '4,1': [2],\n    // 6/8\n    '3,0.5': [1.5],\n    // 6/8\n    '3,1.5': [1.5],\n    // 12/8\n    '12,0.5': [1.5,3,4.5]\n};\n\n/**\ngetBarDivisions(meter)\nGets bar divisions from `meter` event.\n**/\n\nexport function getBarDivisions(meter) {\n    return barDivisions[meter[2] + ',' + meter[3]] || nothing;\n}\n\nexport function getDivisions(duration, divisor) {\n    return barDivisions[duration + ',' + divisor] || nothing;\n}\n\n/**\ngetDivision(divisions, b1, b2)\nGets first bar division from `divisions` where `b1` is before and `b2` after or\non it.\n**/\n\nexport function getDivision(divisions, b1, b2) {\n    let n = -1;\n    while (divisions[++n] && divisions[n] <= b1);\n    // If divisions[n] is undefined, comparison evaluates to false, which is\n    // what we want\n    return b2 > divisions[n] ?\n        divisions[n] :\n        undefined ;\n}\n\nexport function getLastDivision(divisions, b1, b2) {\n    let n = divisions.length;\n    while (divisions[--n] && divisions[n] >= b2);\n\n    // If divisions[n] is undefined, comparison evaluates to false, which is\n    // what we want\n    return b1 < divisions[n] ?\n        divisions[n] :\n        undefined ;\n}\n\n\n\n\n\nconst ignoreTypes = [];\n\nconst accidentalChars = {\n    '-2': '𝄫',\n    '-1': '♭',\n    '0': '',\n    '1': '♯',\n    '2': '𝄪'\n};\n\nconst fathercharles = [\n    // Father Charles Goes Down And Ends Battle,\n    'F♯', 'C♯', 'G♯', 'D♯', 'A♯', 'E♯', 'B♯',\n    // Battle Ends And Down Goes Charles Father\n    'B♭', 'E♭', 'A♭', 'D♭', 'G♭', 'C♭', 'F♭'\n];\n\nfunction byFatherCharlesPitch(a, b) {\n    const ai = fathercharles.indexOf(a.pitch);\n    const bi = fathercharles.indexOf(b.pitch);\n    return ai > bi ? 1 : ai < bi ? -1 : 0;\n}\n\nfunction updateAccidentals(accidentals, key) {\n    const scale = toKeyScale(key);\n\n    scale.reduce((accidentals, n, i) => {\n        const acci = n - major[i];\n        if (acci !== 0) {\n            const name = toRootName(major[i]);\n            let n = 10;\n            while (n--) accidentals[name + n] = acci;\n        }\n        return accidentals;\n    }, accidentals);\n\n    return accidentals;\n}\n\nfunction createBarSymbols(symbols, bar, stave, key, accidentals, events, settings) {\n    let n = -1;\n    let event;\n\n    while (event = events[++n]) switch (event[1]) {\n        case \"key\": {\n            // Get the key scale from keyname. This scale is not a true\n            // 'scale' in an internal-data sense as it may not begin with a 0, but it\n            // maps naturals to accidentals when compared against the C scale. Remember\n            // keynumber is on a continuous scale of fourths, so multiply by 7 semitones\n            // to get chromatic number relative to C.\n            const key      = toRootNumber(event[2]);\n            const keyscale = toKeyScale(key);\n\n            updateAccidentals(accidentals, key);\n\n            // Add key signature\n            symbols.push.apply(symbols, keyscale\n                .map((n, i) => (n - major[i] && {\n                    // No beat for key signature accidentals\n                    type: 'acci',\n                    pitch: toRootName(major[i]) + accidentalChars[n - major[i]],\n                    value: n - major[i],\n                    stave\n                }))\n                .filter((o) => !!o)\n                .sort(byFatherCharlesPitch)\n            );\n\n            bar.key = key;\n            break;\n        }\n\n        case \"meter\": {\n            symbols.push({\n                type:        'timesig',\n                beat:        0,\n                numerator:   event[3] === 1.5 ? event[2] / 0.5 : event[2] / event[3],\n                denominator: event[3] === 1.5 ? 8 : 4 / event[3],\n                stave,\n                event\n            });\n\n            break;\n        }\n\n        case \"symbol\": {\n            symbols.push({\n                type: 'symbol' + event[2],\n                stave\n            });\n\n            break;\n        }\n\n        case \"chord\": {\n            const beat       = event[0] - bar.beat;\n            const keyWeights = keyWeightsForEvent(events, n, key);\n            const keyNumber  = chooseKeyFromWeights(keyWeights);\n\n            let root = stave.getSpelling(keyNumber, event);\n\n            if (root === 'C♭' && settings.spellChordRootCFlatAsB)  root = 'B';\n            if (root === 'E♯' && settings.spellChordRootESharpAsF) root = 'F';\n            if (root === 'B♯' && settings.spellChordRootBSharpAsC) root = 'C';\n            if (root === 'F♭' && settings.spellChordRootFFlatAsE)  root = 'E';\n\n            symbols.push({\n                type: 'chord',\n                beat,\n                // Does chord cross into next bar? The symbol should not\n                duration: event[0] + event[4] > bar.beat + bar.duration ?\n                    bar.duration - beat :\n                    event[4],\n                root,\n                extension: event[3],\n                event,\n                stave\n            });\n\n            break;\n        }\n\n        case \"lyric\": {\n            const beat = event[0] - bar.beat;\n            symbols.push({\n                type: 'lyric',\n                beat,\n                // Does chord cross into next bar? The symbol should not\n                duration: event[0] + event[3] > bar.beat + bar.duration ?\n                    bar.duration - beat :\n                    event[3],\n                value: event[2],\n                event,\n                stave\n            });\n\n            break;\n        }\n\n        case \"sequence\": {\n            // Put a double bar line at the end of bar\n            // symbols.push({ type: 'doublebarline', stave, event });\n            bar.doubleBarLine = true;\n            break;\n        }\n\n        default: {\n            if (ignoreTypes.includes(event[1])) return;\n            console.log('Scribe: ignoring event type \"' + event[1] + '\"');\n        }\n    };\n\n    return symbols;\n}\n\nexport function createBar(count, beat, duration, divisor, stave, key, events, parts, sequence, settings = config) {\n    const symbols = [];\n\n    // Track end of sequence and shove in a double bar line\n    if (sequence) {\n        const sequenceStop = toStopBeat(sequence);\n        if (sequenceStop > beat && sequenceStop <= beat + duration) {\n            events.push(sequence);\n        }\n    }\n\n    // Get the key scale from keyname. This scale is not a true\n    // 'scale' in an internal-data sense as it may not begin with a 0, but it\n    // maps naturals to accidentals when compared against the C scale. Remember\n    // keynumber is on a continuous scale of fourths, so multiply by 7 semitones\n    // to get chromatic number relative to C.\n    //const scale = toKeyScale(key * 7);\n//console.log('KEY', toRootName(key), 'scale', scale);\n\n    // Populate accidentals with key signature sharps and flats\n    const accidentals = updateAccidentals({}, key);\n\n    const bar = {\n        type: 'bar',\n        beat,\n        duration,\n        key,\n        divisor,\n        divisions: getDivisions(duration, divisor),\n        stave,\n        count,\n        symbols\n    };\n\n    // Add clef in front of keysig\n    /*bar.symbols.push({\n        type: 'clef',\n        beat: 0,\n        stave\n    });*/\n\n    // Populate symbols with events\n    createBarSymbols(symbols, bar, stave, key, accidentals, events, config);\n\n    // Populate symbols with parts\n    let index, p = 0;\n    for (index in stave.parts) {\n        const part   = stave.parts[index];\n        const events = parts[part.name] || [];\n        // Dont render anything if this is not a default part and there are no events\n        if (!part.DEFAULT && !events.length) continue;\n        createPart(symbols, bar, stave, key, accidentals, part, events, settings);\n        ++p;\n    }\n\n    // But if no part was rendered at least render rests\n    if (!p) {\n        console.log('Stave has no parts defined SHOULD NOT BE');\n        createPart(symbols, bar, stave, key, accidentals, stave.parts[0], [], settings);\n    }\n\n    return bar;\n}\n", "\nimport get        from 'fn/get.js';\nimport overload   from 'fn/overload.js';\nimport { toNoteName, toNoteNumber, toRootName, toRootNumber } from 'midi/note.js';\nimport join       from './object/join.js';\nimport toStopBeat from './event/to-stop-beat.js';\nimport { createBar }  from './bar.js';\nimport config     from './config.js';\n\n\n/* Bar repeats */\n\nfunction ignoreKeys(key, value) {\n    if (key === \"stave\" || key === \"event\" || key === \"sequence\" || key === \"beam\") return undefined;\n    return value;\n}\n\nfunction jsonifyBar(bar) {\n    const clone = bar.symbols.filter((symbol) => symbol.type === 'chord' || symbol.type === 'note');\n    return JSON.stringify(clone, ignoreKeys);\n}\n\nfunction replaceWithRepeat(bar, count) {\n    bar.symbols = bar.symbols\n        .filter((symbol) => symbol.type === 'doublebarline' || symbol.type === 'clef')\n        .concat([{\n            type: 'BARREPEAT',\n            count,\n            duration: bar.duration\n        }]);\n}\n\nfunction detectBarRepeats(bars, jsons, bar) {\n    const json = jsonifyBar(bar);\n\n    switch (jsons.length) {\n        case 1: break;\n        case 2: break;\n        case 3: {\n            // If bars have no events of interest they are just rests, we don't\n            // want to bar repeat rest bars\n            if (json === '[]' && jsons[0] === '[]') {\n                jsons.length = 0;\n            }\n            // When jsons reaches 3 check for 3 bar repeats, or 4 identical bars\n            else if (json === jsons[0] && json === jsons[1] && json === jsons[2] && bar.symbols.filter((symbol) => symbol.type !== 'clef' && symbol.type !== 'timesig').find((symbol) => symbol.type !== 'rest')) {\n                // Replace the last three bars with single bar repeat symbols\n                replaceWithRepeat(bars[bars.length - 2], 1);\n                replaceWithRepeat(bars[bars.length - 1], 1);\n                replaceWithRepeat(bar, 1);\n            }\n            else if (json !== jsons[1] || jsons[0] !== jsons[2]) {\n                // There is no double bar repeat cooking return to testing for\n                // single bar repeats\n                jsons.length = 2;\n            }\n\n            break;\n        }\n\n        case 4: {\n            // If all are equal two single bar repeats were already inserted\n            // in case 3. Lucky us. Add another.\n            if (json === jsons[0] && json === jsons[1] && json === jsons[2] && json === jsons[3]) {\n                // Replace the last bar with a single bar repeat symbol\n                replaceWithRepeat(bar, 1);\n                // Come back to case 4 on the next iteration\n                jsons.length = 3;\n            }\n            else if (json !== jsons[1] || jsons[0] !== jsons[2] || json !== jsons[3]) {\n                // There is no double bar repeat cooking and we got here we know\n                // we've been bar repeat mode (do we?), go back to testing for\n                // single bar repeats\n                jsons.length = 2;\n            }\n\n            break;\n        }\n\n        case 5: {\n            // When jsons reaches 5 check for two double bar repeats, or six\n            // bars of identical materiel\n            if (json === jsons[1] && json === jsons[3] && jsons[0] === jsons[2] && jsons[0] === jsons[4]) {\n                // Lop off the previous 2 bars\n                bars.length -= 2;\n                // Replace the last 2 bars with two bars of double bar repeat\n                // symbol\n                replaceWithRepeat(bars[bars.length - 1], 2);\n                replaceWithRepeat(bar, 2);\n            }\n            else {\n                // Go back to testing case 5 ?? What about single repeats?\n                jsons.length = 4;\n            }\n\n            break;\n        }\n\n        case 6: break;\n        case 7: {\n            // Double bars have already been added, determine whether we add another\n            if (json === jsons[1] && json === jsons[3] && jsons[0] === jsons[2] && jsons[0] === jsons[4]) {\n                // Lop off the previous bar\n                bars.length -= 1;\n                // Replace last bar with a double bar symbol\n                replaceWithRepeat(bar, 2);\n                // Prevent another double from happening on the very next bar,\n                // go back to case 6, thus case 7 in two iterations\n                jsons.length = 5;\n            }\n            else {\n                // Prevent another double from happening on the very next bar\n                jsons.length = 1;\n            }\n\n            break;\n        }\n    }\n\n    jsons.unshift(json);\n    while (jsons.length > 8) jsons.pop();\n}\n\n\n/* Bars */\n\nfunction pushEventToPart(stave, parts, event) {\n    const part = event.target ?\n        // TEMP Experimental parts syphoner - but is this the way to do it?\n        stave.parts[event.target] :\n        // Stave decides on part automatically\n        stave.getPart(event[2]) ;\n\n    const partEvents = parts[part.name] || (parts[part.name] = []);\n    parts[part.name].push(event);\n}\n\nexport default function createBars(sequence, excludes, stave, settings = config) {\n    const scribeEvents = [];\n    const bars  = [];\n    const ties  = [];\n    const jsons = [];\n\n    let beat   = 0;\n    let events = [];\n    let parts  = {};\n    let key    = 0;\n    let stopBeat = 0;\n    let duration, divisor, event, sequenceEvent;\n\n    // Extract events from sequence iterator\n    for (event of sequence) {\n        // Store all events for the key analyser. We know event is an object at\n        // this point, as the iterator emits transformed objects, so use the\n        // event to pass the info down\n        event.scribeIndex  = scribeEvents.length;\n        event.scribeEvents = scribeEvents;\n        scribeEvents.push(event);\n\n        if (excludes.includes(event[1])) continue;\n\n        // If event is beyond current duration create bars\n        while (event[0] >= beat + duration) {\n            // Close current bar, push to bars\n            const bar = createBar(bars.length + 1, beat, duration, divisor, stave, key, events, parts, sequenceEvent, settings);\n            detectBarRepeats(bars, jsons, bar);\n            bars.push(bar);\n            key = bar.key;\n\n            // Update beat, start new accumulators\n            beat = beat + duration;\n            events = [];\n            parts  = {};\n\n            let t = -1;\n            while (ties[++t]) {\n                pushEventToPart(stave, parts, ties[t]);\n                // If event does not extend beyond bar remove it from ties\n                if (toStopBeat(ties[t]) < beat + duration) ties.splice(t--, 1);\n            }\n        }\n\n        switch (event[1]) {\n            case \"note\": {\n                // Note events are pushed to parts\n                pushEventToPart(stave, parts, event);\n                // If event extends beyond bar push it into ties\n                if (toStopBeat(event) > beat + duration) ties.push(event);\n                if (stopBeat < toStopBeat(event)) stopBeat = toStopBeat(event);\n                break;\n            }\n\n            case \"sequence\": {\n                if (event.events === sequence.events) sequenceEvent = event;\n                if (stopBeat < toStopBeat(event)) stopBeat = toStopBeat(event);\n                break;\n            }\n\n            case \"meter\": {\n                duration = event[2];\n                divisor  = event[3];\n\n                // If meter event does not land on current bar beat\n                if (event[0] !== beat) {\n                    // Create bar prematurely and start a new one, or error out?\n                    console.log('TODO');\n                }\n            }\n\n            default: {\n                events.push(event);\n            }\n        }\n    }\n\n    // There are still events with long durations to symbolise into bars\n    while (ties.length) {\n        // Close current bar, push to bars\n        const bar = createBar(bars.length + 1, beat, duration, divisor, stave, key, events, parts, sequenceEvent, settings);\n        detectBarRepeats(bars, jsons, bar);\n        bars.push(bar);\n\n        // Update beat, start new arrays\n        beat = beat + duration;\n        events = [];\n        parts  = {};\n\n        let t = -1;\n        while (event = ties[++t]) {\n            pushEventToPart(stave, parts, event);\n            // If event does not extend beyond bar remove it from ties\n            if (toStopBeat(event) < beat + duration) ties.splice(t--, 1);\n        }\n    }\n\n    // Make sure we render up to full duration of note or sequence events\n    // TODO: Surely we can find a more elegant way of doing this... do we really\n    // still need the ties array? Can we not get rid of the loop above?\n    while (beat < stopBeat - duration) {\n        // Close current bar, push to bars\n        const bar = createBar(bars.length + 1, beat, duration, divisor, stave, key, events, parts, sequenceEvent, settings);\n        detectBarRepeats(bars, jsons, bar);\n        bars.push(bar);\n\n        // Update beat, start new arrays\n        beat = beat + duration;\n        events = [];\n        parts  = {};\n    }\n\n    // Close final bar, push to bars\n    const bar = createBar(bars.length + 1, beat, duration, divisor, stave, key, events, parts, sequenceEvent, settings);\n    detectBarRepeats(bars, jsons, bar);\n    bars.push(bar);\n\n    // Return bars\n    return bars;\n}\n", "/* Event ids */\n\nconst $id = Symbol('scribe-id');\n\nlet id = 0;\n\nexport function identify(event) {\n    if (event[$id]) return event[$id];\n    event[$id] = (++id + '');\n    return event[$id];\n}\n\nexport function find(events, id) {\n    return events.find((event) => (event[$id] === id));\n}\n", "import get from 'fn/get.js';\nimport overload from 'fn/overload.js';\nimport create from 'dom/create.js';\nimport { toNoteNumber } from 'midi/note.js';\nimport * as glyphs from \"./glyphs.js\";\nimport { chordGlyphs } from \"./glyphs.js\";\nimport { rflat, rsharp } from './pitch.js';\nimport { identify } from './event.js';\nimport { beamThickness } from './beam.js';\nimport map from './object/map.js';\n\nconst abs = Math.abs;\n\nconst chordParts = {\n    'flat':  `<span class=\"chord-flat\">${ glyphs.acciFlat }</span>`,\n    'sharp': `<span class=\"chord-sharp\">${ glyphs.acciSharp }</span>`\n};\n\nconst acciClasses = {\n    '2':  'acci acci-doublesharp',\n    '1':  'acci acci-sharp',\n    '0':  'acci acci-natural',\n    '-1': 'acci acci-flat',\n    '-2': 'acci acci-doubleflat'\n};\n\nconst acciGlyphs = {\n    '2':  glyphs.acciDoubleSharp,\n    '1':  glyphs.acciSharp,\n    '0':  glyphs.acciNatural,\n    '-1': glyphs.acciFlat,\n    '-2': glyphs.acciDoubleFlat\n};\n\nconst restGlyphs = {\n    // Triplet rests\n    '1.33': glyphs.rest2,\n    '0.67': glyphs.rest1,\n    '0.33': glyphs.rest05,\n    '0.17': glyphs.rest025,\n    '0.08': glyphs.rest0125\n};\n\nconst rextensionparts = /^(∆|-|ø|7|\\+)?(alt|sus|maj|min|dim|aug)?(.*)$/;\n\nfunction truncate(number) {\n    return number.toFixed(4).replace(/\\.?0+$/, '');\n}\n\nexport default overload(get('type'), {\n    BARREPEAT: (symbol) => create('span', {\n        class: 'BARREPEAT',\n        html: glyphs['barRepeat' + symbol.count],\n        data: { duration: symbol.duration }\n    }),\n\n    clef: (symbol) => symbol.stave.getClefHTML ?\n        // For support for piano stave treble and bass clef\n        create('fragment', symbol.stave.getClefHTML()) :\n        create('span', {\n            class: `${ symbol.stave.type }-clef clef`,\n            //data: { eventId: identify(symbol.event) },\n            html: symbol.stave.clef\n            //data: { symbol.event }\n        }),\n\n    chord: (symbol) => {\n        const parts = rextensionparts.exec(symbol.extension);\n\n        return create('abbr', {\n            class: \"chord chord-abbr\",\n            title: \"\",\n            // Note that we must detect sharps before flats because HTML entities\n            // contain hash symbols that can be interpreted as sharps\n            html: '<span class=\"chord-root\">' + symbol.root.replace(rsharp, chordParts.sharp).replace(rflat, chordParts.flat) + '</span>'\n                + '<span class=\"chord-ext\">'\n                + (parts[1] ? '<span class=\"chord-ext-' + parts[1] + '\">' + parts[1] + '</span>' : '')\n                + (parts[2] ? '<sub>' + parts[2] + '</sub>' : '')\n                + (parts[3] ? '<sup>' + parts[3].replace(rsharp, chordParts.sharp).replace(rflat, chordParts.flat) + '</sup>' : '')\n                + '</span>'\n                + (symbol.bass ? glyphs.chordBassSlash + '<span class=\"chord-bass\">' + symbol.bass + '</span>' : ''),\n            data: {\n                beat:     truncate(symbol.beat),\n                duration: truncate(symbol.duration),\n                event:    identify(symbol.event)\n            }\n        });\n    },\n\n    timesig: (symbol) => symbol.stave.getTimeSigHTML ?\n        create('fragment', symbol.stave.getTimeSigHTML(symbol.numerator, symbol.denominator, identify(symbol.event))) :\n        create('span', {\n            class: \"timesig\",\n            html: `<sup>${ glyphs['timeSig' + symbol.numerator] }</sup>\n                <sub>${ glyphs['timeSig' + symbol.denominator] }</sub>`,\n            data: {\n                event: identify(symbol.event)\n            }\n        }),\n\n    symbolcoda: (symbol) => create('p', {\n        html: glyphs.coda,\n        class: \"coda\"\n    }),\n\n    barcount: (symbol) => create('span', {\n        html: symbol.text,\n        class: \"barcount\"\n    }),\n/*\n    doublebarline: (symbol) => create('span', {\n        html: glyphs.barLine + '&#x200A;' + glyphs.barLine,\n        class: \"barline\"\n    }),\n*/\n    lyric: (symbol) => create('span', {\n        class: \"lyric\",\n        part:  \"lyric\",\n        html: symbol.value,\n        data: {\n            beat:     truncate(symbol.beat),\n            duration: truncate(symbol.duration),\n            event:  identify(symbol.event)\n        }\n    }),\n\n    acci: (symbol) => create('span', {\n        class: acciClasses[symbol.value] || 'acci',\n        html: acciGlyphs[symbol.value] || glyphs.acciNatural,\n        data: symbol.beat === undefined ? { pitch: symbol.pitch } : {\n            beat:  truncate(symbol.beat),\n            pitch: symbol.pitch,\n            part:  symbol.part.name,\n            event: identify(symbol.event)\n        }\n    }),\n\n    ledge: (symbol) => create('svg', {\n        class:   `${ symbol.rows < 0 ? 'up' : 'down' }-ledge ledge`,\n        viewBox: symbol.rows < 0 ?\n            // Up ledge start from 1 row above stave.topRow\n            `0 ${ 9 + symbol.rows - 0.5 } 4.8 ${ abs(symbol.rows) }` :\n            // Down ledge starts from 1 row below stave.bottomRow\n            `0 -0.5 4.8 ${ abs(symbol.rows) }` ,\n        preserveAspectRatio: \"xMidYMin\",\n        html: `\n            <line x1=\"0\" x2=\"4.8\" y1=\"0\" y2=\"0\"></line>\n            <line x1=\"0\" x2=\"4.8\" y1=\"2\" y2=\"2\"></line>\n            <line x1=\"0\" x2=\"4.8\" y1=\"4\" y2=\"4\"></line>\n            <line x1=\"0\" x2=\"4.8\" y1=\"6\" y2=\"6\"></line>\n            <line x1=\"0\" x2=\"4.8\" y1=\"8\" y2=\"8\"></line>\n        `,\n        data: {\n            beat:  truncate(symbol.beat),\n            pitch: symbol.pitch,\n            part:  symbol.part.name\n        }\n    }),\n\n    note: (symbol) => create('data', {\n        class: `${ symbol.stemup ? 'up-note' : 'down-note' } ${ symbol.top ? 'top-note' : '' } ${ symbol.bottom ? 'bottom-note' : '' } ${ symbol.beam ? 'beam-note ' : '' }note`,\n        style: symbol.stemHeight ? `--stem-height: ${ symbol.stemHeight };` : undefined,\n        html:  symbol.stave.getNoteHTML(symbol.pitch, symbol.dynamic, symbol.duration),\n        title: `${ symbol.pitch } (${ toNoteNumber(symbol.pitch) })`,\n        data: {\n            beat:     truncate(symbol.beat),\n            pitch:    symbol.pitch,\n            duration: truncate(symbol.duration),\n            part:     symbol.part.name,\n            beam:     symbol.beam && identify(symbol.beam),\n            event:    identify(symbol.event)\n        }\n    }),\n\n    beam: (symbol, settings) => create('svg', {\n        // 8th note beams can be rendered directly into the grid. Beams for\n        // shorter durations are rendered as a post process once this SVG is in\n        // the DOM and stem positions can be measured. See beam.js.\n        class: `${ symbol.stemup ? 'up' : 'down' }-beam beam`,\n        viewBox: `0 ${ (symbol.range < 0 ? symbol.range : 0) - 0.5 } 1 ${ abs(symbol.range) + 1 }`,\n        preserveAspectRatio: \"none\",\n        style: `${ symbol.y ? '--translate-y:' + (symbol.y * 0.125) + ';' : '' } height: ${ (abs(symbol.range) + beamThickness) * 0.125 }em; align-self: ${ symbol.range < 0 ? 'end' : 'start' };`,\n        html: `<path class=\"beam-path\" d=\"M0,${ -0.5 * beamThickness } L1,${ symbol.range - 0.5 * beamThickness } L1,${ symbol.range + 0.5 * beamThickness } L0,${ 0.5 * beamThickness } Z\"></path>`,\n        data: {\n            beat:     truncate(symbol.beat),\n            pitch:    symbol.pitch,\n            duration: truncate(symbol.duration),\n            part:     symbol.part.name,\n            events:   map((symbol) => identify(symbol.event), symbol).join(' ')\n        }\n    }),\n\n    tie: (symbol) => create('svg', {\n        class: `${ symbol.stemup ? 'down' : 'up' }-tie tie`,\n        viewBox: `0 0 1 1`,\n        preserveAspectRatio: \"none\",\n        html: `<path class=\"tie-path\" transform=\"translate(0, 0.14) scale(1 0.6)\" d=\"M0.979174733,0.0124875307 C0.650597814,1.1195554 0.135029714,1.00095361 0.0165376402,0.026468657 C0.0113570514,0.0135475362 0.00253387291,0.00218807553 0,0 C0.0977526897,1.29523004 0.656681642,1.37089992 1,2.43111793e-08 C0.991901367,2.43111797e-08 0.987703936,0.01248753 0.979174733,0.0124875307 Z M0.979174733,0.0124875307\"></path>`,\n        data: {\n            beat:     truncate(symbol.beat),\n            pitch:    symbol.pitch,\n            duration: truncate(symbol.duration),\n            part:     symbol.part.name\n        }\n    }),\n\n    tuplet: (symbol) => create('span', {\n        class: `${ symbol.stemup ? 'up' : 'down' }-tuplet tuplet`,\n        html: glyphs['tuplet' + symbol.divisor],\n        data: {\n            beat:     truncate(symbol.beat),\n            pitch:    symbol.pitch,\n            duration: truncate(symbol.duration),\n            divisor:  symbol.divisor,\n            // Rhythm is a binary number\n            rhythm:   symbol.rhythm.toString(2).split('').reverse().join(''),\n            part:     symbol.part.name\n        },\n        style: `--angle: ${ symbol.angle }deg;`\n    }),\n\n    rest: (symbol) => create('span', {\n        class: \"rest\",\n        html: restGlyphs[symbol.duration.toFixed(2)]\n            || glyphs['rest' + (symbol.duration + '').replace('.', '')]\n            || '',\n        data: {\n            beat:     truncate(symbol.beat),\n            pitch:    symbol.pitch,\n            duration: truncate(symbol.duration),\n            part:     symbol.part.name\n        },\n        'aria-hidden': 'true'\n    }),\n\n    default: (function (types) {\n        return function (symbol) {\n            if (types[symbol.type]) return;\n            types[symbol.type] = true;\n            console.log(symbol);\n            console.error('Scribe: symbol type \"' + symbol.type + '\" not rendered');\n        };\n    })({})\n});\n", "\nimport create           from 'dom/create.js';\nimport { toRootName }   from 'midi/note.js';\nimport SequenceIterator from 'sequence/sequence-iterator.js';\nimport Stave            from '../modules/stave.js';\nimport createBars       from './create-bars.js';\nimport createSymbolElement from './create-symbol-element.js';\nimport * as glyphs      from './glyphs.js';\nimport config           from './config.js';\n\nfunction isInitialMeterEvent(event) {\n    return event[0] <= 0 && event[1] === 'meter';\n}\n\nfunction isInitialKeyEvent(event) {\n    return event[0] <= 0 && event[1] === 'key';\n}\n\nfunction toElements(nodes, symbol) {\n    const element = createSymbolElement(symbol);\n    if (element) { nodes.push(element); }\n    return nodes;\n}\n\nexport function toBarElements(elements, bar) {\n    elements.push(create('div', {\n        class: `${ bar.stave.type }-stave stave ${ bar.doubleBarLine ? 'end-bar ' : '' }bar${ bar.error ? ' error ': '' }`,\n        data: { beat: bar.beat, duration: bar.duration, count: bar.count, key: toRootName(bar.key) },\n        children: bar.symbols.reduce(toElements, [])\n    }));\n\n    return elements;\n}\n\n/* Glyphs for triplet mark d d = d 3 d, instead of saying Swing 8ths, for example\ntext = glyphs.textNoteShort\n    + glyphs.textBeam8Short\n    + glyphs.textNote8Short\n    + '='\n    + glyphs.textNoteShort\n    + ' '\n    + glyphs.textTuplet3Long\n    + glyphs.note05Up\n*/\n\nexport default function render(data, excludes, clef, keyname, meter, duration = Infinity, transpose = 0, displace = 0, settings = config) {\n    const events = data.events;\n\n    // If events contains no initial meter and meter is set, insert a meter event\n    const meterEvent = events.find(isInitialMeterEvent);\n    if (!meterEvent && meter) events.unshift([0, 'meter', meter[2], meter[3]]);\n\n    // If events contains no initial key and keyname is set, insert a key event\n    const keyEvent = events.find(isInitialKeyEvent);\n    if (!keyEvent && keyname) events.unshift([0, 'key', keyname]);\n\n    // Get the stave controller\n    const stave = Stave.create(clef || 'treble');\n\n    // Make transforms list\n    const transforms = [];\n    if (transpose) transforms.push(\"transpose\", transpose);\n    if (displace)  transforms.push(\"displace\", displace);\n\n    // Create sequence object\n    const sequence = new SequenceIterator(events, data.sequences, transforms);\n\n    // Create bar elements\n    const bars = createBars(sequence, excludes, stave, settings).reduce(toBarElements, []);\n\n    // TEMP get keysig and stick it in side bar and do some style stuff\n    const bar0   = bars[0];\n    const keysig = bar0.querySelectorAll('.acci:not([data-beat])');\n    // Quick and dirty way of rendering clefs into left hand side bar\n    const sidebar = create('div', {\n        class: `${ stave.type }-stave signature-stave stave`,\n        children: [createSymbolElement({ type: 'clef', stave }), ...keysig],\n        data: { key: bar0.dataset.key }\n    });\n    const column = create('div', {\n        id: 'side',\n        class: 'side',\n        data: { key: bar0.dataset.key }\n    });\n    let n = 24;\n    while (n--) column.appendChild(sidebar.cloneNode(true));\n    // Return array of elements\n    bars.unshift(column);\n    return bars;\n}\n"],
  "mappings": "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",
  "names": ["id", "value", "overload", "fn", "map", "key", "handler", "cacheByObject", "fn", "map", "object", "value", "A", "applyFn", "fn", "args", "curry", "muteable", "arity", "memo", "cacheByObject", "object", "partial", "curry_default", "noop", "assignProperty", "overload", "id", "noop", "name", "node", "object", "content", "setAttribute", "assign", "attributes", "names", "assign_default", "curry_default", "svgNamespace", "template", "typeofContent", "type", "content", "createContextFragment", "context", "html", "range", "createSVG", "overload", "tag", "node", "object", "assign_default", "createHTML", "create", "id", "text", "fragment", "create_default", "arg", "n", "id", "value", "noop", "self", "create", "freeze", "nothing_default", "noop", "self", "arg", "id", "mod", "d", "n", "mod12", "n", "mod", "rnotename", "rnoteroot", "rnoteoctave", "rhz", "noteNumbers", "drumNames", "slugify", "string", "n", "A4", "frequencyToFloat", "freq", "ref", "number", "toNoteNumber", "name", "rhz", "frequencyToFloat", "r", "rnotename", "noteNumbers", "slugify", "toRootNumber", "mod12", "rnoteroot", "noteNames", "toNoteName", "n", "toRootName", "toNoteOctave", "rnoteoctave", "nothing_default", "toDrumName", "number", "drumNames", "glyphs_exports", "__export", "acciDoubleFlat", "acciDoubleSharp", "acciFlat", "acciNatural", "acciParensLeft", "acciParensRight", "acciSharp", "augmentationDot", "barLine", "barRepeat1", "barRepeat2", "barRepeat4", "barRepeatBegin", "barRepeatDots", "barRepeatEnd", "barRepeatEndBegin", "barRepeatLowerDot", "barRepeatSlash", "barRepeatUpperDot", "chordAugmented", "chordBassSlash", "chordBracketLeft", "chordBracketRight", "chordDiminished", "chordGlyphs", "chordHalfDiminished", "chordMajorSeventh", "chordMinor", "chordParensLeftTall", "chordParensRightTall", "clefAlto", "clefBass", "clefDrum", "clefPercussion", "clefTreble", "clefTrebleDown", "clefTrebleUp", "coda", "graceNoteStemDown", "graceNoteStemUp", "head1", "head2", "head4", "headBracketLeft", "headBracketRight", "headCircle", "headCircleX", "headDiamond", "headDiamondWide", "headPlus", "headSlashHorizontalEnds", "headSlashVerticalEnds", "headSlashed2", "headTriangleUp", "headX", "metDot", "metNote05Down", "metNote05Up", "metNote1Down", "metNote1Up", "metNote2Down", "metNote2Up", "note0125Down", "note0125Up", "note025Down", "note025Up", "note05Down", "note05Up", "note1Down", "note1Up", "note2Down", "note2Up", "rest0125", "rest01875", "rest025", "rest0375", "rest05", "rest075", "rest1", "rest15", "rest2", "rest3", "rest4", "rest6", "tailDown0125", "tailDown025", "tailDown05", "tailUp0125", "tailUp025", "tailUp05", "textBeam16Long", "textBeam16Short", "textBeam8Long", "textBeam8Short", "textDot", "textNote16Long", "textNote16Short", "textNote8Long", "textNote8Short", "textNoteLong", "textNoteShort", "textTie", "textTuplet3Long", "textTuplet3Short", "textTupletBeginLong", "textTupletBeginShort", "textTupletEndLong", "textTupletEndShort", "timeSig0", "timeSig1", "timeSig2", "timeSig3", "timeSig4", "timeSig5", "timeSig6", "timeSig7", "timeSig8", "timeSig9", "timeSigCommon", "timeSigCutCommon", "tuplet0", "tuplet1", "tuplet2", "tuplet3", "tuplet4", "tuplet5", "tuplet6", "tuplet7", "tuplet8", "tuplet9", "arg", "n", "self", "create", "freeze", "nothing_default", "noop", "self", "arg", "id", "mod", "d", "n", "mod12", "n", "mod", "assign", "define", "writable", "arrayify", "event", "array", "n", "Event", "_Event", "data", "events", "index", "isChordEvent", "isNoteEvent", "isSequenceEvent", "get", "key", "object", "get_default", "curry_default", "to_duration_default", "overload", "get_default", "event", "toStopBeat", "event", "to_duration_default", "byGreater", "a", "b", "major", "unique", "value", "i", "array", "transposeScale", "scale", "transpose", "n", "mod12", "byGreater", "keys_default", "toKeyScale", "key", "transposeScale", "major", "abs", "extensions", "degreeWeights", "modulationWeights", "factors", "keysContainingNote", "number", "keys", "n", "toRootNumber", "i", "multiplyWeights", "weights1", "weights2", "factor", "types", "weights", "event", "influence", "toNoteNumber", "probs", "r", "degrees", "extensions", "notes", "degreeWeights", "keyWeightsForEvent", "events", "currentKey", "beat", "isNoteEvent", "isChordEvent", "modulationWeights", "m", "fn", "stopBeat", "toStopBeat", "order", "chooseKeyFromWeights", "value", "key", "rpitch", "rflat", "rsharp", "rflatsharp", "accidentals", "spellRoot", "key", "pitch", "keyData", "keys_default", "toRootNumber", "a", "mod12", "noteNames", "spellPitch", "o", "notename", "letter", "accidental", "octave", "rpitch", "toNoteNumber", "toNoteOctave", "name", "global", "floor", "round", "Stave", "nothing_default", "pitch", "dynamic", "duration", "name", "glyphs_exports", "n", "min", "toNoteNumber", "max", "number", "part", "row", "toNoteName", "rflatsharp", "global", "pitch1", "pitch2", "i1", "key", "event", "spellRoot", "spellPitch", "y", "global", "toDrumPitch", "number", "toDrumName", "DrumStave", "Stave", "clefDrum", "#headnames", "pitch", "dynamic", "duration", "toNoteNumber", "name", "head", "glyphs_exports", "html", "headBracketLeft", "headBracketRight", "part", "n", "i", "row", "key", "event", "y", "j", "PercussionStave", "DrumStave", "clefPercussion", "pitch1", "pitch2", "global", "PianoStave", "Stave", "clefTreble", "clefBass", "numerator", "denominator", "eventId", "glyphs_exports", "part", "pitch", "name", "rflatsharp", "i", "row", "TrebleUpStave", "Stave", "clefTrebleUp", "TrebleStave", "clefTreble", "TrebleDownStave", "clefTrebleDown", "AltoStave", "clefAlto", "BassStave", "clefBass", "PianoStave", "DrumStave", "PercussionStave", "type", "stave_default", "config_default", "windowBox", "rect", "node", "beamThickness", "getDataDuration", "note", "removeBeamPaths", "svg", "childNodes", "renderPathData", "range", "xs", "beam", "createBeamPaths", "durations", "i", "duration", "n", "create_default", "renderBeam", "ids", "parent", "notes", "id", "box", "boxes", "rect", "firstX", "lastX", "transpose_default", "overload", "n", "event", "toNoteNumber", "toRootNumber", "id", "types", "transforms", "n", "event", "transpose_default", "transform", "type", "assign", "nothing", "done", "priorities", "temp", "getPriority", "event", "byPriority", "b", "a", "getSequence", "sequences", "id", "sequence", "SequenceIterator", "_SequenceIterator", "events", "nothing", "transforms", "byPriority", "n", "event", "transform", "assign", "temp", "value", "Event", "iterator", "i", "j", "b", "x", "done", "tupletDivisors", "minTupletDuration", "tolerance", "stopInfluence", "data", "score", "getScore", "wavelength", "beat", "scoreTupletAtBeat", "duration", "divisor", "events", "n", "tupletDuration", "count", "rhythm", "s", "r", "toStopBeat", "detectTupletOverDuration", "tuplet", "startbeat", "divisors", "stopBeat", "d", "detectTuplet", "abs", "EPSILON", "round", "d", "n", "eq", "a", "b", "precision", "lte", "gte", "gt", "lt", "ceilPow2", "n", "floorPow2", "isPowerOf2", "n", "grainPower2", "min", "max", "n", "eq", "g", "mod", "push", "object", "value", "n", "a", "lengthOf", "object", "n", "join", "object", "lengthOf", "map", "fn", "object", "array", "assign", "abs", "ceil", "floor", "min", "max", "sqrt", "round", "p16", "p24", "average", "a", "n", "i", "array", "toMaxStopBeat", "event", "toStopBeat", "getPitches", "stave", "key", "notes", "pitches", "note", "events", "index", "keyWeights", "keyWeightsForEvent", "keyNumber", "chooseKeyFromWeights", "getMinPitchRow", "part", "row", "pitch", "r", "getMaxPitchRow", "stemupFromRows", "minRow", "maxRow", "centerRow", "minDiff", "stemupFromPitches", "stemupFromSymbols", "symbols", "symbol", "closeBeam", "beam", "startBeat", "duration", "join", "stemup", "map", "get_default", "rows", "eq", "beamLength", "beginRow", "endRow", "positions", "range", "diff", "d", "fitDottedDuration", "grain", "ceilPow2", "fitRoundedUpDuration", "maxDuration", "fitDuration", "durations", "bar", "stopBeat", "beat", "eventBeat", "maxGrain", "floorPow2", "div1", "grainPower2", "div2", "division", "quadDuration", "createRest", "createRests", "tobeat", "gt", "rest", "createAccidental", "accidentals", "acci", "rsharp", "rflat", "line", "gte", "createAccidentals", "createLedges", "maxPitch", "minPitch", "closeTuplet", "tuplet", "divisor", "centreBeat", "lowestPitchNumber", "toNoteNumber", "centreNumber", "h", "lengthOf", "number", "firstNumber", "lastNumber", "avgNumber", "avgPitch", "toNoteName", "createTuplet", "settings", "rhythm", "isPowerOf2", "lt", "lte", "p", "push", "createPart", "config_default", "headDurations", "restDurations", "data", "detectTuplet", "getDivision", "barDivisions", "getDivisions", "duration", "divisor", "barDivisions", "nothing_default", "getDivision", "divisions", "b1", "b2", "ignoreTypes", "accidentalChars", "fathercharles", "byFatherCharlesPitch", "a", "b", "ai", "bi", "updateAccidentals", "accidentals", "key", "toKeyScale", "n", "acci", "major", "name", "toRootName", "createBarSymbols", "symbols", "bar", "stave", "events", "settings", "event", "toRootNumber", "keyscale", "i", "o", "beat", "keyWeights", "keyWeightsForEvent", "keyNumber", "chooseKeyFromWeights", "root", "createBar", "count", "duration", "divisor", "parts", "sequence", "config_default", "sequenceStop", "toStopBeat", "getDivisions", "index", "p", "part", "createPart", "ignoreKeys", "key", "value", "jsonifyBar", "bar", "clone", "symbol", "replaceWithRepeat", "count", "detectBarRepeats", "bars", "jsons", "json", "pushEventToPart", "stave", "parts", "event", "part", "partEvents", "createBars", "sequence", "excludes", "settings", "config_default", "scribeEvents", "ties", "beat", "events", "stopBeat", "duration", "divisor", "sequenceEvent", "createBar", "t", "toStopBeat", "$id", "id", "identify", "event", "abs", "chordParts", "acciFlat", "acciSharp", "acciClasses", "acciGlyphs", "acciDoubleSharp", "acciNatural", "acciDoubleFlat", "restGlyphs", "rest2", "rest1", "rest05", "rest025", "rest0125", "rextensionparts", "truncate", "number", "create_symbol_element_default", "overload", "get_default", "symbol", "create_default", "glyphs_exports", "parts", "rsharp", "rflat", "chordBassSlash", "identify", "coda", "toNoteNumber", "settings", "beamThickness", "map", "types", "isInitialMeterEvent", "event", "isInitialKeyEvent", "toElements", "nodes", "symbol", "element", "create_symbol_element_default", "toBarElements", "elements", "bar", "create_default", "toRootName", "render", "data", "excludes", "clef", "keyname", "meter", "duration", "transpose", "displace", "settings", "config_default", "events", "stave", "stave_default", "transforms", "sequence", "SequenceIterator", "bars", "createBars", "bar0", "keysig", "sidebar", "column", "n"]
}
