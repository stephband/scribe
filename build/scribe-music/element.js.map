{
  "version": 3,
  "sources": ["https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/signal.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/id.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/overload.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/cache.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/curry.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/noop.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/assign.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/create.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/exec.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/capture.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/element/internals.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/element.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/to-type.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/stream/stopable.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/stream/stream.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/events.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/arg.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/id.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/noop.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/self.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/nothing.js", "https://cdn.jsdelivr.net/gh/stephband/fn/modules/mod.js", "https://cdn.jsdelivr.net/gh/stephband/midi@1.1.0/modules/note.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/get.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/sum.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/mod.js", "../../modules/maths.js", "../../modules/sequence/to-beats.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/arg.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/self.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/nothing.js", "../../modules/scale.js", "../../modules/keys.js", "../../modules/event/chord.js", "../../modules/event/to-notes.js", "../../modules/event/to-duration.js", "../../modules/sequence/events-at-beat.js", "../../modules/sequence/to-keys.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/by.js", "../../modules/sequence/key-at-beat.js", "../../modules/glyphs.js", "../../modules/event/to-spelling.js", "../../modules/regexp.js", "../../modules/stave/stave.js", "../../modules/stave/drum.js", "../../modules/stave/percussion.js", "../../modules/stave/piano.js", "../../modules/stave.js", "../../modules/quantise.js", "../../modules/bar.js", "../../modules/config.js", "../../modules/create-symbols.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/cache-by-key.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/choose.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/parse.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/request.js", "https://cdn.jsdelivr.net/gh/stephband/fn@1.5.1/modules/matches.js", "../../lib/abcjs/modules/parse/abc_common.js", "../../lib/abcjs/modules/parse/abc_parse_directive.js", "../../lib/abcjs/modules/parse/all-notes.js", "../../lib/abcjs/modules/parse/transpose-chord.js", "../../lib/abcjs/modules/const/relative-major.js", "../../lib/abcjs/modules/const/key-accidentals.js", "../../lib/abcjs/modules/parse/abc_transpose.js", "../../lib/abcjs/modules/parse/abc_parse_key_voice.js", "../../lib/abcjs/modules/parse/abc_parse_header.js", "../../lib/abcjs/modules/parse/abc_parse_settings.js", "../../lib/abcjs/modules/parse/abc_parse_music.js", "../../lib/abcjs/modules/parse/abc_tokenizer.js", "../../lib/abcjs/modules/parse/wrap_lines.js", "../../lib/abcjs/modules/write/helpers/spacing.js", "../../lib/abcjs/modules/data/deline-tune.js", "../../lib/abcjs/modules/data/abc_tune.js", "../../lib/abcjs/modules/parse/tune-builder.js", "../../lib/abcjs/modules/parse/abc_parse.js", "../../modules/parse/parse-abc.js", "../../modules/parse/parse-sequence-text.js", "../../modules/parse.js", "../../modules/request-data.js", "../../modules/timesig.js", "https://cdn.jsdelivr.net/gh/stephband/dom@1.4.1/modules/rect.js", "../../modules/beam.js", "../../modules/event.js", "../../modules/create-symbol-element.js", "../../modules/create-bar-elements.js", "../../scribe-music/element.js"],
  "sourcesContent": ["\nconst DEBUG  = false;//window.DEBUG && window.DEBUG.signal !== false;\nconst assign = Object.assign;\n\nlet evaluatingSignal;\nlet hasInvalidDependency;\nlet id = 0;\n\n\nfunction removeInput(signal, input) {\n    // Remove input from stream\n    let i = 0;\n    while (signal[--i] && signal[i] !== input);\n    while (signal[i--]) signal[i + 1] = signal[i];\n}\n\nfunction removeOutput(signal, output) {\n    // Remove output from signal\n    let o = -1;\n    while (signal[++o] && signal[o] !== output);\n    while (signal[o++]) signal[o - 1] = signal[o];\n}\n\nfunction clearInputs(signal) {\n    let n = 0;\n    while (signal[--n]) {\n        // -------------------------- Experimental -----------------------------\n        // Stop inputs? An input with a stop method – an observer – can only have\n        // become a dependency if it were constructed during a render (they don't\n        // evaluate synchronously so they don't become dependencies otherwise).\n        // Therefore also, it can only have one output, this. Therefore it is\n        // safe to stop it. I am right about this am I not?\n        if (signal[n].stop) signal[n].stop();\n        // ---------------------------------------------------------------------\n        signal[n] = undefined;\n    }\n}\n\nfunction setDependency(signal, dependent) {\n    // Set signal as an input of dependent\n    let n = 0;\n    while (dependent[--n]) if (dependent[n] === signal) break;\n    dependent[n] = signal;\n\n    // Set dependent as an output of signal\n    n = -1;\n    while (signal[++n]) if (signal[n] === dependent) break;\n    signal[n] = dependent;\n\n    if (DEBUG) console.log(\n        '%cSignal%c connect%c ' + signal.constructor.name + '#' + signal.id + ' - ' + dependent.constructor.name + '#' + dependent.id,\n        'color: #718893; font-weight: 300;',\n        'color: #3896BF; font-weight: 300;',\n        'color: #718893; font-weight: 300;'\n    );\n}\n\nfunction invalidateDependents(signal) {\n    if (DEBUG) {\n        console.log(\n            '%cSignal%c invalidate%c ' + signal.constructor.name + '#' + signal.id + (signal.name ? ' \"' + signal.name + '\"' : ''),\n            'color: #718893; font-weight: 300;',\n            'color: #3896BF; font-weight: 300;',\n            'color: #718893; font-weight: 300;'\n        );\n    }\n\n    let n = -1;\n    let dependent;\n    while (dependent = signal[++n]) {\n        signal[n] = undefined;\n        dependent.invalidate(signal);\n    }\n}\n\nexport function hasInput(signal, input) {\n    // Check if input exists in the -ve indexes\n    let n = 0;\n    while (signal[--n]) if (signal[n] === input) return true;\n}\n\n\n/**\nSignal\n\nA signal is an object that represents a value that may change. A signal has\nessentially one property, `.value`. A state signal can have its `.value`\nwritten, a compute signal's `.value` may only be read.\n\nThe `Signal` constructor is not called directly, but calling `Signal.of(value)`\ncreates a state signal, and `Signal.from(fn)` creates a compute signal.\n**/\n\nexport default class Signal {\n    /**\n    Signal.isSignal(object)\n\n    Returns `true` where `object` is an instance of `Signal`.\n\n    This guarantees that `object` has a gettable `value` property. This is not\n    true of an Observer, which is not really a signal at all – it cannot\n    have dependencies – but is only evaluated as one when invalidated.\n    **/\n\n    static isSignal(object) {\n        return object instanceof Signal;\n    }\n\n    /**\n    Signal.of()\n    Signal.of(value)\n\n    Creates a state signal that has essentially one property, `.value`.\n    When `.value` is set the signal becomes invalid, stale, out of date,\n    irrelevant, historic, old, and any signals that depend on it are invalidated.\n    **/\n\n    static of(value) {\n        return new ValueSignal(value);\n    }\n\n    /**\n    Signal.from(fn)\n    Signal.from(promise)\n    Signal.from(stream)\n\n    Creates a compute signal from a function, where `fn` computes a value by\n    reading other signals' values. This signal is then invalidated when any of\n    the read signals are invalidated.\n\n    Creates a state signal from a promise or stream that invalidates\n    dependencies as the promise or streams' values resolve.\n    **/\n\n    static from(fn, context) {\n        // Promise\n        if (fn.then) {\n            const signal = Signal.of();\n            fn.then((value) => signal.value = value);\n            return signal;\n        }\n\n        // Pipeable\n        if (fn.pipe) {\n            return fn.pipe(new PushSignal());\n        }\n\n        // Function\n        return new ComputeSignal(fn, context);\n    }\n\n    static compute(fn, context) {\n        return new ComputeSignal(fn, context);\n    }\n\n    static fromProperty(name, object) {\n        // Function\n        return new PropertySignal(name, object);\n    }\n\n    /**\n    Signal.frame(fn, initial)\n    Returns an observe signal, a form of compute signal that calls `fn` once\n    immediately, and then on every animation frame following the invalidation\n    of any signal read during the execution of `fn`.\n    **/\n\n    static frame(fn) {\n        // Add to signals called on invalidation\n        return new FrameSignal(fn);\n    }\n\n    /**\n    Signal.tick(fn, initial)\n    Returns an observe signal, a form of compute signal that calls `fn` once\n    immediately, and then on every tick following the invalidation of any signal\n    read during the execution of `fn`.\n    **/\n\n    static tick(fn) {\n        // Add to signals called on invalidation\n        return new TickSignal(fn);\n    }\n\n    /**\n    Signal.temporal(name, object)\n    Creates a signal with an `.invalidateUntil(time)` method that maintains\n    invalidity until `time` is reached.\n    **/\n\n    static temporal(name, object) {\n        return new TimedSignal(name, object);\n    }\n\n    /**\n    Signal.evaluate(object, fn[, context])\n\n    A function for building objects that behave as compute or observe signals.\n\n    Evaluates `object` as a signal by applying it to `fn` and returning the\n    result. Signals read during `fn()` have `object` registered as a dependent,\n    so `object.invalidate()` is called when any of those signals are invalidated.\n    It's the same function as that used internally to evaluate signals.\n\n    Typically `object.invalidate()` would cue a `Signal.evaluate(object, fn)` at\n    some point in the future. (It is ill-advised to `Signal.evaluate(object, fn)`\n    synchronously inside `.invalidate()`, although this should only lead to\n    wasted cycles, not bad results... errm, in most cases, at least.)\n    **/\n\n    static evaluate(signal, fn, context = signal) {\n        // Make signal the evaluating signal for the duration of this\n        // synchronous evaluation of fn()\n        const previous = evaluatingSignal;\n        evaluatingSignal = signal;\n\n        // Clear the decks\n        if (!previous) hasInvalidDependency = false;\n\n        /*if (window.DEBUG && window.DEBUG.signal !== false) console.group(\n            '%cSignal%c evaluate%c ' + evaluatingSignal.constructor.name + '#' + evaluatingSignal.id + (evaluatingSignal.name ? ' \"' + evaluatingSignal.name + '\"' : ''),\n            'color: #718893; font-weight: 300;',\n            'color: #3896BF; font-weight: 300;',\n            'color: #718893; font-weight: 300;'\n        );*/\n\n        const value = fn.apply(context);\n\n        /*if (window.DEBUG && window.DEBUG.signal !== false) console.groupEnd();*/\n\n        evaluatingSignal = previous;\n\n        // Call synchronous updates\n        //if (!evaluatingSignal) handlers.forEach(call);\n\n        return value;\n    }\n\n    static get hasInvalidDependency() {\n        return hasInvalidDependency;\n    }\n\n    /*\n    Signal.evaluating\n    The signal that is currently being evaluated, or undefined. This is exposed\n    so that Data() can make a better call about when to create signals (if there\n    is no evaluating signal, it needn't make a signal when a property is\n    accessed). Deliberately undocumented.\n    */\n\n    static get evaluating() {\n        return evaluatingSignal;\n    }\n\n    constructor(name) {\n        if (name) this.name = name;\n\n        if (DEBUG) {\n            this.id = ++id;\n            console.log(\n                '%cSignal%c create%c ' + this.constructor.name + '#' + this.id + (this.name ? ' \"' + this.name + '\"' : ''),\n                'color: #718893; font-weight: 300;',\n                'color: #3896BF; font-weight: 300;',\n                'color: #718893; font-weight: 300;'\n            );\n        }\n    }\n\n    /**\n    .valueOf()\n\n    Enables direct use in some expressions like addition or string concatenation.\n    This may prove to be less useful than we think. For one thing, logging a\n    signal object now evaluates it, affecting the outcome.\n    **/\n\n    valueOf() {\n        return this.value;\n    }\n\n    /*\n    .toString()\n    .toJSON()\n\n    Treat `.value` as the value to output?\n    */\n\n    toString() {\n        return this.value + '' ;\n    }\n\n    toJSON() {\n        return this.value;\n    }\n}\n\n\n/*\nValueSignal(value)\n*/\n\nclass ValueSignal extends Signal {\n    #value;\n\n    constructor(value) {\n        super();\n        this.#value = value;\n    }\n\n    /**\n    .value\n\n    Getting `.value` gets value from the cache.\n\n    Setting `.value`, assuming the newly set value differs from the previous\n    value, updates the cache and invalidates dependent signals.\n    **/\n\n    get value() {\n        // If there is a signal currently evaluating then it becomes a\n        // dependency of this signal, irrespective of state of #value\n        if (evaluatingSignal) setDependency(this, evaluatingSignal);\n        return this.#value;\n    }\n\n    set value(value) {\n        // Don't update for no change in value\n        if(this.#value === value) return;\n\n        // Set cached value\n        this.#value = value;\n\n        // Invalidate dependents. If a dependent updates synchronously here\n        // we may be in trouble but #valid is true and #value is set so\n        // that's ok I think?\n        invalidateDependents(this);\n    }\n}\n\n\n/*\nPushSignal(value)\nAn consumer interface that allows you to terminate a Stream in a signal.\n\n```js\nStream.of(1).pipe(new PushSignal())\n```\n*/\n\nclass PushSignal extends Signal {\n    #value;\n\n    constructor(value) {\n        super();\n        this.#value = value;\n    }\n\n    /**\n    .value\n    Getting `.value` gets value from the cache.\n    **/\n    get value() {\n        // If there is a signal currently evaluating then it becomes a\n        // dependency of this signal, irrespective of state of #value\n        if (evaluatingSignal) setDependency(this, evaluatingSignal);\n        return this.#value;\n    }\n\n    /**\n    .push(value)\n    Updates the cache with `value` and invalidates dependent signals.\n    **/\n    push(value) {\n        // Don't update for no change in value\n        if(this.#value === value) return;\n\n        // Set cached value\n        this.#value = value;\n\n        // Invalidate dependents.\n        invalidateDependents(this);\n    }\n}\n\n\n/*\nPropertySignal(value)\nWraps a property in a signal. TODO: is this really needed?\n*/\n\nclass PropertySignal extends Signal {\n    // Privates\n    #valid;\n    #value;\n\n    constructor(name, object) {\n        super(name);\n        this.object = object;\n    }\n\n    evaluate() {\n        return this.object[this.name];\n    }\n\n    /**\n    .value\n    Getting `.value` gets a cached value or, if the signal is invalid,\n    evaluates (and caches) value from `fn()`. During evaluation this signal is\n    registered as dependent on other signals whose value is got.\n    **/\n\n    get value() {\n        // If there is a signal currently evaluating then it becomes a\n        // dependency of this signal, irrespective of state of #value\n        if (evaluatingSignal) setDependency(this, evaluatingSignal);\n        if (this.#valid) return this.#value;\n        this.#value = Signal.evaluate(this, this.evaluate, this);\n        if (!hasInvalidDependency) this.#valid = true;\n        return this.#value;\n    }\n\n    set value(value) {\n        // Don't update for no change in value.\n        if(this.#value === value) return;\n\n        const { object, name } = this;\n\n        // Set value on object and update value from object in case target is\n        // doing something funky with property descriptors that return a\n        // different value from the value set.\n        object[name] = value;\n        value = object[name];\n\n        // Don't invalidate for no change in value.\n        if(this.#value === value) return;\n\n        // Set cache by reading value back off the object in case object is\n        // doing something funky with property descriptors that return a\n        // different value from the value that was set. Rare, but it can happen.\n        this.#value = value;\n\n        // Invalidate dependents. If a dependent updates synchronously here\n        // we may be in trouble but #valid is true and #value is set so\n        // that's ok I think?\n        invalidateDependents(this);\n    }\n\n    /*\n    .invalidate(signal)\n    Invalidates this signal and calls `.invalidate(this)` on all dependent\n    signals. The `signal` parameter is the signal causing the invalidation; it\n    may be `undefined`: where it exists it is verified as a current input of\n    this before this is invalidated.\n    */\n\n    invalidate(signal) {\n        if (!this.#valid) return;\n\n        // Verify that signal has the right to invalidate this to protect us\n        // against the case where a dependent is left on another signal due to\n        // an old evaluation\n        if (signal && !hasInput(this, signal)) return;\n\n        this.#valid = false;\n\n        // Clear inputs\n        clearInputs(this);\n\n        // Invalidate dependents. If a dependent updates synchronously here\n        // we may be in trouble, as it would evaluate and cache this signal\n        // and overwrite dependents before we have finished invalidating\n        // this set of dependents.\n        invalidateDependents(this);\n    }\n}\n\n\n/*\nComputeSignal(value)\n*/\n\nclass ComputeSignal extends Signal {\n    // Privates\n    #fn;\n    #context;\n    #valid;\n    #value;\n\n    constructor(fn, context) {\n        super();\n        this.#fn      = fn;\n        this.#context = context;\n    }\n\n    /**\n    .value\n    Getting `.value` gets a cached value or, if the signal is invalid,\n    evaluates (and caches) value from `fn()`. During evaluation this signal is\n    registered as dependent on other signals whose value is got.\n    **/\n\n    get value() {\n        // If there is a signal currently evaluating then it becomes a\n        // dependency of this signal, irrespective of state of #value\n        if (evaluatingSignal) setDependency(this, evaluatingSignal);\n        if (this.#valid) return this.#value;\n        this.#value = Signal.evaluate(this, this.#fn, this.#context);\n        if (!hasInvalidDependency) this.#valid = true;\n        return this.#value;\n    }\n\n    /*\n    .invalidate(signal)\n    Invalidates this signal and calls `.invalidate(this)` on all dependent\n    signals. The `signal` parameter is the signal causing the invalidation; it\n    may be `undefined`: where it exists it is verified as a current input of\n    this before this is invalidated.\n    */\n\n    invalidate(signal) {\n        if (!this.#valid) return;\n\n        // Verify that signal has the right to invalidate this to protect us\n        // against the case where a dependent is left on another signal due to\n        // an old evaluation\n        if (signal && !hasInput(this, signal)) return;\n\n        this.#valid = false;\n\n        // Clear inputs\n        clearInputs(this);\n\n        // Invalidate dependents. If a dependent updates synchronously here\n        // we may be in trouble, as it would evaluate and cache this signal\n        // and overwrite dependents before we have finished invalidating\n        // this set of dependents.\n        invalidateDependents(this);\n    }\n}\n\n\n/**\nTimedSignal(name, object)\nA signal that wraps an AudioParam and remains invalid until a specified time in\nthe future. This ensures that any FrameSignal signals that depend on it keep\nrendering until automation completes.\n**/\n\nexport class TimedSignal extends Signal {\n    #validTime = 0;\n\n    constructor(name, object) {\n        super(name);\n        this.object = object;\n    }\n\n    getTime() {\n        return window.performance.now();\n    }\n\n    evaluate() {\n        return this.object[this.name];\n    }\n\n    /**\n    .value\n    Getting `.value` gets the object's value. If there's an evaluating signal,\n    it becomes dependent on this ParamSignal. The signal remains invalid until\n    the `.getTime()` reaches `.invalidateUntil(time)` time.\n    **/\n    get value() {\n        // If there is a signal currently evaluating then it becomes a\n        // dependency of this signal\n        if (Signal.evaluating) {\n            setDependency(this, evaluatingSignal);\n\n            // This is a timed signal, therefore may remain invalid following an\n            // evaluation. We can't invalidate the graph while evaluating, but\n            // the invalid state must prevent dependents from becoming valid...\n            // ...so set a flag marking the current evaluation as invalid\n            if (this.getTime() < this.#validTime) hasInvalidDependency = true;\n        }\n\n        // Get the current value from the audio param\n        return this.evaluate();\n    }\n\n    // DEPRECATE\n    set value(value) {\n        console.warn('Dont really want to be setting value of TimedSignal');\n        console.trace();\n\n        // Don't update for no change in value.\n        if(this.object[this.name] === value) return;\n\n        // Update value and invalidate until now\n        this.object[this.name] = value;\n        invalidateUntil(this.getTime());\n    }\n\n    /**\n    .invalidateUntil(time)\n    Sets a time at which this signal becomes valid. Until this time is reached\n    the signal remains invalid, causing dependent observer signals to keep\n    observing.\n    **/\n    invalidateUntil(time) {\n        // Don't do anything if the #validTime isn't changing ... Hmmm ... see\n        // below. I think this condition suffers the same problem.\n        //if (time === this.#validTime) return;\n\n        const currentTime = this.getTime();\n        const isValid     = currentTime >= this.#validTime;\n\n        // Update the #validTime\n        this.#validTime = time;\n\n        // If we are moving into a valid state do nothing ... Hmmmmmm ...\n        // This condition interferes with being able to invalidate a time in the\n        // past, which we may want to do for example for latency compensation.\n        // If we are calling .invalidateUntil(), I think we can assume something\n        // has changed and we need to invalidate unless we were already invalid.\n        //if (currentTime > time) return;\n\n        // If we are moving out of a valid state invalid dependents\n        if (isValid) invalidateDependents(this);\n    }\n}\n\n\n/*\nObserver(evaluate)\nAn Observer is a signal that schedules it's own evaluation. It calls `evaluate`\non construction and again on every cue following an invalidation of any signal\nread by `evaluate`. Internal only, sub-classed by `TickSignal` and `FrameSignal`.\n*/\n\nclass Observer extends Signal {\n    constructor(fn) {\n        super();\n\n        if (DEBUG) {\n            this.id = ++id;\n            console.log(\n                '%cSignal%c create%c ' + this.constructor.name + '#' + this.id + (this.name ? ' \"' + this.name + '\"' : ''),\n                'color: #718893; font-weight: 300;',\n                'color: #3896BF; font-weight: 300;',\n                'color: #718893; font-weight: 300;'\n            );\n        }\n\n        // Check we are not currently evaluating. This would be bad because an\n        // evaluation is ephemereal – it may run again, leaving this signal in\n        // memory yet superseded by the one created in the latest evaluation.\n        if (evaluatingSignal) {\n            // ------------------------ Experimental ---------------------------\n            // We can set this as an input of evaluatingSignal. this will never\n            // invalidate evaluatingSignal – it has no mechanism to do so – but\n            // when evaluatingSignal is invalidated this will be stopped.\n            let n = 0;\n            while (evaluatingSignal[--n]) if (evaluatingSignal[n] === this) break;\n            evaluatingSignal[n] = this;\n            // -----------------------------------------------------------------\n\n            // The old way was to throw an error.\n            // Make recovery possible? I'm not convinced this works in all cases\n            // but it works where an observer is instantiated inside an observer\n            //evaluatingSignal = undefined;\n            //throw new Error('Illegal nested ' + this.constructor.name + ' – cannot instantiate observer during signal evaluation');\n        }\n\n        // If no fn passed in we do not want to evaluate the signal immediately.\n        // This provides for a sub-class to define .evaluate() and launch it\n        // when it likes, as in Literal's Renderer.\n        if (!fn) return;\n\n        // Set fn as evaluation function\n        this.evaluate = fn;\n\n        // An initial, synchronous evaluation binds this observer to changes\n        if (Signal.evaluate(this, this.evaluate) || hasInvalidDependency) this.cue();\n    }\n\n    invalidate(input) {\n        // Static observers list\n        const observers = this.constructor.observers;\n\n        // If the observer is already cued do nothing\n        if (observers.indexOf(this) !== -1) return;\n\n        // Verify that input signal has the right to invalidate this\n        if (input && !hasInput(this, input)) return;\n\n        // Clear inputs\n        clearInputs(this);\n\n        this.cue();\n    }\n\n    stop() {\n        // Remove this from signal graph\n        let n = 0, input;\n        while (input = this[--n]) {\n            let m = -1;\n            this[n] = undefined;\n            // --------------------- Experimental ------------------------------\n            // A stopable signal has no output\n            if (input.stop) input.stop();\n            // -----------------------------------------------------------------\n            else removeOutput(input, this);\n        }\n\n        // Remove from observers if cued\n        const observers = this.constructor.observers;\n        const i = observers.indexOf(this);\n        if (i !== -1) {\n            // You cannot do this during a render cycle\n            if (observers === rendering) throw new Error('Attempt to remove observer while observers is rendering');\n            observers.splice(i, 1);\n        }\n        return this;\n    }\n\n    valueOf()  { return this; }\n    toString() { return '[object Signal]' ; }\n    toJSON()   { return; }\n}\n\nlet rendering;\n\nfunction render(observers) {\n    let n = -1, signal;\n\n    rendering = observers;\n    while (signal = observers[++n]) {\n        // Evaluate the signal, if it returns false-y, and nothing has flagged\n        // it as having invalid dependencies...\n        if (!Signal.evaluate(signal, signal.evaluate) && !hasInvalidDependency) {\n            // ...remove the signal from observers and decrement n\n            observers.splice(n--, 1);\n        }\n    }\n    rendering = undefined;\n    return observers;\n}\n\n\n/*\nTickSignal\nA TickSignal is a signal that calls `fn` on construction and again on every\ntick following an invalidation of any signal read by `fn`. Use `Signal.tick(fn)`.\n*/\n\nconst promise = Promise.resolve();\n\nfunction tick() {\n    const observers = render(TickSignal.observers);\n\n    // Where observers remain schedule the next tick\n    if (observers.length) promise.then(tick);\n}\n\nexport class TickSignal extends Observer {\n    static observers = [];\n\n    cue() {\n        const observers = this.constructor.observers;\n\n        // If no observers are cued, cue tick() on the next tick\n        if (!observers.length) promise.then(tick);\n\n        // Add this observer to observers\n        observers.push(this);\n    }\n}\n\n\n/*\nFrameSignal\n\nA FrameSignal is an observer signal that calls `fn` on construction and again\non every animation frame following an invalidation of any signal read by `fn`.\nAdditionally where the return value of `fn()` is truthy the signal remains\nactive and will evaluate on following frames until `fn()` is false-y.\n\nUse `Signal.frame(fn)` to create a FrameSignal signal.\n*/\n\nfunction frame() {\n    const observers = render(FrameSignal.observers);\n\n    // Where observers remain schedule the next frame\n    if (observers.length) requestAnimationFrame(frame);\n}\n\nexport class FrameSignal extends Observer {\n    static observers = [];\n\n    cue() {\n        const observers = this.constructor.observers;\n\n        // If no observers are cued, cue frame() on the next frame\n        if (!observers.length) window.requestAnimationFrame(frame);\n\n        // Add this observer to observers\n        observers.push(this);\n    }\n}\n", "/**\nid(value)\nReturns `value`.\n**/\n\nexport default function id(value) { return value; }\n", "/**\noverload(fn, object)\n\nReturns an overloaded.\n\nTakes a `fn` that returns a string key, and an `object` of key:function\npairs. The returned function calls `fn` with all arguments to get a key,\nthen calls the function at `object[key]` with all arguments.\n\nWhere `fn` returns `undefined`, `object.default` is called if it is defined\nin `object`, otherwise `overload` throws a 'no function defined for key' error.\n\n```\nvar handleEvent = overload(get('type'), {\n    click:   (e) => {...},\n    input:   (e) => {...},\n    default: (e) => {...}\n});\n```\n*/\n\n\nexport default function overload(fn, map) {\n    return function overload() {\n        const key     = fn.apply(this, arguments);\n        const handler = (map[key] || map.default);\n\n        if (!handler) {\n            throw new Error('overload() no function defined for key \"' + key + '\"');\n        }\n\n        return handler.apply(this, arguments);\n    };\n}\n", "/**\ncache(fn)\nReturns a function that caches the output values of `fn(input)` against input\nvalues in a map, such that for each input value `fn` is only ever called once.\n*/\n\nlet warned;\n\nexport default function cacheByObject(fn) {\n    var map = new Map();\n\n    return function cache(object) {\n        if (window.DEBUG && !warned && object === undefined) {\n            warned = true;\n            console.warn('cache() called with undefined. Not illegal, but potentially bad.');\n        }\n\n        if (window.DEBUG && arguments.length > 1) {\n            console.warn('cache() called with ' + arguments.length + ' arguments. Accepts exactly 1.');\n        }\n\n        if (map.has(object)) {\n            return map.get(object);\n        }\n\n        var value = fn(object);\n        map.set(object, value);\n        return value;\n    };\n}\n", "/**\ncurry(fn [, muteable, arity])\nReturns a function that wraps `fn` and makes it partially applicable.\n*/\n\nimport cache from './cache.js';\n\nconst A     = Array.prototype;\n\nfunction applyFn(fn, args) {\n    return typeof fn === 'function' ? fn.apply(null, args) : fn ;\n}\n\nfunction curry(fn, muteable, arity) {\n    arity = arity || fn.length;\n\n    var memo = arity === 1 ?\n        // Don't cache if `muteable` flag is true\n        muteable ? fn : cache(fn) :\n\n        // It's ok to always cache intermediate memos, though\n        cache(function(object) {\n            return curry(function() {\n                var args = [object];\n                args.push.apply(args, arguments);\n                return fn.apply(null, args);\n            }, muteable, arity - 1) ;\n        }) ;\n\n    return function partial(object) {\n        return arguments.length === 0 ?\n            partial :\n        arguments.length === 1 ?\n            memo(object) :\n        arguments.length >= arity ?\n            fn.apply(null, arguments) :\n        // This is bad, I think. We don't want [[fn],[fn]].map(get(0)) to be firing the fns\n        //arguments.length > arity ?\n        //    applyFn(fn.apply(null, A.splice.call(arguments, 0, arity)), arguments) :\n        applyFn(memo(object), A.slice.call(arguments, 1)) ;\n    };\n}\n\n//function curry(fn, muteable, arity) {\n//    arity = arity || fn.length;\n//    return function curried() {\n//        return arguments.length >= arity ?\n//            fn.apply(null, arguments) :\n//            curried.bind(null, ...arguments) ;\n//    };\n//}\n\nif (window.DEBUG) {\n    const _curry = curry;\n\n    // Feature test\n\tconst isFunctionLengthDefineable = (function() {\n\t\tvar fn = function() {};\n\n\t\ttry {\n\t\t\t// Can't do this on Safari - length non configurable :(\n\t\t\tObject.defineProperty(fn, 'length', { value: 2 });\n\t\t}\n\t\tcatch(e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn fn.length === 2;\n\t})();\n\n    const setFunctionProperties = function setFunctionProperties(text, parity, fn1, fn2) {\n        // Make the string representation of fn2 display parameters of fn1\n        fn2.toString = function() {\n            return /function\\s*[\\w\\d]*\\s*\\([,\\w\\d\\s]*\\)/.exec(fn1.toString()) + ' { [' + text + '] }';\n        };\n\n        // Where possible, define length so that curried functions show how\n        // many arguments they are yet expecting\n        if (isFunctionLengthDefineable) {\n            Object.defineProperty(fn2, 'length', { value: parity });\n        }\n\n        return fn2;\n    };\n\n    // Make curried functions log a pretty version of their partials\n    curry = function curry(fn, muteable, arity) {\n        arity  = arity || fn.length;\n        return setFunctionProperties('curried', arity, fn, _curry(fn, muteable, arity));\n    };\n}\n\n\nexport default curry;\n", "/**\nnoop()\nDoes nothing, returns undefined.\n**/\n\nexport default function noop() {}\n", "/**\nassign(node, properties)\n\nAssigns each property of `properties` to `node`, as a property where that\nproperty exists in `node`, otherwise as an attribute.\n\nIf `properties` has a property `'children'` it must be an array of nodes;\nthey are appended to 'node'.\n\nThe property `'html'` is aliased to `'innerHTML'`. The property `'text'`\nis aliased to `'textContent'`. The property `'tag'` is treated as an alias\nof `'tagName'` (which is ignored, as `node.tagName` is read-only). The\nproperty `'is'` is also ignored.\n*/\n\nimport curry from 'fn/curry.js';\nimport id from 'fn/id.js';\nimport noop from 'fn/noop.js';\nimport overload from 'fn/overload.js';\n\nconst assignProperty = overload(id, {\n\t// Ignore read-only properties or attributes\n\tis: noop,\n\ttag: noop,\n\n\tdata: function(name, node, object) {\n\t\t// Strip undefined\n\t\tfor (name in object) {\n\t\t\tif (object[name] === undefined) {\n\t\t\t\tdelete object[name];\n\t\t\t}\n\t\t}\n\n\t\tObject.assign(node.dataset, object);\n\t},\n\n\tdataset: function(name, node, object) {\n        // Strip undefined\n        for (name in object) {\n            if (object[name] === undefined) {\n                delete object[name];\n            }\n        }\n\n\t\tObject.assign(node.dataset, object);\n\t},\n\n\thtml: function(name, node, content) {\n\t\tnode.innerHTML = content;\n\t},\n\n\ttext: function(name, node, content) {\n\t\tnode.textContent = content;\n\t},\n\n\tstyle: overload((name, node, content) => typeof content, {\n\t\tstring: (name, node, content) => node.style = content,\n\t\tobject: (name, node, content) => Object.assign(node.style, content)\n\t}),\n\n\tchildren: function(name, node, content) {\n\t\t// Empty the node and append children\n\t\tnode.innerHTML = '';\n\t\tnode.append.apply(node, content);\n\t},\n\n\t// SVG elements have a read-only properties, and must be set as string\n\t// attributes. Todo: explore the SVG property API to make these take\n\t// advantage of it\n    href: function(name, node, content) {\n        if (node instanceof SVGElement) {\n            node.setAttribute('href', content);\n        }\n        else {\n            node.href = content;\n        }\n    },\n\n\tpoints:    setAttribute,\n    cx:        setAttribute,\n    cy:        setAttribute,\n    r:         setAttribute,\n\tx:         setAttribute,\n\ty:         setAttribute,\n\tdx:        setAttribute,\n\tdy:        setAttribute,\n\ttransform: setAttribute,\n    preserveAspectRatio: setAttribute,\n    viewBox:   setAttribute,\n\n\tdefault: function(name, node, content) {\n\t\tif (name in node) {\n\t\t\tnode[name] = content;\n\t\t}\n\t\telse {\n\t\t\tnode.setAttribute(name, content);\n\t\t}\n\t}\n});\n\nfunction setAttribute(name, node, content) {\n\tnode.setAttribute(name, content);\n}\n\nexport function assign(node, attributes) {\n\tvar names = Object.keys(attributes);\n\tvar n = names.length;\n\n    // Avoid setting undefined\n    while (n--) if (attributes[names[n]] !== undefined) {\n        assignProperty(names[n], node, attributes[names[n]]);\n    }\n\n\treturn node;\n}\n\nexport default curry(assign, true);\n", "\nimport id       from 'fn/id.js';\nimport overload from 'fn/overload.js';\nimport assign   from './assign.js';\n\nconst svgNamespace = 'http://www.w3.org/2000/svg';\n\nconst template      = document.createElement('template');\nconst typeofContent = (type, content) => (content && typeof content);\n\n// Constructors\n\nfunction createContextFragment(context, html = '') {\n    const range = document.createRange();\n    range.selectNode(context);\n    return range.createContextualFragment(html);\n}\n\nconst createSVG = overload(typeofContent, {\n    string: function(tag, html) {\n        const node = document.createElementNS(svgNamespace, tag);\n        node.innerHTML = html;\n        return node;\n    },\n\n    object: function(tag, object) {\n        const node = document.createElementNS(svgNamespace, tag);\n\n        // Is it array-like?\n        if (typeof object.length === 'number') {\n            // Be careful here in case object is a live NodeList, which will\n            // mutate as you iterate over it. Applying object to .append()\n            // appears to not have this problem, and will work on arrays.\n            node.append.apply(node, object);\n        }\n        else {\n            assign(node, object);\n        }\n\n        return node;\n    },\n\n    default: (tag) => document.createElementNS(svgNamespace, tag)\n});\n\nconst createHTML = overload(typeofContent, {\n    string: function(tag, html) {\n        const node = document.createElement(tag);\n        node.innerHTML = html;\n        return node;\n    },\n\n    object: function(tag, object) {\n        const node = document.createElement(tag);\n\n        // Is it array-like?\n        if (typeof object.length === 'number') {\n            // Be careful here in case object is a live NodeList, which will\n            // mutate as you iterate over it. Applying object to .append()\n            // appears to not have this problem, and will work on arrays.\n            node.append.apply(node, object);\n        }\n        else {\n            assign(node, object);\n        }\n\n        return node;\n    },\n\n    default: (tag) => document.createElement(tag)\n});\n\n/**\ncreate(tag, content)\n\nConstructs and returns a new DOM node.\n\n- If `tag` is `\"text\"` a text node is created.\n- If `tag` is `\"fragment\"` a fragment is created.\n- If `tag` is `\"comment\"` a comment is created.\n- If `tag` is any other string the element `<tag></tag>` is created.\n\nWhere a comment or text node is created `content` must be a string, as is set as\ntextContent. For fragments and other nodes:\n\n- If `content` is a string it is set as innerHTML.\n- If `content` is array-like its items are appended to node. Note that where\n`content` is a NodeList, this removes nodes from whatever the NodeList belongs\nto.\n- If `content` is an object its properties are assigned as node properties or\nattributes.\n\n##### `create(tag, content, context)`\n\nWhere `tag` is `fragment` there is an optional third parameter `context`, which\nmust be an element. The fragment parser is run in the context of this element.\n\n```\ncreate('fragment', '<li>', create('ul'));\n```\n**/\n\nconst create = overload(id, {\n    comment: function(tag, text) {\n        return document.createComment(text || '');\n    },\n\n    fragment: overload(typeofContent, {\n        string: function(tag, html, context) {\n            if (context) {\n                return createContextFragment(context, html);\n            }\n\n            template.innerHTML = html;\n            return template.content.cloneNode(true);\n        },\n\n        object: function(tag, object, context) {\n            // If there is context, create a context-aware fragment\n            const fragment = context ?\n                createContextFragment(context) :\n                document.createDocumentFragment() ;\n\n            // Is object array-like?\n            if (typeof object.length === 'number') {\n                // Be careful here in case object is a live NodeList, which will\n                // mutate as you iterate over it. Applying object to .append()\n                // appears to not have this problem, and will work on arrays.\n                fragment.append.apply(fragment, object);\n            }\n            else {\n                assign(fragment, object);\n            }\n\n            return fragment;\n        },\n\n        default: () => document.createDocumentFragment()\n    }),\n\n    /*text: function (tag, text) {\n        return document.createTextNode(text || '');\n    },*/\n\n    circle:   createSVG,\n    ellipse:  createSVG,\n    g:        createSVG,\n    glyph:    createSVG,\n    image:    createSVG,\n    line:     createSVG,\n    rect:     createSVG,\n    use:      createSVG,\n    path:     createSVG,\n    pattern:  createSVG,\n    polygon:  createSVG,\n    polyline: createSVG,\n    svg:      createSVG,\n    tspan:    createSVG,\n    text:     createSVG,\n\n    default:  createHTML\n});\n\nexport default create;\n\n", "\n/**\nexec(regex, fn, string)\nCalls `fn` with the result of `regex.exec(string)` if that result is not null,\nand returns the resulting value.\n**/\n\nimport curry from './curry.js';\n\nexport function exec(regex, fn, string) {\n    let data;\n\n    // If string looks like a regex result, get rest of string\n    // from latest index\n    if (typeof string !== 'string' && string.input !== undefined && string.index !== undefined) {\n        data = string;\n        string = data.input.slice(\n            string.index\n            + string[0].length\n            + (string.consumed || 0)\n        );\n    }\n\n    // Look for tokens\n    const tokens = regex.exec(string);\n    if (!tokens) { return; }\n\n    const output = fn(tokens);\n\n    // If we have a parent tokens object update its consumed count\n    if (data) {\n        data.consumed = (data.consumed || 0)\n            + tokens.index\n            + tokens[0].length\n            + (tokens.consumed || 0) ;\n    }\n\n    return output;\n}\n\nexport default curry(exec, true);\n", "\nimport curry from './curry.js';\nimport { exec } from './exec.js';\n\nfunction error(regex, reducers, string) {\n    if (string.input !== undefined && string.index !== undefined) {\n        string = string.input;\n    }\n\n    throw new Error('Cannot parse string \"' + (string.length > 128 ? string.length.slice(0, 128) + '…' : string) + '\"');\n}\n\nfunction reduce(reducers, acc, tokens) {\n    let n = -1;\n\n    while (++n < tokens.length) {\n        acc = (tokens[n] !== undefined && reducers[n]) ? reducers[n](acc, tokens) : acc ;\n    }\n\n    // Call the optional done fn\n    return reducers.done ? reducers.done(acc, tokens) :\n        // Support the old .close() name\n        reducers.close ? reducers.close(acc, tokens) :\n        // Return the result\n        acc ;\n}\n\n/**\ncapture(regex, reducers, accumulator, string)\nParse `string` with `regex`, calling functions in `reducers` to modify\nand return `accumulator`.\n\nReducers is an object of functions keyed by the index of their capturing\ngroup in the regexp result (`0` corresponding to the entire regex match,\nthe first capturing group being at index `1`). Reducer functions are\ncalled in capture order for all capturing groups that captured something.\nReducers may also define the function 'done', which is called at the end\nof every capture. All reducer functions are passed the paremeters\n`(accumulator, tokens)`, where `tokens` is the regexp result, and are expected\nto return a value that is passed as an accumulator to the next reducer function.\n\nReducers may also define a function `'catch'`, which is called when a match\nhas not been made (where `'catch'` is not defined an error is thrown).\n\n```js\nconst parseValue = capture(/^\\s*(-?\\d*\\.?\\d+)(\\w+)?\\s*$/, {\n    // Create a new accumulator object each call\n    0: () => ({}),\n\n    1: (acc, tokens) => {\n        acc.number = parseFloat(tokens[1]);\n        return acc;\n    },\n\n    2: (acc, tokens) => {\n        acc.unit = tokens[2];\n        return acc;\n    }\n}, null);\n\nconst value = parseValue('36rem');    // { number: 36, unit: 'rem' }\n```\n*/\n\nexport function capture(regex, reducers, acc, string) {\n    const output = exec(regex, (tokens) => reduce(reducers, acc, tokens), string);\n\n    // If tokens is undefined exec has failed to apply regex to string\n    return output === undefined ?\n        // If there is a catch function, call it, otherwise error out\n        reducers.catch ?\n            reducers.catch(acc, string) :\n            error(regex, reducers, string) :\n\n        // Return the accumulator\n        output ;\n}\n\nexport default curry(capture, true);\n", "\n\nimport create from '../create.js';\n\nconst $internals = Symbol('internals');\n\n// TODO: No longer needed polyfill for Safari... ??\n/*\nfunction attachInternals(element) {\n    var internals;\n\n    // Use native attachInternals where it exists and we have the right to use\n    // it - you cannot attachInternals to customised built-ins\n    if (element.attachInternals && !element.getAttribute('is')) {\n        return element.attachInternals();\n        //if (internals.setFormValue) return internals;\n    }\n    else {\n        internals = {\n            shadowRoot: elem.shadowRoot\n        };\n    }\n\n    // Otherwise polyfill it with a pseudo internals object, actually a hidden\n    // input that we put inside element (but outside the shadow DOM). We may\n    // not yet put this in the DOM however – it violates the spec to give a\n    // custom element children before it's contents are parsed. Instead we\n    // wait until connectCallback.\n    //internals.polyfillInput = create('input', { type: 'hidden', name: elem.name });\n    //elem.appendChild(internals.polyfillInput);\n    // Polyfill internals object setFormValue\n    //internals.setFormValue = function(value) {\n    //    this.input.value = value;\n    //};\n\n    return internals;\n}\n\nexport function createInternals(Element, element, shadow) {\n    return (element[$internals] = Element.formAssociated ?\n        attachInternals(element) :\n        { shadowRoot: shadow }\n    );\n}\n*/\n\nexport function createInternals(Element, element, shadow) {\n    return element[$internals] = (element.attachInternals && !element.getAttribute('is')) ?\n        element.attachInternals() :\n        { shadowRoot: shadow } ;\n}\n\nexport function getInternals(element) {\n    return element[$internals];\n}\n", "\n/**\nelement(tag, lifecycle, properties, stylesheet, message)\n\nRegisters a custom element `tag` and returns its constructor.\n\n- `tag`: A string in the form `'custom-name'`, `'<custom-name>'`,\n`'tag is=\"custom-name\"'` or `'<tag is=\"custom-name\">'`\n- `lifecycle`: `{\n    mode:       'open' or 'closed'\n    focusable:  true or false\n    shadow:     html string or '#template-id' or fragment\n\n    // Styleheet\n    stylesheet: optional string path to stylesheet for shadow DOM\n\n    // Lifecycle handlers\n    construct:  called during element construction\n    connect:    called when element added to DOM\n    load:       called when stylesheet loaded\n    disconnect: called when element removed from DOM\n\n    // Form elements\n    enable:     called when form element enabled\n    disable:    called when form element disabled\n    reset:      called when form element reset\n    restore:    called when form element restored\n}`\n- `properties`: `{\n    name: {\n        construct: fn called before lifecycle.construct\n        attribute: fn called on `element.setAttribute('name', ...)`\n        set:       fn called on setting property 'name'\n        get:       fn called on getting property 'name'\n    }\n}`\n- `stylesheet`: url of a stylesheet to load in to the shadow DOM\n- `message`: optional debug message to logged when element is registered\n\nThe name form `'tag is=\"element-name\"'` creates customised built-in elements in\nbrowsers that support the feature. Safari does not, but support is somewhat\npolyfilled. Mileage will vary.\n\n#### Lifecycle\n\nLifecycle handlers are called with the element as `this` and with the parameters\n`shadow` and `internals`.\n\nOn initialisation the `construct` handler is called. Set up the shadow root and\ndefine event handlers here. Children and attributes must not be inspected or\nassigned at this point: doing so will throw an error when constructed via\n`document.createElement()`.\n\nFollowing that, attribute handlers in `properties` are called for attributes\ndeclared in the HTML. The HTML parser normally calls these in source order.\n\nThen the `connect` handler is called when the element is placed in the DOM, or\nif it is already in the DOM and is being upgraded.\n\nBoth `load` and `slotchange` are asynchronous. Things get a little tricky here.\nThe order of `load` callbacks and `'slotchange'` listeners cannot be guaranteed\nin Safari. When there is an empty cache `slotchange` comes first, as it always\ndoes in other browsers, otherwise `load` happens first.\n\nWhere there is a stylesheet loading, most browsers call `'slotchange'` listeners\n(asynchronously) before `load` – except Safari, where if the stylesheet is\nalready cached `load` is called before `'slotchange'` listeners. (TODO: I would\nlike to guarantee `slotchange` before `load`, but it is not clear how to delay\n`load`... if there is no slotted content, `slotchange` may not be called at\nall...)\n\nFinally, `connect` and `disconnect` are called whenever the element is inserted\ninto or removed from the DOM.\n\nThe effects of the `mode` option are subtle. In 'closed' mode, the element is\nnot given a publicly accessible `shadowRoot` property, and events that traverse\nthe shadow boundary are retargeted (as they are in 'open' mode) but also have\ntheir `path` list truncated.\n\n### Properties\n\nWhere the `properties` object contains a definition for a `value` property, work\nis done to give the element form field behaviour. The constructor is assigned\nthe property `formAssociated` which signals to the browser that it constructs\nform fields. Where they are not defined in `properties` the prototype is\nassigned default handlers for the standard properties `type`, `name`, `form`,\n`labels`, `validity`, `validationMessage`, `willValidate`, `checkValidity`\nand `reportValidity`. Form behaviour is also mildly polyfilled in browsers\nwithout support by inserting a hidden input inside the element but outside the\nshadow DOM. Mileage will vary. Managing focus can be problematic without browser\nsupport.\n*/\n\nimport capture  from 'fn/capture.js';\nimport id       from 'fn/id.js';\nimport noop     from 'fn/noop.js';\nimport overload from 'fn/overload.js';\nimport create   from './create.js';\nimport { createInternals, getInternals } from './element/internals.js';\n\n\nconst define         = Object.defineProperties;\nconst nothing        = {};\nconst constructors   = {};\nconst formProperties = {\n    // These properties echo those provided by native form controls. They are\n    // not strictly required, but provided for consistency with standard form\n    // elements.\n\n    //type: { value: 'text' },\n\n    name: {\n        set: function(name) { return this.setAttribute('name', name); },\n        get: function()     { return this.getAttribute('name') || ''; }\n    },\n\n    form:              { get:   function() { return getInternals(this).form; }},\n    labels:            { get:   function() { return getInternals(this).labels; }},\n    validity:          { get:   function() { return getInternals(this).validity; }},\n    validationMessage: { get:   function() { return getInternals(this).validationMessage; }},\n    willValidate:      { get:   function() { return getInternals(this).willValidate; }},\n    checkValidity:     { value: function() { return getInternals(this).checkValidity(); }},\n    reportValidity:    { value: function() { return getInternals(this).reportValidity(); }}\n};\n\n\nlet supportsCustomisedBuiltIn = false;\n\n\n// Capture name and tag from <element-name> or <tag is=\"element-name\">, syntax\n// brackets and quotes optional\nconst parseNameTag = capture(/^\\s*<?([a-z][\\w]*-[\\w-]+)>?\\s*$|^\\s*<?([a-z][\\w]*)\\s+is[=\\s]*[\"']?([a-z][\\w]*-[\\w-]+)[\"']?>?\\s*$/, {\n    1: (data, captures) => ({\n        name: captures[1]\n    }),\n\n    2: (data, captures) => ({\n        name: captures[3],\n        tag:  captures[2]\n    }),\n\n    catch: function(data, name) {\n        throw new SyntaxError('dom element() – name must be of the form \\'element-name\\' or \\'tag is=\"element-name\"\\' (' + name + ')')\n    }\n}, null);\n\nconst onceEvent = { once: true };\n\nfunction toLoadPromise(element) {\n    return !!element.sheet ?\n        // Link has already loaded\n        Promise.resolve({ target: element }) :\n        // Wait for load\n        new Promise((resolve, reject) => {\n            element.addEventListener('load', resolve, onceEvent);\n            element.addEventListener('error', reject, onceEvent);\n        }) ;\n}\n\nfunction stop(object) {\n    object.stop();\n}\n\nfunction getElementConstructor(tag) {\n    if (constructors[tag]) return constructors[tag];\n\n    const constructor = document.createElement(tag).constructor;\n    if (constructor === HTMLUnknownElement) {\n        throw new Error('Cannot define customised built-in - constructor for <' + tag + '> is HTMLUnknownElement');\n    }\n\n    return constructors[tag] = constructor;\n}\n\nfunction transferProperty(element, key) {\n    if (element.hasOwnProperty(key)) {\n        const value = element[key];\n        delete element[key];\n        element[key] = value;\n    }\n    return element;\n}\n\nfunction createShadow(elem, options) {\n    // Create a shadow root. Shadows may be 'open' or 'closed'. Closed shadows\n    // are not exposed via element.shadowRoot, and events propagating from\n    // inside of them report the element as target. Default to 'closed'.\n    const shadow = elem.attachShadow({\n        mode:           options.mode || 'closed',\n        delegatesFocus: options.focusable || false\n    });\n\n    if (options.stylesheet) {\n        const link = create('link', { rel: 'stylesheet', href: options.stylesheet });\n        shadow.append(link);\n    }\n\n    return shadow;\n}\n\nfunction fillShadowFromTemplate(shadow, template) {\n    // It's a string\n    if (typeof template === 'string') {\n        // It's an id of a template\n        if (template[0] === '#') {\n            shadow.appendChild(\n                document.getElementById(template.slice(1))\n                .content.clone(true)\n            );\n        }\n        // It's html\n        else {\n            shadow.innerHTML = template;\n        }\n    }\n    // It's a <template>\n    else {\n        shadow.appendChild(template.content.clone(true));\n    }\n\n    return shadow;\n}\n\nfunction isNotUpgraded(element) {\n    /* Detect marked as upgraded, mark if not */\n    const upgraded = element.isUpgraded;\n    element.isUpgraded = true;\n    return !upgraded;\n}\n\nfunction findByIs(root, name) {\n    return Array\n    .from(root.querySelectorAll('[is=\"' + name + '\"]'))\n    .filter(isNotUpgraded);\n}\n\nconst createDescriptor = overload((name, options) => typeof options, {\n    object:   (name, descriptor) => descriptor,\n    function: (name, fn) => ({ value: fn }),\n    default:  (name, options) => {\n        throw new TypeError('element() does not accept property descriptor of type ' + typeof options);\n    }\n});\n\nexport default function element(definition, lifecycle = {}, properties = {}, log = '') {\n    const { name, tag } = parseNameTag(definition);\n\n    // Get the element constructor or the base HTMLElement constructor\n    const constructor = typeof tag === 'string' ?\n        getElementConstructor(tag) :\n        HTMLElement ;\n\n    // Split properties into attributes and property descriptors\n    const attributes  = [];\n    const descriptors = {};\n\n    let propname, descriptor;\n    for (propname in properties) {\n        descriptor = createDescriptor(propname, properties[propname]);\n\n        // Add name to list of observed attributes\n        if (descriptor.attribute) attributes.push(propname);\n\n        // Add descriptor to properties to be defined\n        if (descriptor.set || descriptor.get || 'value' in descriptor) descriptors[propname] = descriptor;\n\n        // Override property descriptor\n        properties[propname] = descriptor;\n    }\n\n    // Declare constructor\n    function Element() {\n        // Construct an instance from Constructor using Element prototype\n        const element = Reflect.construct(constructor, arguments, Element);\n\n        // Make shadow if mode or shadow have been set\n        const shadow = (lifecycle.mode || (typeof lifecycle.shadow === 'string')) ?\n            createShadow(element, lifecycle) :\n            undefined ;\n\n        // Fill shadow with template\n        if (lifecycle.shadow) fillShadowFromTemplate(shadow, lifecycle.shadow);\n\n        // Get access to the internals object. If form associated, internals is\n        // the form control API internals object. We're gonna be rude and\n        // extend it.\n        const internals = createInternals(Element, element, shadow);\n\n        // Flag support for custom built-ins. We know this when tag exists and\n        // Element constructor is called\n        if (tag) supportsCustomisedBuiltIn = true;\n        if (lifecycle.construct) lifecycle.construct.call(element, shadow, internals);\n\n        // At this point, if properties have been set before the element was\n        // upgraded they already exist on the element itself, where we have\n        // just upgraded it's protytype to define those properties. Those\n        // definitions will never be reached. Either:\n        //\n        // 1. Define properties on the instance instead of the prototype, as in\n        //    Object.defineProperties(element, descriptors) here in the\n        //    constructor. Won't actually solve the problem.\n        //\n        // 2. Take a great deal of care when authoring not to set properties\n        //    before an element is upgraded. We can't impose a restriction like\n        //    that on Joe Bloggs front end developer.\n        //\n        // 3. Copy defined properties to their prototype handlers and delete\n        //    them on the instance.\n        //\n        // Let's go with 3. I'm not happy we have to do this, though.\n        Object.keys(descriptors).reduce(transferProperty, element);\n\n        return element;\n    }\n\n    // Set prototype and define properties\n    Element.prototype = Object.create(constructor.prototype, descriptors);\n\n    // Prefetch stylesheet ??\n    /*if (stylesheet) {\n        toPrefetchPromise(stylesheet);\n        log = window.DEBUG ?\n            log + ' – stylesheet ' + stylesheet :\n            log ;\n    }*/\n\n    if (properties.value) {\n        // Flag the Element class as formAssociated\n        Element.formAssociated = true;\n\n        // Define standard form properties\n        define(Element.prototype, formProperties);\n\n        if (lifecycle.enable || lifecycle.disable) {\n            Element.prototype.formDisabledCallback = function(disabled) {\n                const internals = getInternals(this);\n                return disabled ?\n                    lifecycle.disable && lifecycle.disable.call(this, internals.shadowRoot, internals) :\n                    lifecycle.enable && lifecycle.enable.call(this, internals.shadowRoot, internals) ;\n            };\n        }\n\n        if (lifecycle.reset) {\n            Element.prototype.formResetCallback = function() {\n                const internals = getInternals(this);\n                return lifecycle.reset.call(this, internals.shadowRoot, internals);\n            };\n        }\n\n        if (lifecycle.restore) {\n            Element.prototype.formStateRestoreCallback = function() {\n                const internals = getInternals(this);\n                return lifecycle.restore.call(this, internals.shadowRoot, internals);\n            };\n        }\n    }\n\n    // Attributes\n    if (attributes.length) {\n        Element.observedAttributes = attributes;\n        Element.prototype.attributeChangedCallback = function(name, old, value) {\n            return properties[name].attribute.call(this, value) ;\n        };\n    }\n\n    // Lifecycle\n    if (lifecycle.connect) {\n        Element.prototype.connectedCallback = function() {\n            const internals = getInternals(this);\n            const shadow    = internals.shadowRoot;\n\n            // Connect\n            internals.stopable = lifecycle.connect.call(this, shadow, internals);\n\n            // Avoid flash of unstyled content in shadow DOMs that must load assets.\n            // Now, it's debatable whether this code should be here or in the constructor.\n            // Whether links in the shadow may have already emitted load events by connect\n            // time. They'd have to have done it synchronously, so I don't think so.\n            if (!shadow) return;\n\n            const links = shadow.querySelectorAll('link[rel=\"stylesheet\"]');\n\n            if (links.length) {\n                // Hide all content other than the default slot until stylesheets\n                // have loaded. We keep the default slot visible as that content\n                // was visible before upgrade and we do not want it to momentarily\n                // disappear.\n                const style = create('style', '*:not(slot), slot:not([name]) { display: none !important; }');\n                shadow.prepend(style);\n\n                let promise;\n                if (!internals.loadPromise) {\n                    // Wait for stylesheets to load\n                    promise = internals.loadPromise = Promise.all(Array.from(links, toLoadPromise));\n                }\n                else {\n                    // Insert an animation frame to avoid flash on reconnect\n                    promise = internals.loadPromise.then(() => new Promise(requestAnimationFrame));\n                }\n\n                promise.finally(() => {\n                    if (window.DEBUG) window.console.log('%c<' + (tag ? tag + ' is=' + name + '' : name) + '>%c load \\n' + Array.from(links).map((link) => link.href.replace(/https?:\\/\\//, '')).join('\\n'), 'color:#3a8ab0;font-weight:400;', 'color:#888888;font-weight:400;');\n                    // Remove hide style\n                    style.remove();\n                    // and call the load() callback\n                    if (lifecycle.load) lifecycle.load.call(this, shadow, internals);\n                });\n            }\n            else if (lifecycle.load) {\n                lifecycle.load.call(this, shadow, internals);\n            }\n        }\n    }\n\n    Element.prototype.disconnectedCallback = function() {\n        const internals = getInternals(this);\n        if (internals.stopable) {\n            // Support a stopable...\n            if (internals.stopable.stop) { internals.stopable.stop(); }\n            // or an array of stopables\n            else { internals.stopable.forEach(stop); }\n        }\n        if (lifecycle.disconnect) lifecycle.disconnect.call(this, internals.shadowRoot, internals);\n    };\n\n    // Log registration to console\n    window.console &&\n    window.console.log('%c<' + (tag ? tag + ' is=' + name + '' : name) + '>%c ' + log, 'color:#3a8ab0;font-weight:600;', 'color:#888888;font-weight:400;');\n\n    // Define the element\n    window.customElements.define(name, Element, tag && { extends: tag });\n\n\n    // Safari partial polyfill.\n    // Where tag is supplied, element should have been registered as a customised\n    // built-in and the constructor would have run if any were in the DOM already.\n    // However, Safari does not support customised built-ins. Here we attempt to\n    // go some way towards filling in support by searching for elements and\n    // assigning their intended APIs to them.\n    if (tag && !supportsCustomisedBuiltIn) {\n        // It may be there were none in the DOM, in which case we must run a\n        // test. Not ideal.\n        const div = document.createElement('div');\n        div.style.position = 'fixed';\n        div.style.left = '-1000px';\n        div.style.top  = '-1000px';\n        div.innerHTML = '<' + tag + ' is=\"' + name + '\"></' + tag + '>';\n        document.body.append(div);\n        div.remove();\n\n        if (!supportsCustomisedBuiltIn) {\n            if (window.DEBUG) {\n                console.warn('Browser does not support customised built-in elements, polyfilling <' + tag + ' is=\"' + name + '\">');\n            }\n\n            function upgrade(element) {\n                // Store values of properties we are about to define\n                const store = {};\n                Object.keys(descriptors).forEach((key) => {\n                    if (element[key] !== undefined) store[key] = element[key];\n                });\n\n                // Define properties on element\n                define(element, descriptors);\n\n                // Construct an instance from Constructor using the Element prototype\n                const shadow = lifecycle.mode || lifecycle.shadow ?\n                    createShadow(element, lifecycle) :\n                    undefined ;\n\n                // Get access to the internals object\n                const internals = createInternals(Element, element, shadow);\n\n                // Run constructor\n                lifecycle.construct && lifecycle.construct.call(element, shadow, internals);\n\n                if (window.DEBUG) {\n                    // Assign stored properties back onto element\n                    try {\n                        Object.assign(element, store);\n                    }\n                    catch(e) {\n                        console.warn(e.message, tag, Object.keys(store));\n                    }\n                }\n                else {\n                    Object.assign(element, store);\n                }\n\n                // Detect and run attributes\n                let n = -1, name;\n                while (name = attributes[++n]) {\n                    // elements.attributes is sometimes undefined... why?\n                    const attribute = element.attributes[name];\n                    if (attribute) properties[name].attribute.call(element, attribute.value);\n                }\n\n                // Run connected callback\n                lifecycle.connect && lifecycle.connect.call(element, shadow, internals);\n            }\n\n            function polyfillByRoot(root) {\n                findByIs(root, name).forEach(upgrade)\n                const observer = new MutationObserver(() => findByIs(root, name).forEach(upgrade));\n                observer.observe(root, { childList: true, subtree: true });\n            }\n\n            // Expose on element for use in shadow DOMs\n            Element.polyfillByRoot = polyfillByRoot;\n\n            // Run on document automatically\n            polyfillByRoot(document);\n        }\n        else {\n            Element.polyfillByRoot = noop;\n        }\n    }\n    else {\n        Element.polyfillByRoot = noop;\n    }\n\n    return Element;\n}\n\nexport { getInternals };\n", "/**\ntoType(object)\nReturns `typeof object`.\n*/\n\nexport default (object) => typeof object;\n", "\nimport id       from '../id.js';\nimport overload from '../overload.js';\nimport toType   from '../to-type.js';\n\n\nconst define = Object.defineProperties;\nconst call = overload(toType, {\n    function: (fn) => fn(),\n    object:   (object) => object.stop()\n});\n\n\n/** Stopable() **/\n\nexport default class Stopable extends id {\n    #stopables;\n\n    /**\n    .stop()\n    Stops the stream, passing any parameters up to the head of the stream. The\n    head determines whether the stream stops immediately or asynchronously.\n    **/\n    stop() {\n        // Check we are not already done\n        if (this.status === 'done') return this;\n\n        // Set status\n        this.status = 'done';\n\n        // Call done functions and stopables\n        const stopables = this.#stopables;\n        this.#stopables = undefined;\n        if (stopables) stopables.forEach(call);\n\n        // Make it chain-able\n        return this;\n    }\n\n    /**\n    .done(fn)\n    Cues `fn` to be called when the stream is stopped. If `fn` is an object, it\n    must have a `.stop()` method, which is called when this is stopped.\n    **/\n    done(fn) {\n        // Is stream already stopped? Call listener immediately.\n        if (this.status === 'done') {\n            call(listener);\n            return this;\n        }\n\n        // Add to done handlers\n        const stopables = this.#stopables || (this.#stopables = []);\n        stopables.push(fn);\n\n        // Make it chain-able\n        return this;\n    }\n}\n\ndefine(Stopable.prototype, {\n    status: { writable: true }\n});\n", "\nimport noop       from '../noop.js';\nimport overload   from '../overload.js';\nimport toType     from '../to-type.js';\nimport Stopable   from './stopable.js';\n\n\nconst assign = Object.assign;\nconst create = Object.create;\n\n\nfunction throwTypeError(source) {\n    throw new TypeError('Stream cannot be created .from() ' + typeof source);\n}\n\nfunction push(stream, value) {\n    if (value === undefined) return;\n    let n = -1;\n    while (stream[++n]) stream[n].push(value);\n    return stream;\n}\n\nfunction stop(stream) {\n    // Call done functions and listeners\n    Stopable.prototype.stop.apply(stream);\n\n    // Loop through outputs, propagate stop() down the pipe\n    let o = -1, output;\n    while (output = stream[++o]) {\n        // Remove output from stream\n        stream[o] = undefined;\n        // If output is not stop-able it never got stream as an input\n        if (!output.stop) continue;\n        // Remove stream from output's inputs\n        removeInput(output, stream);\n        // If output has no inputs left, stop it\n        if (!output[-1]) output.stop();\n    }\n\n    return stream;\n}\n\nfunction removeInput(stream, input) {\n    // Remove input from stream\n    let i = 0;\n    while (stream[--i] && stream[i] !== input);\n    while (stream[i--]) stream[i + 1] = stream[i];\n}\n\nfunction removeOutput(stream, output) {\n    // Remove output from stream\n    let o = -1;\n    while (stream[++o] && stream[o] !== output);\n    while (stream[o++]) stream[o - 1] = stream[o];\n}\n\nfunction unpipe(output, input) {\n    // Remove link between streams without stopping them\n    removeInput(input, output);\n    removeOutput(output, input);\n}\n\n\n/* Consumer() */\n\nexport class Consumer extends Stopable {\n    /**\n    .stop()\n    Stops the stream.\n    **/\n    stop() {\n        if (this.status === 'done') return this;\n\n        // Loop through inputs, notify them we are detaching\n        let input;\n        while (input = this[-1]) {\n            // Remove input from this\n            let i = -1;\n            while (this[i--]) this[i + 1] = this[i];\n\n            // Remove this from input's outputs\n            removeOutput(input, this);\n\n            // If input is stop-able and has no other outputs, stop it\n            if (input.stop && !input[0]) input.stop(input);\n        }\n\n        // Set status and call done(fn) handlers\n        return super.stop();\n    }\n}\n\n\n/* Each(fn) */\n\nclass Each extends Consumer {\n    constructor(fn) {\n        super();\n        this.push = fn;\n    }\n}\n\n\n/* Reduce() */\n\nclass Reduce extends Consumer {\n    constructor(fn, accumulator) {\n        super();\n        this.fn    = fn;\n        this.value = accumulator;\n        this.i     = 0;\n    }\n\n    push(value) {\n        const fn = this.fn;\n        this.value = fn(this.value, value, this.i++, this);\n    }\n}\n\n\n/**\nStream(start)\nCreates a stream from a `start` function, called when a consumer is first\nattached, with two arguments, `start(push, stop)`. `push(value)` is called to\nwrite `value` to the stream and `stop()` is called to stop the stream.\n**/\n\nexport default class Stream extends Consumer {\n    /**\n    .start()\n    **/\n    start() {\n        // If this is 'running' or 'done' we need do nothing here\n        if (this.status) return this;\n\n        // Loop through inputs\n        let i = 0, input;\n        inputloop: while (input = this[--i]) {\n            // Loop through input's outputs\n            let o = -1;\n            // If input already has this as an output skip set up\n            while (input[++o]) if (input[o] === this) continue inputloop;\n            // Set this as input's output\n            input[o] = this;\n            // If input is start-able and this is its first consumer, start it,\n            // otherwise assume it is running\n            if (o === 0 && input.start) input.start();\n        }\n\n        return this;\n    }\n\n    stop() {\n        if (this.status === 'done') return this;\n\n        super.stop();\n\n        // Loop through outputs, propagate stop() down the pipe\n        let o = -1, output;\n        while (output = this[++o]) {\n            // Remove output from this\n            this[o] = undefined;\n            // If output is not stop-able it never got this as an input\n            if (!output.stop) continue;\n            // Remove this from output's inputs\n            removeInput(output, this);\n            // If output has no inputs left, stop it\n            if (!output[-1]) output.stop();\n        }\n\n        return this;\n    }\n\n    /**\n    .pipe(stream)\n    Sets up this stream to pipe values into `stream` when started. Starts\n    immediately where `stream` is already running. Returns `stream`.\n    **/\n    pipe(output) {\n        // If output is stop-able set this as its input\n        if (output.stop) {\n            // Guard against this piping twice to output\n            let i = 0;\n            while (output[--i]) if (output[i] === this) break;\n            output[i] = this;\n        }\n\n        // If output is start-able and is not already running wait to start this\n        if (output.start && !(output[0] || output.status === 'running')) {\n            return output;\n        }\n\n        // Start piping right away\n        let o = -1;\n        while (this[++o]) if (this[o] === output) break;\n        this[o] = output;\n        // If output is the first consumer to be added start this\n        if (!o) this.start();\n\n        // Return output\n        return output;\n    }\n\n    /**\n    .each(fn)\n    Consumes the stream, calling `fn(value)` for each piped value. Returns the\n    stream.\n    **/\n    each(fn) {\n        // Start the Consumer immediately\n        return this.pipe(new Each(fn));\n    }\n\n    /**\n    .buffer(...values)\n    Inserts a buffer of values into the start of a stream. Although the buffer\n    is not hot, before it is started .push() may be used to add values to the\n    buffer.\n    **/\n    buffer(...values) {\n        return this.pipe(new BufferStream(values));\n    }\n\n    /**\n    .filter(fn)\n    Filters out values where `fn(value)` is falsy.\n    **/\n    filter(fn) {\n        return this.pipe(new Filter(fn));\n    }\n\n    /**\n    .flatMap(fn)\n    **/\n    flatMap(fn) {\n        return this.pipe(new FlatMap(fn));\n    }\n\n    /**\n    .map(fn)\n    Maps each value in a stream to `fn(value)` and pipes non-`undefined` results\n    downstream.\n    **/\n    map(fn) {\n        return this.pipe(new Map(fn));\n    }\n\n    /**\n    .reduce(fn, initial)\n    Consume the stream, calling `fn(accumulator, value)` for each value in it.\n    Returns the accumulator.\n    **/\n    reduce(fn, accumulator) {\n        return this.pipe(new Reduce(fn, accumulator)).value;\n    }\n\n    /**\n    .scan(fn, initial)\n    Calls `fn(current, value)` for each `value` in the stream. Where `fn`\n    returns a value it is pushed downstream, and `current` assumes that value\n    on the next iteration. Where `fn` returns `undefined` nothing is pushed and\n    `current` remains unchanged.\n    **/\n    scan(fn, initial) {\n        return this.pipe(new Scan(fn, initial));\n    }\n\n    /**\n    .slice(n, m)\n    Returns a stream of the nth to mth values of stream.\n    **/\n    slice(n, m) {\n        return this.pipe(new Slice(n, m));\n    }\n\n    /**\n    .split(n)\n    **/\n    split(n) {\n        return this.pipe(new Split(n));\n    }\n\n    /* Experimental async iterator support for `for await (x of stream)`\n       loops. */\n    [Symbol.asyncIterator] = async function*() {\n        // Buffer for synchronous values\n        const values = [];\n        let push = (value) => values.push(value);\n\n        function setResolve(res, rej) {\n            push = res;\n        }\n\n        this\n        .each((value) => push(value))\n        .done(() => push = noop);\n\n        while (push !== noop) {\n            yield values.length ?\n                // Yield collected synchronous value\n                values.shift() :\n                // Yield next asynchronous value\n                await new Promise(setResolve) ;\n        }\n    }\n\n    static from = overload(toType, {\n        /**\n        Stream.from(fn)\n        Create a pushable map stream from function `fn`.\n        **/\n        function: (fn) => new Map(fn),\n\n        object: (object) =>\n            /**\n            Stream.from(stream)\n            Treat a pipe-able as a stream directly.\n            **/\n            typeof object.pipe === 'function' ? object :\n\n            /**\n            Stream.from(promise)\n            Create a read-only stream from a promise. The stream is stopped when\n            the promise resolves or rejects.\n            **/\n            typeof object.then === 'function' ? new PromiseStream(object) :\n\n            /**\n            Stream.from(array)\n            Create a pushable buffer stream from an array or array-like object.\n            **/\n            typeof object.length === 'number' ? new BufferStream(Array.from(object)) :\n\n            // object cannot be made into stream\n            throwTypeError(object)\n    });\n\n    /**\n    Stream.of(...values)\n    Create a pushable value or buffer stream from parameter values.\n    **/\n    static of(...values) {\n        return values.length < 2 ?\n            new Value(values[0]) :\n            new BufferStream(values) ;\n    }\n\n    /**\n    Stream.buffer(...values)\n    Create a pushable buffer stream with initial buffer of arguments.\n    **/\n    static buffer(values) {\n        return new BufferStream(values);\n    }\n\n    /**\n    Stream.value(value)\n    Create a pushable value stream with initial `value`.\n    **/\n    static value(value) {\n        return new Value(value);\n    }\n\n    /**\n    Stream.merge(stream1, stream2, ...)\n    Creates a stream by merging values from any number of input streams into a\n    single output stream. Values are emitted in the time order they are received\n    from inputs.\n\n    ```js\n    Stream.merge(stream1, stream2).each((value) => {\n        // value is from stream1 or stream 2\n    });\n    ```\n    **/\n    static merge(...inputs) {\n        return new Merge(inputs);\n    }\n\n    /**\n    Stream.push(stream, value)\n    Pushes `value` to `stream`'s outputs (even on streams that have no `.push()`\n    method). For use in sub-classing Stream.\n    **/\n    static push = push;\n\n    /**\n    Stream.stop(stream)\n    Stops stream, calling `.done()` handlers, setting status to `'done'` and\n    stopping dependent streams. For internal use when sub-classing Stream.\n    **/\n    static stop = stop;\n\n    /*\n    Stream.input(stream, output)\n    Remove output stream from `stream` and vice-versa, without stopping either\n    stream. Normally `stream.stop()` should be used to stop the flow of a pipe -\n    this function is used when making dynamic graphs of streams that need to\n    stay alive.\n    */\n    static unpipe = unpipe;\n\n    static each(fn) {\n        return new Each(fn);\n    }\n\n    static reduce(fn, accumulator) {\n        return new Reduce(fn, accumulator);\n    }\n}\n\n\n/**\nPromiseStream(promise)\n**/\n\nclass PromiseStream extends Stream {\n    constructor(promise) {\n        super();\n        this.promise = promise;\n    }\n\n    start() {\n        this.promise\n        .then((value) => push(this, value))\n        .finally(() => this.stop());\n        return this;\n    }\n}\n\n\n/*\nValue(value)\nA Value stream represents a persistent value. Streams piped from a value stream\nare given its current value. A Value stream may be pushed to before it is piped.\n*/\n\nclass Value extends Stream {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n\n    start() {\n        if (this.value !== undefined) {\n            push(this, this.value);\n            // If stream was stopped as a result of a push, don't continue pushing\n            if (this.status === 'done') return this;\n        }\n\n        // Start streams that are piped to this buffer stream\n        return super.start();\n    }\n\n    push(value) {\n        this.value = value;\n        return push(this, value);\n    }\n}\n\n\n/*\nBufferStream(values)\nA BufferStream may be pushed to before it is piped, as it starts life with an\narray buffer of values.\n*/\n\nclass BufferStream extends Stream {\n    constructor(values) {\n        super();\n        this.values = values || [];\n    }\n\n    start() {\n        const values = this.values;\n        if (!values) return super.start();\n\n        // Loop over values\n        let n = -1;\n        while(n++ < values.length) {\n            // Push values to stream\n            push(this, values[n]);\n            // If stream was stopped as a result of a push, don't continue pushing\n            if (this.status === 'done') return this;\n        }\n\n        // Throw away values buffer\n        this.values = undefined;\n\n        // Start streams that are piped to this buffer stream\n        return super.start();\n    }\n\n    push(value) {\n        this.value = value;\n        return this.values ?\n            this.values.push(this.value) :\n            push(this, this.value) ;\n    }\n}\n\n\n/* Filter() */\n\nclass Filter extends Stream {\n    constructor(fn) {\n        super();\n        this.fn = fn;\n    }\n\n    push(value) {\n        const fn = this.fn;\n        return fn(value) && push(this, value);\n    }\n}\n\n\n/* FlatMap() */\n\nclass FlatMap extends Stream {\n    constructor(fn) {\n        super();\n        this.fn = fn;\n    }\n\n    push(value) {\n        const fn     = this.fn;\n        const values = fn(value);\n\n        if (values === undefined) { return; }\n\n        // Flatten array or array-like\n        if (isIterable(values)) {\n            for (const value of values) {\n                push(this, value);\n            }\n        }\n        // Flatten stream\n        else if (values.pipe) {\n            console.warn('FlatMapping pipeables is dodgy. Map to arrays for the moment please.');\n            // Todo: support flattening of streams. This method is crude -\n            // it does not preserve order, for one thing. Should streams be\n            // made iterable? CAN streams be made iterable? They'd have to\n            // be async...\n            this.done(values.each((value) => push(this, value)));\n            // This causes problems if you try\n            // stream.scan(...).flatMap(...)\n            //values.pipe(this[0]);\n        }\n        // Flatten promise\n        else if (values.then) {\n            values.then((value) => push(this, value));\n        }\n    }\n}\n\n\n/* Map() */\n\nclass Map extends Stream {\n    constructor(fn) {\n        super();\n        this.fn = fn;\n    }\n\n    push(value) {\n        const fn     = this.fn;\n        const result = fn(value);\n        // Reject undefined\n        return result !== undefined && push(this, result);\n    }\n}\n\n\n/*\nMerge()\n*/\n\nclass Merge extends Stream {\n    constructor(inputs) {\n        super();\n        this.inputs = inputs;\n    }\n\n    push(value) {\n        return push(this, value);\n    }\n\n    pipe(output) {\n        let n = -1, input;\n        while (input = this.inputs[++n]) Stream.from(input).pipe(this);\n        return Stream.prototype.pipe.call(this, output)\n    }\n}\n\n\n/* Scan() */\n\nclass Scan extends Stream {\n    constructor(fn, accumulator) {\n        super();\n        this.fn    = fn;\n        this.value = accumulator;\n    }\n\n    push(value) {\n        const fn = this.fn;\n        this.value = fn(this.value, value);\n        push(this, this.value);\n    }\n}\n\n\n/* Slice() */\n\nclass Slice extends Stream {\n    constructor(n, m = Infinity) {\n        if (window.DEBUG && (typeof n !== 'number' || n < 0)) {\n            throw new Error('Stream: .slice() requires a positive integer (' + n + ')');\n        }\n\n        if (window.DEBUG && (typeof m !== 'number' || m < 1)) {\n            throw new Error('Stream: .slice() requires a non-zero positive integer (n, ' + n + ')');\n        }\n\n        super();\n        this.index = -n;\n        this.indexEnd = m - n;\n    }\n\n    push(value) {\n        if (++this.index > 0) push(this, value);\n        if (this.index === this.indexEnd) this.stop();\n    }\n}\n\n\n/* Split(input, fn) */\n\nclass Split extends Stream {\n    constructor(fn) {\n        super();\n        this.chunk = [];\n\n        if (typeof fn === 'number') this.n = fn;\n        else this.fn = fn;\n    }\n\n    fn() {\n        return this.chunk.length === this.n;\n    }\n\n    push(value) {\n        const chunk = this.chunk;\n\n        if (this.fn(value)) {\n            // Emit complete chunk and create a new chunk\n            push(this, chunk);\n            this.chunk = [];\n        }\n        else {\n            // Push to existing chunk\n            chunk.push(value);\n        }\n    }\n}\n", "\n/**\nevents(type, element)\nevents(type, element, initial)\n\nReturns a mappable stream of events heard on `element`.\n\n```js\nevents('click', element)\n.map((e) => e.target.id)\n```\n\nThe first parameter may alternatively be an options object, in which case it\nmust have a `.type` property.\n\n```js\nevents({ type: 'click' }, element)\n.map((e) => e.target.id)\n```\n\nThe object may contain a number of other properties that select the events\nreceived. It supports the standard addEventListener options, for passive and\ncapture phase event binding.\n\n```js\nevents({ type: 'scroll', passive: true, capture true }, window)\n.map((e) => window.scrollTop)\n```\n\nAnd a `.select` property, a CSS selector, that filters events to those with\ntargets that match or have a `closest()` ancestor that matches the selector.\n\n```js\nevents({ type: 'click', select: '[name=\"button\"]' }, element)\n.map((e) => e.target.id)\n```\n\nHowever, if you need to delegate events it is recommended to use the\n`delegate()` function, which has the added benefit of direct access to the\ndelegated target.\n\n```js\nevents('click', element)\n.each(delegate({\n    '[name=\"button\"]': (target, e) => console.log(target.id),\n    '[name=\"remove\"]': (target, e) => document.getElementById(target.value).remove(),\n    ...\n}))\n```\n\nStopping an event stream removes its event listeners.\n\n```js\nevents('click', element).stop()\n```\n\nPass in an `initial` object to have the event stream start synchronously\nwith the initial object when consumed.\n\n```js\nevents(type, element, initial)\n```\n**/\n\nimport cache  from 'fn/cache.js';\nimport Stream from 'fn/stream/stream.js';\n\nconst assign  = Object.assign;\nconst rspaces = /\\s+/;\nconst types   = {\n    fullscreenchange: cache(() => (\n        'fullscreenElement' in document ? 'fullscreenchange' :\n        'webkitFullscreenElement' in document ? 'webkitfullscreenchange' :\n        'mozFullScreenElement' in document ? 'mozfullscreenchange' :\n        'msFullscreenElement' in document ? 'MSFullscreenChange' :\n        'fullscreenchange'\n    ))\n};\n\n\n// DOM click events may be simulated on inputs when their labels are\n// clicked. The tell-tale is they have the same timeStamp. Track click\n// timeStamps.\nvar clickTimeStamp = 0;\n\nwindow.addEventListener('click', (e) => clickTimeStamp = e.timeStamp);\n\nfunction listen(listener, type) {\n    listener.node.addEventListener(types[type] ? types[type]() : type, listener, listener.options);\n    return listener;\n}\n\nfunction unlisten(listener, type) {\n    listener.node.removeEventListener(types[type] ? types[type]() : type, listener);\n    return listener;\n}\n\nclass Events extends Stream {\n    constructor(type, options, node, initialEvent) {\n        super();\n\n        // Potential hard-to-find error here if type has repeats, ie 'click click'.\n        // Lets assume nobody is dumb enough to do this, I dont want to have to\n        // check for that every time.\n        this.types        = type.split(rspaces);\n        this.options      = options;\n        this.node         = node;\n        this.select       = options && options.select;\n        this.modifiers    = options && options.modifiers;\n        this.initialEvent = initialEvent;\n    }\n\n    handleEvent(e) {\n        // Ignore clicks with the same timeStamp as previous clicks –\n        // they are likely simulated by the browser, eg. clicks on labels\n        // cause simulated clicks to be emitted from inputs\n        if (e.type === 'click' && e.timeStamp <= clickTimeStamp) return;\n\n        // Inspect modifier keys\n        if (this.modifiers) {\n            const modifiers = typeof this.modifiers === 'string' ?\n                this.modifiers.split(/\\s+/) :\n                this.modifiers ;\n\n            let n = modifiers.length;\n            while (n--) if (!e[modifiers[n] + 'Key']) return;\n        }\n\n        // If there is a selector and the target doesn't match, shoofty\n        // outta here\n        if (this.select) {\n            const selectedTarget = e.target.closest(this.select);\n            if (!selectedTarget) return;\n            e.selectedTarget = selectedTarget;\n        }\n\n        Stream.push(this, e);\n    }\n\n    start() {\n        this.types.reduce(listen, this);\n\n        if (this.initialEvent) {\n            this.handleEvent(this.initialEvent);\n            delete this.initialEvent;\n        };\n\n        return this;\n    }\n\n    stop() {\n        this.types.reduce(unlisten, this);\n        return super.stop();\n    }\n}\n\nexport default function events(type, node, initialEvent) {\n    let options;\n    if (typeof type === 'object') {\n        options = type;\n        type    = options.type;\n    }\n\n    return new Events(type, options, node, initialEvent);\n}\n", "/**\narg(n)\n\nReturns a function that returns `argument[n]`.\n\n```js\n```\n**/\n\nexport default function arg(n) {\n    return function arg() {\n        return arguments[n];\n    };\n}\n", "/**\nid(value)\nReturns `value`.\n**/\n\nexport default function id(value) { return value; }\n", "/**\nnoop()\nDoes nothing, returns undefined.\n**/\n\nexport default function noop() {}\n", "/**\nself()\nReturns `this`.\n*/\n\nexport default function self() { return this; }\n", "\n/**\nnothing\nA frozen array-like and stream-like object that contains no value.\n**/\n\nimport arg  from './arg.js';\nimport id   from './id.js';\nimport noop from './noop.js';\nimport self from './self.js';\n\nconst create = Object.create;\nconst freeze = Object.freeze;\n\nexport default freeze(create(create(Object.prototype, {\n    // Array methods\n    at:        { value: noop },\n    shift:     { value: noop },\n    push:      { value: noop },\n    forEach:   { value: noop },\n    join:      { value: function() { return ''; } },\n    every:     { value: function() { return true; } },\n    filter:    { value: self },\n    find:      { value: noop },\n    findIndex: { value: function() { return -1; } },\n    flat:      { value: self },\n    flatMap:   { value: self },\n    includes:  { value: function() { return false; } },\n    indexOf:   { value: function() { return -1; } },\n    map:       { value: self },\n    reduce:    { value: arg(1) },\n    sort:      { value: self },\n\n   // Stream methods\n    each:      { value: self },\n    pipe:      { value: id },\n    start:     { value: self },\n    stop:      { value: self },\n    done:      { value: self },\n\n    // Primitive coercion\n    valueOf:   { value: function() { return null; } }\n}), {\n    length: { value: 0 }\n}));\n", "/**\nmod(divisor, n)\nJavaScript's modulus operator (`%`) uses Euclidean division, but for\nstuff that cycles through 0 the symmetrics of floored division are often\nare more useful. This function implements floored division.\n**/\n\nexport default function mod(d, n) {\n    return ((n % d) + d) % d ;\n}\n", "\nimport nothing from '../../fn/modules/nothing.js';\nimport mod     from '../../fn/modules/mod.js';\n\n\n/**\nnormaliseNoteName(name)\n\nReplaces the characters `'b'` and `'#'` with the unicode musical characters `'♭'`\nand `'♯'` respectively.\n\n```js\nnormaliseNoteName('Eb6');      // 'E♭6'\n```\n*/\n\nconst rTextSymbol    = /b|#/g;\nconst unicodeSymbols = { 'b': '♭', '#': '♯' };\nconst mod12          = (n) => mod(12, n);\n\nfunction replaceSymbol($0) {\n    return unicodeSymbols[$0];\n}\n\nexport function normaliseNoteName(name) {\n    return name.replace(rTextSymbol, replaceSymbol);\n}\n\n\n/**\ntoNoteNumber(name)\n\nGiven a note name, returns a value in the range 0-127.\n\n```js\ntoNoteNumber('D6');     // 86\n```\n*/\n\nconst rnotename   = /^([A-G][♭♯#b]?)(-?\\d)$/;\nconst rnoteroot   = /^[A-G][♭♯#b]?/;\nconst rnoteoctave = /-?\\d$/;\nconst rhz         = /[Hh]z$/;\n\n/* noteNumbers exported because used by Scribe */\nexport const noteNumbers = {\n    'C':  0, 'C♯': 1, 'C#': 1, 'D♭': 1, 'Db': 1, 'D': 2, 'D♯': 3, 'D#': 3, 'E♭': 3, 'Eb': 3, 'E': 4,\n    'F':  5, 'F♯': 6, 'F#': 6, 'G♭': 6, 'Gb': 6, 'G': 7, 'G♯': 8, 'G#': 8, 'A♭': 8, 'Ab': 8, 'A': 9,\n    'A♯': 10, 'A#': 10, 'B♭': 10, 'Bb': 10, 'B': 11\n};\n\nconst drumNames = {\n    27: 'High Q',\n    28: 'Slap',\n    29: 'Scratch Push',\n    30: 'Scratch Pull',\n    31: 'Sticks',\n    32: 'Square Click',\n    33: 'Metronome Click',\n    34: 'Metronome Bell',\n    35: 'Bass Drum 2',\n    36: 'Bass Drum 1',\n    37: 'Side Stick',\n    38: 'Snare Drum 1',\n    39: 'Hand Clap',\n    40: 'Snare Drum 2',\n    41: 'Low Tom 2',\n    42: 'Closed Hi-hat',\n    43: 'Low Tom 1',\n    44: 'Pedal Hi-hat',\n    45: 'Mid Tom 2',\n    46: 'Open Hi-hat',\n    47: 'Mid Tom 1',\n    48: 'High Tom 2',\n    49: 'Crash Cymbal 1',\n    50: 'High Tom 1',\n    51: 'Ride Cymbal 1',\n    52: 'Chinese Cymbal',\n    53: 'Ride Bell',\n    54: 'Tambourine',\n    55: 'Splash Cymbal',\n    56: 'Cowbell',\n    57: 'Crash Cymbal 2',\n    58: 'Vibra Slap',\n    59: 'Ride Cymbal 2',\n    60: 'High Bongo',\n    61: 'Low Bongo',\n    62: 'Mute High Conga',\n    63: 'Open High Conga',\n    64: 'Low Conga',\n    65: 'High Timbale',\n    66: 'Low Timbale',\n    67: 'High Agogo',\n    68: 'Low Agogo',\n    69: 'Cabasa',\n    70: 'Maracas',\n    71: 'Short Whistle',\n    72: 'Long Whistle',\n    73: 'Short Guiro',\n    74: 'Long Guiro',\n    75: 'Claves',\n    76: 'High Wood Block',\n    77: 'Low Wood Block',\n    78: 'Mute Cuica',\n    79: 'Open Cuica',\n    80: 'Mute Triangle',\n    81: 'Open Triangle',\n    82: 'Shaker',\n    83: 'Jingle Bell',\n    84: 'Belltree',\n    85: 'Castanets',\n    86: 'Mute Surdo',\n    87: 'Open Surdo'\n};\n\nfunction slugify(string) {\n    return string.toLowerCase().replace(/\\s+/g, '-');\n}\n\nfor (let n in drumNames) {\n    noteNumbers[slugify(drumNames[n])] = parseInt(n, 10);\n}\n\n\n\n/**\nfrequencyToNote(n, ref = 440)\nReturns note number as a 32bit float from frequency float `n`.\n**/\n\nconst A4 = 69;\n\nexport function frequencyToFloat(freq, ref = 440) {\n    var number = A4 + 12 * Math.log(freq / ref) / Math.log(2);\n\n    // Rounded it to nearest 32-bit value to avoid floating point errors\n    // and return whole semitone numbers where possible.\n    return Math.fround(number);\n}\n\n\n/**\nfloatToFrequency(n, ref = 440)\nReturns frequency from note number float `n`.\n**/\n\nexport function floatToFrequency(n, ref = 440) {\n    return ref * Math.pow(2, (n - A4) / 12);\n}\n\n\n/**\ntoNoteNumber(n)\nReturns note number from a frequency string, note name or drum name.\n\n```js\ntoNoteNumber('A4');       // 69\ntoNoteNumber('440Hz');    // 69\ntoNoteNumber('Cabasa');   // 69\n```\n**/\n\nexport function toNoteNumber(name) {\n    // Name is a number\n    if (typeof name === 'number') return name;\n\n    // Name is a frequency string post-fixed with 'Hz'\n    if (rhz.test(name)) return frequencyToFloat(parseFloat(name));\n\n    const r = rnotename.exec(name);\n\n    return r ?\n        // Name is a pitch string\n        (parseInt(r[2], 10) + 1) * 12 + noteNumbers[r[1]] :\n        // Name is a GM drum string\n        noteNumbers[slugify(name)] ;\n}\n\nexport function toRootNumber(name) {\n    return typeof name === 'number' ?\n        mod12(name) :\n        noteNumbers[rnoteroot.exec(name)[0]] ;\n}\n\n\n/* noteNames exported because used by Scribe, but TODO a toNoteName that returns\na name without an octave. */\nexport const noteNames = [\n    'C', 'C♯', 'D', 'E♭', 'E', 'F', 'F♯', 'G', 'G♯', 'A', 'B♭', 'B'\n];\n\n/**\ntoNoteName(n)\nReturns note name from a value in the range 0-127.\n```js\ntoNoteName(69);       // 'A4'\n```\n*/\n\nexport function toNoteName(n) {\n    return toRootName(n) + toNoteOctave(n);\n}\n\n\n/**\ntoNoteRootName(n)\nWhere `n` is a note number, returns the root name, one of 'C', 'C♯', 'D', 'E♭',\n'E', 'F', 'F♯', 'G', 'G♯', 'A', 'B♭', 'B'.\n*/\n\nexport function toRootName(n) {\n    return noteNames[mod12(n)];\n}\n\n\n/**\ntoNoteOctave(note)\nGiven `n` as a note name or number, returns the numerical octave.\n\n```js\ntoNoteOctave(69);     // 4\n```\n*/\n\nexport function toNoteOctave(n) {\n    return typeof n === 'number' ?\n        Math.floor(n / 12) - 1 :\n        Number(noteNumbers[(rnoteoctave.exec(name) || nothing)[0]]) ;\n}\n\n/**\ntoDrumName(n)\nReturns a standard General MIDI drum name for note number or note name `n`.\n**/\n\nexport function toDrumName(n) {\n    const number = toNoteNumber(n);\n    return drumNames[number] || '';\n}\n", "\n/**\nget(name, object)\nGet property `name` of `object`.\n*/\n\nimport curry from './curry.js';\n\nexport function get(key, object) {\n    // Todo? Support WeakMaps and Maps and other map-like objects with a\n    // get method - but not by detecting the get method\n    return object[key];\n}\n\nexport default curry(get, true);\n", "\n/**\nsum(a, b)\nReturns the sum of `b + a`.\n**/\n\nexport default function sum(a, b) { return b + a; }\n", "/**\nmod(divisor, n)\nJavaScript's modulus operator (`%`) uses Euclidean division, but for\nstuff that cycles through 0 the symmetrics of floored division are often\nare more useful. This function implements floored division.\n**/\n\nexport default function mod(d, n) {\n    return ((n % d) + d) % d ;\n}\n", "\nimport mod from 'fn/mod.js';\n\n/* mod12()\nFinds the modulus `n % 12`, but using floored division (the JS operator uses\neuclidean division).\n*/\n\nexport function mod12(n) { return mod(12, n); }\n\n\n\nexport function byGreater(a, b) {\n    return a > b ? 1 :\n        a < b ? -1 :\n        0 ;\n}\n", "\nimport get from 'fn/get.js';\nimport { byGreater } from '../maths.js';\n\nconst beats = [];\n\nexport default function toBeats(events) {\n    beats.length = 0;\n\n    var n = events.length;\n    var event, beat;\n    while (n--) {\n        event = events[n];\n\n        if (beat !== event[0]) {\n            beat = event[0];\n            beats.push(beat);\n        }\n    }\n\n    return beats.sort(byGreater);\n}\n\n// TODO This would be better...\n// events\n// .map(get(0))\n// .filter((v, i, array) => (array.indexOf(v) === i))\n// .sort();\n", "/**\narg(n)\n\nReturns a function that returns `argument[n]`.\n\n```js\n```\n**/\n\nexport default function arg(n) {\n    return function arg() {\n        return arguments[n];\n    };\n}\n", "/**\nself()\nReturns `this`.\n*/\n\nexport default function self() { return this; }\n", "\n/**\nnothing\nA frozen array-like and stream-like object that contains no value.\n**/\n\nimport arg  from './arg.js';\nimport id   from './id.js';\nimport noop from './noop.js';\nimport self from './self.js';\n\nconst create = Object.create;\nconst freeze = Object.freeze;\n\nexport default freeze(create(create(Object.prototype, {\n    // Array methods\n    at:        { value: noop },\n    shift:     { value: noop },\n    push:      { value: noop },\n    forEach:   { value: noop },\n    join:      { value: function() { return ''; } },\n    every:     { value: function() { return true; } },\n    filter:    { value: self },\n    find:      { value: noop },\n    findIndex: { value: function() { return -1; } },\n    flat:      { value: self },\n    flatMap:   { value: self },\n    includes:  { value: function() { return false; } },\n    indexOf:   { value: function() { return -1; } },\n    map:       { value: self },\n    reduce:    { value: arg(1) },\n    sort:      { value: self },\n\n   // Stream methods\n    each:      { value: self },\n    pipe:      { value: id },\n    start:     { value: self },\n    stop:      { value: self },\n    done:      { value: self },\n\n    // Primitive coercion\n    valueOf:   { value: function() { return null; } }\n}), {\n    length: { value: 0 }\n}));\n", "\nimport { byGreater, mod12 } from './maths.js';\n\n/**\ntransposeScale(notes, tranpose)\nReturns a new scale, that is, an array of unique note numbers in the range\n`0-12`, from an array of note numbers, `notes`.\n**/\n\nfunction unique(value, i, array) {\n    return array.indexOf(value) === i;\n}\n\nexport function transposeScale(scale, transpose) {\n    return scale\n    // Transpose\n    .map((n) => mod12(n + transpose))\n    // Make unique\n    .filter(unique)\n    // Small to big, BTW may not start with 0\n    .sort(byGreater);\n}\n\nexport function transposeScale4ths(scale, transpose) {\n    return transposeScale(scale, transpose * 7);\n}\n", "\nimport overload from 'fn/overload.js';\nimport { transposeScale, transposeScale4ths } from './scale.js';\n\nexport default [\n    //                                       C      D       E  F      G      A       B\n    { name: 'C',  symbol: 'C∆',  spellings: [0,  1, 0, -1,  0, 0,  1, 0, -1, 0, -1,  0] },\n    { name: 'D♭', symbol: 'D♭∆', spellings: [0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, -1] },\n    { name: 'D',  symbol: 'D∆',  spellings: [0,  1, 0,  1,  0, 0,  1, 0,  1, 0, -1,  0] },\n    { name: 'E♭', symbol: 'E♭∆', spellings: [0, -1, 0, -1,  0, 0, -1, 0, -1, 0, -1, -1] },\n    { name: 'E',  symbol: 'E∆',  spellings: [0,  1, 0,  1,  0, 1,  1, 0,  1, 0,  1,  0] },\n    { name: 'F',  symbol: 'F∆',  spellings: [0, -1, 0, -1,  0, 0,  1, 0, -1, 0, -1,  0] },\n    { name: 'F♯', symbol: 'F♯∆', spellings: [1,  1, 0,  1,  0, 1,  1, 0,  1, 0,  1,  0] },  // (Should have G##?)\n  //{ name: 'G♭', symbol: 'G♭∆', spellings: [0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, -1] },  // (Should have Ebb?)\n    { name: 'G',  symbol: 'G∆',  spellings: [0,  1, 0, -1,  0, 0,  1, 0,  1, 0, -1,  0] },\n    { name: 'A♭', symbol: 'A♭∆', spellings: [0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, -1] },\n    { name: 'A',  symbol: 'A∆',  spellings: [0,  1, 0,  1,  0, 0,  1, 0,  1, 0,  1,  0] },\n    { name: 'B♭', symbol: 'B♭∆', spellings: [0, -1, 0, -1,  0, 0, -1, 0, -1, 0, -1,  0] },\n    { name: 'B',  symbol: 'B∆',  spellings: [1,  1, 0,  1,  0, 1,  1, 0,  1, 0,  1,  0] }\n];\n\n\nexport const cScale = [0,2,4,5,7,9,11];\n\nconst keynumbers = {\n    'F♭': -8,\n    'C♭': -7,\n    'G♭': -6,\n    'D♭': -5,\n    'A♭': -4,\n    'E♭': -3,\n    'B♭': -2,\n    'F':  -1,\n    'C':   0,\n    'G':   1,\n    'D':   2,\n    'A':   3,\n    'E':   4,\n    'B':   5,\n    'F♯':  6,\n    'C♯':  7,\n    'G♯':  8,\n    'D♯':  9,\n    'A♯':  10,\n    'E♯':  11,\n    'B♯':  12\n};\n\nconst accidentals = {\n    'bb': '𝄫',\n    'b': '♭',\n    '':  '',\n    '#':  '♯',\n    '##':  '𝄪'\n};\n\nfunction normaliseKeyName(name) {\n    return name.replace(/[#b]{1,2}$/, ($0) => accidentals[$0]);\n}\n\nexport function toKeyNumber(keyname) {\n    return typeof keyname === 'number' ?\n        keyname :\n        keynumbers[normaliseKeyName(keyname)] ;\n}\n\nexport function toKeyScale(key) {\n    return typeof key === 'number' ?\n        transposeScale(cScale, key) :\n        transposeScale4ths(cScale, keynumbers[key]) ;\n}\n", "\nimport nothing         from 'fn/nothing.js';\nimport { noteNumbers, toRootNumber, toRootName } from 'midi/note.js';\nimport keys            from '../keys.js';\nimport { mod12, byGreater } from '../maths.js';\n\n\nconst rrootname = /^[A-G][b#♭♯𝄫𝄪]?/;\nconst rchord    = /([ABCDEFG][b#♭♯𝄫𝄪]?)([^\\/]*)(?:\\/([ABCDEFG]))?/;\n\nconst modes = {\n    '∆':       0,\n    '∆7':      0,\n    '-7':      2,\n    'sus♭9':   4,\n    '7sus♭9':  4,\n    '∆♯11':    5,\n    '∆(♯11)':  5,\n    '7':       7,\n    '13':      7,\n    'sus':     7,\n    '7sus':    7,\n    '-♭6':     9,\n    'ø':       11,\n\n    // Here we treat melodic minor as though it were the fourth degree of a\n    // major scale, making the spellings work out nicely, or so it is hoped,\n    // but also because it is strongly related (think E7alt -> Am).\n    '-∆':      5,\n    '13sus♭9': 7,\n    '∆+':      8,\n    '∆♯5':     8,\n    '7♯11':    10,\n    '7♭13':    0,\n    'ø(9)':    2,\n    '7alt':    4\n};\n\n// TODO Move this. It is used for lookup to get scale of chord, but we need to\n// move this to a central place that handles theory\nconst chordNotes = {\n    '∆':        [0, 2, 4, 7, 9, 11],\n    '∆7':       [0, 2, 4, 7, 9, 11],\n    '-':        [0, 3, 7],\n    '-7':       [0, 2, 3, 5, 7, 9, 10],\n    'sus♭9':    [0, 1, 5, 7, 10],\n    '7sus♭9':   [0, 1, 5, 7, 10],\n    '∆♯11':     [0, 2, 4, 6, 7, 9, 11],\n    '∆(♯11)':   [0, 2, 4, 6, 7, 9, 11],\n    '7':        [0, 4, 7, 10],\n    '13':       [0, 4, 7, 9, 10],\n    'sus':      [0, 2, 5, 7, 10],\n    '7sus':     [0, 2, 5, 7, 10],\n    '-♭6':      [0, 2, 3, 5, 7, 8],\n    'ø':        [0, 3, 6, 10],\n\n    // Harmonic minor\n    '7♭9♭13':   [0, 1, 4, 5, 7, 8, 10],\n\n    // Melodic minor\n    '-∆':       [0, 2, 3, 5, 7, 9, 11],\n    '13sus♭9':  [0, 1, 5, 7, 9, 10],\n    '∆+':       [0, 2, 4, 6, 8, 9, 11],\n    '∆♯5':      [0, 2, 4, 6, 8, 9, 11],\n    '7♯11':     [0, 2, 4, 6, 7, 9, 10],\n    '7♭13':     [0, 2, 4, 7, 8, 10],\n    'ø(9)':     [0, 2, 3, 6, 10],\n    '7alt':     [0, 1, 3, 4, 6, 8, 10],\n    //'∆♭6':      [0, 4, 7, 8, 11],\n\n    // Harmonic major\n    '∆♭6':      [0, 2, 4, 7, 8, 11],\n\n    // Diminished\n    '7♭9':      [0, 1, 3, 4, 6, 7, 9, 10],\n    '7♯9':      [0, 1, 3, 4, 6, 7, 9, 10],\n    'º':        [0, 2, 3, 5, 6, 8, 9, 11],\n\n    // Whole tone\n    '7+':       [0, 2, 4, 6, 8, 10]\n};\n\n\n// Map functions\n\nexport function normaliseExtensionName(str) {\n    return str.replace(/(maj)|(min)|(dim)/, ($0, $maj, $min, $dim) => {\n        return $maj ? '∆' :\n            $min ? '-' :\n            $dim ? 'º' :\n            '' ;\n    });\n}\n\nexport function toRoot(str) {\n    var name = (rchord.exec(str) || nothing)[1];\n    return noteNumbers[name];\n}\n\nexport function toExtension(str) {\n    const chordName = normaliseExtensionName(str);\n    return (rchord.exec(chordName) || empty)[2];\n}\n\nexport function toMode(str) {\n    return modes[toExtension(str)];\n}\n\nexport function toBass(str) {\n    var result = rchord.exec(str) || empty;\n    return result[3] || result[1];\n}\n\nexport function toKey(str) {\n    return keys[mod12(toRoot(str) - toMode(str))];\n}\n\nexport function toChordNotes(root, extension, bass) {\n    const r = toRootNumber(root);\n    const e = normaliseExtensionName(extension);\n    // Ignore bass note for now: TODO\n    //const b = toRootNumber(bass);\n    return chordNotes[e] ?\n        // If r is not 0 transpose the mode\n        r ? chordNotes[e].map((n) => mod12(n + r)).sort(byGreater) :\n        // Otherwise return the mode as-is\n        chordNotes[e] :\n        // No mode found\n        [] ;\n}\n\nexport function transposeChord(str, n) {\n    const root = (rrootname.exec(str) || nothing)[0];\n    return toRootName(toRootNumber(root) + n) + str.slice(root.length);\n}\n", "\n/** toScale(event)\nReturns an array of octave 0 note numbers that `event` represents.\n\n```js\ntoScale([0, 'note', 3, 1, 1])      // [3]\ntoScale([0, 'note', 16, 1, 1])     // [4]\ntoScale([0, 'chord', 'Gm7', 1, 1]) // [0, 2, 4, 5, 7, 9, 10]\n```\n**/\n\nimport get              from 'fn/get.js';\nimport overload         from 'fn/overload.js';\nimport { toRootNumber } from 'midi/note.js';\nimport { toChordNotes } from './chord.js';\n\n\nexport default overload(get(1), {\n    // Only chords and notes have scale\n    chord:   (event) => toChordNotes(event[2], event[3]),\n    note:    (event) => [toRootNumber(event[2])],\n    // TODO: But perhaps sequences should recusively pass back its current scale ???\n    //sequence: (event) => return event[4],\n    default: (event) => []\n});\n", "\nimport get      from 'fn/get.js';\nimport overload from 'fn/overload.js';\n\nexport default overload(get(1), {\n    chord:    (event) => event[3],\n    lyric:    (event) => event[3],\n    note:     (event) => event[4],\n    sequence: (event) => event[4],\n    // Return 0 duration as default\n    default:  (event) => 0\n});\n", "\nimport toDuration from '../event/to-duration.js';\n\nconst output = [];\n\n/**\neventsAtBeat(events, beat)\nReturns an array of events at, or whose duration covers, `beat`.\n**/\n\nexport default function eventsAtBeat(events, beat) {\n    output.length = 0;\n\n    let event;\n    let n = -1;\n    while (event = events[++n]) {\n        if (event[0] > beat) break;\n        if (event[0] === beat || event[0] + toDuration(event) > beat) {\n            output.push(event);\n        }\n    }\n\n    return output;\n}\n", "\nimport sum          from 'fn/sum.js';\nimport toBeats      from '../sequence/to-beats.js';\nimport toNotes      from '../event/to-notes.js';\nimport keys         from '../keys.js';\nimport eventsAtBeat from './events-at-beat.js';\n\n\n/** toKeys(events)\n   Uses the Viterbi algorithm to determine key centres of an\n   array of events.\n**/\n\nconst initialProb      = [1/12, 1/12, 1/12, 1/12, 1/12, 1/12, 1/12, 1/12, 1/12, 1/12, 1/12, 1/12];\nconst transitionProbs  = [10, 5, 8, 10, 6, 10, 8, 10, 7, 10, 8, 4];\nconst transitionSum    = transitionProbs.reduce(sum);\nconst transitionMatrix = transitionProbs\n\t.map((n) => n / transitionSum)\n\t.map(toMatrix);\n\nconst emissionMatrix   = [0.1, 0.04, 0.1, 0.04, 0.1, 0.1, 0.04, 0.1, 0.04, 0.1, 0.04, 0.1]\n\t.map(toMatrix);\n\n\nfunction toMatrix(v, i, arr) {\n\treturn arr.slice(12 - i).concat(arr.slice(0, 12 - i));\n}\n\nfunction computeEmissions(notes, emissionMatrixRow) {\n\tvar p = 0;\n\n\tfor( var i = 0; i < notes.length; ++i ) {\n\t\tp += Math.log(emissionMatrixRow[notes[i]]);\n\t}\n\n\treturn p;\n}\n\nfunction viterbi(data, initialProb, transitionMatrix, emissionMatrix) {\n\tvar probs = [];\n\tvar matrix = [];\n\tvar path = [];\n\tvar max = [];\n\tvar t = 0;\n\tvar i = -1;\n\tvar j, newpath, prob;\n\n\t// Calculate base probabilities for t = 0\n\tmatrix[t] = probs;\n\n\twhile (++i < 12) {\n\t\tprobs[i] = Math.log(initialProb[i]) + computeEmissions(data[0], emissionMatrix[i]);\n\t\tpath[i] = [i];\n\t}\n\n\t// Calculate probable paths\n\twhile (++t < data.length) {\n\t\tprobs = [];\n\t\tnewpath = [];\n\t\tmatrix[t] = probs;\n\t\tj = -1;\n\n\t\twhile (++j < 12) {\n\t\t\t// Initialise max array\n\t\t\tmax.length = 0;\n\t\t\tmax[0] = -Infinity;\n\t\t\ti = -1;\n\n\t\t\twhile (++i < 12) {\n\t\t\t\t// Calculate the probability\n\t\t\t\tprob = matrix[t - 1][i]\n\t\t\t\t\t+ Math.log(transitionMatrix[i][j])\n\t\t\t\t\t+ computeEmissions(data[t], emissionMatrix[j]);\n\n\t\t\t\tif (prob > max[0]) {\n\t\t\t\t\tmax[0] = prob;\n\t\t\t\t\tmax[1] = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprobs[j] = max[0];\n\t\t\tnewpath[j] = path[max[1]].concat(j);\n\t\t}\n\n\t\tpath = newpath;\n\t}\n\n\t// Initialise max array\n\tmax.length = 0;\n\tmax[0] = -Infinity;\n\ti = -1;\n\n\twhile (++i < 12) {\n\t\tprob = matrix[data.length - 1][i];\n\n\t\tif (prob > max[0]) {\n\t\t\tmax[0] = prob;\n\t\t\tmax[1] = i;\n\t\t}\n\t}\n\n\treturn path[max[1]];\n}\n\nfunction pushAll(array1, array2) {\n\tarray1.push.apply(array1, array2);\n\treturn array1;\n}\n\nexport default function toKeys(events) {\n\t// Get beats of harmony events\n\t// Don't filter events. The output array must be the same length as the input array.\n\tconst beats  = toBeats(events);\n\tconst length = beats.length;\n\tconst notes  = [];\n\n\tlet n = -1;\n\tlet beat, beatEvents;\n\twhile (++n < length) {\n\t\tbeat = beats[n];\n\t\t// beatEvents must be used synchronously – it is a buffer that is\n\t\t// overwritten on the next call to eventsAtBeat()\n\t\tbeatEvents = eventsAtBeat(events, beat);\n\n\t\tvar arraysOfNotes = beatEvents.map(toNotes);\n\t\tif (arraysOfNotes.find((notes) => notes.find(Number.isNaN) !== undefined) !== undefined) {\n\t\t\tconsole.log(beatEvents);\n\t\t\tthrow new Error('toNotes has returned NaN for beatEvents');\n\t\t}\n\n\t\tnotes.push(\n\t\t\tbeatEvents\n\t\t\t// Maps to arrays of note numbers, so a note event will be an array\n\t\t\t// of one number, a chord may have many.\n\t\t\t.map(toNotes)\n\t\t\t.reduce(pushAll, [])\n\t\t);\n\t}\n\n\treturn length ?\n\t\tviterbi(notes, initialProb, transitionMatrix, emissionMatrix) :\n\t\t[] ;\n}\n", "\n/**\nby(fn, a, b)\n\nFor sorting arrays. Compares `fn(a)` against `fn(b)` and returns `-1`, `0` or\n`1`. Partially applicable. To sort an array of objects by their ids:\n\n```\narray.sort(by(get('id')))\n```\n**/\n\nimport curry from './curry.js';\n\nexport function by(fn, a, b) {\n    const fna = fn(a);\n    const fnb = fn(b);\n    return fnb === fna ? 0 : fna > fnb ? 1 : -1 ;\n}\n\nexport default curry(by, true);\n", "\nimport by      from 'fn/by.js';\nimport get     from 'fn/get.js';\nimport toBeats from './to-beats.js';\nimport toKeys  from './to-keys.js';\n\n/**\nkeysAtBeats(events)\nReturns an array of `[beat, key]` entries, with an entry for each\nunique beat found in events.\n**/\n\nexport function keysAtBeats(events) {\n    const harmonies = events.filter((event) => /^note|chord$/.test(event[1]));\n    const beats = toBeats(harmonies);\n    const keys  = toKeys(harmonies);\n    return beats.map((beat, i) => [beat, keys[i]]);\n}\n\n/**\nkeyFromBeatKeys(beatkeys, beat)\n**/\n\nexport function keyFromBeatKeys(beatkeys, beat) {\n    let n = beatkeys.length;\n\n    while (n--) {\n        if (beatkeys[n][0] <= beat) {\n            return beatkeys[n][1];\n        }\n    }\n\n    return beatkeys[0][1];\n}\n\n/**\nkeyAtBeat(beatkeys, beat)\nGet the key at the given beat by looking at the latest event\nbeat to see what it has.\n**/\n\nexport default function keyAtBeat(events, beat) {\n    const beatkeys = keysAtBeats(events.sort(by(get(0))));\n    return keyFromBeatKeys(beatkeys, beat);\n}\n\n", "\nexport const clefTreble      = '&#xE050;';\nexport const clefTrebleDown  = '&#xE052;';\nexport const clefTrebleUp    = '&#xE053;';\nexport const clefAlto        = '&#xE05C;';\nexport const clefBass        = '&#xE062;';\nexport const clefDrum        = '&#xE069;';\nexport const clefPercussion  = '&#xE069;';\n\nexport const timeSig0         = '&#xE080;';\nexport const timeSig1         = '&#xE081;';\nexport const timeSig2         = '&#xE082;';\nexport const timeSig3         = '&#xE083;';\nexport const timeSig4         = '&#xE084;';\nexport const timeSig5         = '&#xE085;';\nexport const timeSig6         = '&#xE086;';\nexport const timeSig7         = '&#xE087;';\nexport const timeSig8         = '&#xE088;';\nexport const timeSig9         = '&#xE089;';\nexport const timeSigCommon    = '&#xE08A;';\nexport const timeSigCutCommon = '&#xE08B;';\n\nexport const acciDoubleFlat  = '&#xE264;';\nexport const acciFlat        = '&#xE260;';\nexport const acciNatural     = '&#xE261;';\nexport const acciSharp       = '&#xE262;';\nexport const acciDoubleSharp = '&#xE263;';\nexport const acciParensLeft  = '&#xE26A;';\nexport const acciParensRight = '&#xE26B;';\n\n// https://w3c.github.io/smufl/latest/tables/noteheads.html\nexport const head1                   = '&#xE0A4;';\nexport const head2                   = '&#xE0A3;';\nexport const head4                   = '&#xE0A2;';\nexport const headBracketLeft         = '&#xE0F5;';\nexport const headBracketRight        = '&#xE0F6;';\nexport const headSlashed2            = '&#xE0D0;';\nexport const headDiamond             = '&#xE0DB;';\nexport const headDiamondWide         = '&#xE0DC;';\nexport const headX                   = '&#xE0A9;';\nexport const headPlus                = '&#xE0AF;';\nexport const headCircle              = '&#xE0E8;';\nexport const headCircleX             = '&#xE0B3;';\nexport const headTriangleUp          = '&#xE0BE;';\nexport const headSlashVerticalEnds   = '&#xE100;';\nexport const headSlashHorizontalEnds = '&#xE101;';\n\nexport const graceNoteStemUp   = '&#xE560;';\nexport const graceNoteStemDown = '&#xE561;';\n\nexport const tailUp05     = '&#xE240;'\nexport const tailDown05   = '&#xE241;'\nexport const tailUp025    = '&#xE242;'\nexport const tailDown025  = '&#xE243;'\nexport const tailUp0125   = '&#xE244;'\nexport const tailDown0125 = '&#xE245;'\n\n// 200A is a unicode HAIR SPACE, it's needed to seperate rest from dot in Jazz.\n// TODO: do other fonts need it tho?\nexport const rest0125  = '&#xE4E8;';\nexport const rest01875 = '&#xE4E8;&#xE1E7;';\nexport const rest025   = '&#xE4E7;';\nexport const rest0375  = '&#xE4E7;&#xE1E7;';\nexport const rest05    = '&#xE4E6;';\nexport const rest075   = '&#xE4E6;&#xE1E7;';\nexport const rest1     = '&#xE4E5;';\nexport const rest15    = '&#xE4E5;&#x200A;&#xE1E7;';\nexport const rest2     = '&#xE4E4;';\nexport const rest3     = '&#xE4E4;&#x200A;&#xE1E7;';\nexport const rest4     = '&#xE4E3;';\nexport const rest6     = '&#xE4E3;&#x200A;&#xE1E7;';\n\n// These are only supported in Bravura, Petaluma font...\n/*export const braceBegin = '&#xE000';\nexport const braceEnd   = '&#xE001';\nexport const bracket    = '&#xE002';\nexport const bracketTop       = '&#xE003';\nexport const bracketBottom    = '&#xE004';\nexport const bracketEndTop    = '&#xE005';\nexport const bracketEndBottom = '&#xE006';*/\n\nexport const barLine = '&#xE030';\n// These are only supported in Bravura, Leipzig, Petaluma...\n/*export const barLineDouble = '&#xE031';\nexport const barLineEnd    = '&#xE032';\nexport const barLineBegin  = '&#xE033';\nexport const barLineHeavy  = '&#xE034';*/\n// Not supported by Ash, Broadway, use a fallback font with support\nexport const barRepeatBegin = '&#xE040';\nexport const barRepeatEnd   = '&#xE041';\nexport const barRepeatEndBegin = '&#xE042';\nexport const barRepeatDots = '&#xE043';\n\nexport const coda = '&#xE048';\n\nexport const tuplet0   = '&#xE880;';\nexport const tuplet1   = '&#xE881;';\nexport const tuplet2   = '&#xE882;';\nexport const tuplet3   = '&#xE883;';\nexport const tuplet4   = '&#xE884;';\nexport const tuplet5   = '&#xE885;';\nexport const tuplet6   = '&#xE886;';\nexport const tuplet7   = '&#xE887;';\nexport const tuplet8   = '&#xE888;';\nexport const tuplet9   = '&#xE889;';\n\n// Not supported by any font\n/*export const beamBegin   = '&#xE8E0;';\nexport const beamEnd     = '&#xE8E1;';\nexport const tieBegin    = '&#xE8E2;';\nexport const tieEnd      = '&#xE8E3;';\nexport const slurBegin   = '&#xE8E4;';\nexport const slurEnd     = '&#xE8E5;';\nexport const phraseBegin = '&#xE8E6;';\nexport const phraseEnd   = '&#xE8E7;';*/\n\n// These are not aligned to baseline, they are intended for text content\nexport const tupletBracketBegin = '&#xE1FE;';\nexport const tupletBracket3     = '&#xE1FF;';\nexport const tupletBracketEnd   = '&#xE200;';\nexport const tupletBracketBeginLongStem = '&#xE201;';\nexport const tupletBracket3LongStem     = '&#xE202;';\nexport const tupletBracketEndLongStem   = '&#xE203;';\n\nexport const chordDiminished      = '&#xE870;';\n// Not supported in Jazz, Ash, Broadway, Leipzig\n/*export const chordDiminishedSmall = '&#xF4D8;';*/\nexport const chordHalfDiminished  = '&#xE871;';\nexport const chordAugmented       = '&#xE872;';\nexport const chordMajorSeventh    = '&#xE873;';\nexport const chordMinor           = '&#xE874;';\nexport const chordParensLeftTall  = '&#xE875;';\nexport const chordParensRightTall = '&#xE876;';\nexport const chordBracketLeft     = '(';\nexport const chordBracketRight    = ')';\nexport const chordBassSlash       = '&#xE87B;';\n\nexport const chordGlyphs = {\n    \"∆♯11\": \"\\uE873\\uED6211\",\n    \"∆\": \"\\uE873\",\n    \"7\": \"7\",\n    \"-7\": \"\\uE8747\",\n    \"-♭6\": \"\\uE874\\uED606\",\n    \"7sus♭9\": \"7sus\\uED62\",\n    \"ø\": \"\\uE871\",\n    \"7♯11\": \"7\\uED6211\",\n    \"-∆\": \"\\uE874\\uE873\",\n    \"∆♭6\": \"\\uE873\\uED606\",\n    \"-♭9\": \"\\uE874\\uED609\",\n    \"ø7\": \"\\uE8717\",\n    \"∆♯5\": \"\\uE873\\uED625\",\n    \"7alt\": \"7alt\",\n    \"°\": \"\\uE870\",\n    \"dim\": \"\\uE870\",\n    \"7♭9\": \"7\\uED60\",\n    \"+7\": \"\\uE8727\",\n};\n", "\nimport nothing from 'fn/nothing.js';\nimport { noteNames, toNoteNumber, toRootNumber, toNoteOctave } from 'midi/note.js';\nimport { mod12 } from '../maths.js';\nimport keys from '../keys.js';\n\nconst accidentals = {\n    '-2': '𝄫',\n    '-1': '♭',\n    '0':  '',\n    '1':  '♯',\n    '2':  '𝄪'\n};\n\nconst rpitch = /^[A-G][b#♭♯𝄫𝄪]?(-?\\d)?$/;\n\nexport default function toSpelling(keynumber, event, transpose = 0) {\n    const key = keys[mod12(keynumber + transpose)];\n    let n, a, o;\n\n    if (typeof event[2] === 'string') {\n        let [notename, octave] = rpitch.exec(event[2]) || [event[2]];\n\n        if (octave) {\n            // pitch is note name like \"C4\", deconstruct it and put it back together\n            n = toNoteNumber(event[2]) + transpose;\n            a = key.spellings[mod12(n)];\n            o = toNoteOctave(n - a);\n        }\n        else {\n            // pitch is root name like \"C\"\n            n = toRootNumber(event[2]) + transpose;\n            a = key.spellings[mod12(n)];\n            o = '';\n        }\n    }\n    else if (event[1] === 'chord') {\n        // pitch is root name like \"C\"\n        n = toRootNumber(event[2]) + transpose;\n        a = key.spellings[mod12(n)];\n        o = '';\n    }\n    else {\n        // pitch is a number\n        n = event[2] + transpose;\n        a = key.spellings[mod12(n)];\n        o = toNoteOctave(n - a);\n    }\n\n    // key.spellings makes sure name is a natural note name\n    const name = noteNames[mod12(n - a)];\n    const accidental = accidentals[a];\n\n    if (window.DEBUG && name === undefined) {\n        throw new Error('Incorrect spelling for pitch number ' + n + ': \"' + name + '\"');\n    }\n\n    return name + accidental + o;\n}\n", "export const rflat        = /b|♭/;\nexport const rsharp       = /#|♯/;\nexport const rdoubleflat  = /bb|𝄫/;\nexport const rdoublesharp = /##|𝄪/;\nexport const rflatsharp   = /b|♭|#|♯/g;\n", "\nimport nothing        from 'fn/nothing.js';\nimport { toNoteName, toNoteNumber, toNoteOctave } from 'midi/note.js';\nimport toSpelling     from '../event/to-spelling.js';\nimport { rflatsharp } from '../regexp.js';\nimport * as glyphs    from \"../glyphs.js\";\n\nconst assign = Object.assign;\n\n\n/* Stave */\n\nexport default class Stave {\n    constructor() {}\n\n    /**\n    .clef\n    String containing single clef glyph.\n    **/\n    clef = '';\n\n    /**\n    .pitched\n    A boolean indicating whether this stave supports keys and transposition.\n    **/\n    pitched = true;\n\n    /**\n    .rows\n    An array of row names, from bottom to top of stave. Row names must correspond\n    to those defined for a given stave in CSS.\n    **/\n    rows = nothing;\n\n    /**\n    .getNoteHTML(pitch, dynamic, duration)\n    Get the HTML content used for a note of given `pitch`, `dynamic` and\n    `duration`. For normal chromatic staves only `duration` really matters, but\n    percussion staves may replace heads based on pitch and dynamics.\n    **/\n\n    getNoteHTML(pitch, dynamic, duration) {\n        const name =\n            // Semibreve\n            duration >= 4 ? 'head4' :\n            // Triplet semibreve\n            Math.fround(duration) === Math.fround(2.666666667) ? 'head4' :\n            // Minim\n            duration >= 2 ? 'head2' :\n            // Triplet minim\n            Math.fround(duration) === Math.fround(1.333333333) ? 'head2' :\n            // Everything else\n            'head1' ;\n\n        return `<span class=\"head\" data-glyph=\"${ name }\">${ glyphs[name] }</span>`;\n    }\n\n    /**\n    .minPitch, .maxPitch, .minLinePitch, .midLinePitch, .maxLinePitch\n    Minimum and maximum pitch names supported by the stave corresponding to the\n    first and last row names in `.rows`, and lower, middle and upper stave pitches\n    corresponding to the lower, middle and upper lines of the stave.\n    **/\n\n    get minPitch() {\n        return this.rows[0];\n    }\n\n    get maxPitch() {\n        return this.rows[27];\n    }\n\n    get minLinePitch() {\n        return this.rows[9];\n    }\n\n    get midLinePitch() {\n        return this.rows[13];\n    }\n\n    get maxLinePitch() {\n        return this.rows[17];\n    }\n\n    /**\n    .movePitch(pitch, n)\n    Chromatically transpose `pitch` by `n` semitones within the bounds of\n    `.minPitch` and `.maxPitch`. Should a transposed pitch fall outside this\n    range, returns `undefined`.\n    **/\n    movePitch(pitch, n) {\n        // Chromatic transpose\n        const min    = toNoteNumber(this.minPitch);\n        const max    = toNoteNumber(this.maxPitch);\n        const number = toNoteNumber(pitch) + n;\n        // Don't transpose outside the limits of the stave\n        return number >= min && number <= max ?\n            number :\n            undefined ;\n    }\n\n    /**\n    .getPart(pitch)\n    **/\n    getPart(pitch) {\n        return this.getRowDiff(this.midLinePitch, pitch) < 0 ? {\n            stemDirection: 'up',\n            tieDirection:  'up'\n        } : {\n            stemDirection: 'down',\n            tieDirection:  'down'\n        };\n    }\n\n    /**\n    .getRowDiff(pitch1, pitch2)\n    Given two pitches `pitch1` and `pitch2`, returns the difference in rows\n    between their rendered positions.\n    **/\n    getRowDiff(pitch1, pitch2) {\n        const row1 = pitch1.replace(rflatsharp, '');\n        const row2 = pitch2.replace(rflatsharp, '');\n        const i1 = this.rows.indexOf(row1);\n        const i2 = this.rows.indexOf(row2);\n\n        if (i1 === -1) { throw new Error('Pitch \"' + pitch1 + '\" is not supported by stave ' + this.constructor.name); }\n        if (i2 === -1) { throw new Error('Pitch \"' + pitch2 + '\" is not supported by stave ' + this.constructor.name); }\n\n        return i2 - i1;\n    }\n\n    /**\n    .getSpelling()\n    Gets spelling of a given pitch. Returns a pitch name string.\n    **/\n    getSpelling() {\n        return toSpelling.apply(this, arguments);\n    }\n\n    yRatioToPitch(y) {\n        const n = floor(y * this.pitches.length);\n        return n < 0 ? this.pitches[0] :\n            n > this.pitches.length - 1 ? this.pitches[this.pitches.length - 1] :\n            this.pitches[n] ;\n    }\n}\n", "\nimport { toNoteName, toNoteNumber } from 'midi/note.js';\nimport toSpelling  from '../event/to-spelling.js';\nimport * as glyphs from \"../glyphs.js\";\nimport Stave       from './stave.js';\n\nexport default class DrumStave extends Stave {\n    type = 'drum';\n    clef = glyphs.clefDrum;\n\n    pitched = false;\n\n    rows = ['','','','','','','',\n        'pedal-hi-hat',\n        'bass-drum-2',\n        'bass-drum-1',\n        'low-tom-2',\n        'low-tom-1',\n        'mid-tom-2',\n        'snare-drum-1',\n        'mid-tom-1',\n        'high-tom-1',\n        'closed-hi-hat',\n        'ride-cymbal-1',\n        'crash-cymbal-1',\n        'crash-cymbal-2',\n        'splash-cymbal',\n    '','','',''];\n\n    #headnames = {\n        31: 'headX',          // Sticks\n        37: 'headCircle',     // Side Stick\n        39: 'headX',          // Hand Clap\n        42: 'headX',          // Closed Hi-Hat\n        44: 'headX',          // Pedal Hi-Hat\n        46: 'headCircleX',    // Open Hi-Hat\n        49: 'headCircleX',    // Crash Cymbal 1\n        51: 'headX',          // Ride Cymbal 1\n        52: 'headCircleX',    // Chinese Cymbal\n        53: 'headDiamond',    // Ride Bell\n        54: 'headX',          // Tambourine\n        55: 'headX',          // Splash Cymbal\n        56: 'headTriangleUp', // Cowbell\n        57: 'headCircleX',    // Crash Symbol 2\n        58: 'headTriangleUp', // Vibraslap\n        59: 'headX'           // Ride Cymbal 2\n    };\n\n    #rows = {\n        27: 0,  // High Q\n        28: 0,  // Slap\n        29: 0,  // Scratch Push\n        30: 0,  // Scratch Pull\n        31: 13, // Sticks\n        32: 0,  // Square Click\n        33: 0,  // Metronome Click\n        34: 0,  // Metronome Bell\n        35: 10, // Bass Drum 2\n        36: 9,  // Bass Drum 1\n        37: 14, // Side Stick\n        38: 14, // Snare Drum 1\n        39: 13, // Hand Clap\n        40: 14, // Snare Drum 2\n        41: 11, // Low Tom 2\n        42: 17, // Closed Hi-hat\n        43: 12, // Low Tom 1\n        44: 8,  // Pedal Hi-hat\n        45: 13, // Mid Tom 2\n        46: 17, // Open Hi-hat\n        47: 13, // Mid Tom 1\n        48: 15, // High Tom 2\n        49: 19, // Crash Cymbal 1\n        50: 16, // High Tom 1\n        51: 18, // Ride Cymbal 1\n        52: 21, // Chinese Cymbal\n        53: 18, // Ride Bell\n        54: 13, // Tambourine\n        55: 21, // Splash Cymbal\n        56: 16, // Cowbell\n        57: 20, // Crash Cymbal 2\n        58: 0,  // Vibra Slap\n        59: 19, // Ride Cymbal 2\n        60: 0,  // High Bongo\n        61: 0,  // Low Bongo\n        62: 0,  // Mute High Conga\n        63: 0,  // Open High Conga\n        64: 0,  // Low Conga\n        65: 0,  // High Timbale\n        66: 0,  // Low Timbale\n        67: 0,  // High Agogo\n        68: 0,  // Low Agogo\n        69: 0,  // Cabasa\n        70: 0,  // Maracas\n        71: 0,  // Short Whistle\n        72: 0,  // Long Whistle\n        73: 0,  // Short Guiro\n        74: 0,  // Long Guiro\n        75: 0,  // Claves\n        76: 0,  // High Wood Block\n        77: 0,  // Low Wood Block\n        78: 0,  // Mute Cuica\n        79: 0,  // Open Cuica\n        80: 0,  // Mute Triangle\n        81: 0,  // Open Triangle\n        82: 0,  // Shaker\n        83: 0,  // Jingle Bell\n        84: 0,  // Belltree\n        85: 0,  // Castanets\n        86: 0,  // Mute Surdo\n        87: 0   // Open Surdo\n    };\n\n    get maxPitch() {\n        return this.rows[25];\n    }\n\n    get minLinePitch() {\n        return this.rows[8];\n    }\n\n    get midLinePitch() {\n        return this.rows[12];\n    }\n\n    get maxLinePitch() {\n        return this.rows[16];\n    }\n\n    getNoteHTML(pitch, dynamic, duration) {\n        const number = toNoteNumber(pitch);\n        const name   = this.#headnames[number];\n        const head   = glyphs[name];\n        const html   = name ?\n            `<span class=\"head\" data-glyph=\"${ name }\">${ head }</span>` :\n             super.getNoteHTML(pitch, dynamic, duration) ;\n\n        // Ghost note gets brackets\n        return dynamic < 0.02 ?\n            glyphs.headBracketLeft + html + glyphs.headBracketRight :\n            html ;\n    }\n\n    getPart(pitch) {\n        // Split drums stave into drums and cymbals parts\n        return [35, 36, 37, 38, 40, 41, 43, 44, 45, 47, 50].includes(toNoteNumber(pitch)) ? {\n            part:          'drums',\n            stemDirection: 'down',\n            tieDirection:  'down',\n            centerRow:     'stave-lower',\n        } : {\n            // part: 'cymbals' Leave part undefined to group with main render\n            stemDirection: 'up',\n            tieDirection:  'up',\n            centerRow:     'stave-upper'\n        } ;\n    }\n\n    getRowDiff(pitch1, pitch2) {\n        const number1 = toNoteNumber(pitch1);\n        const number2 = toNoteNumber(pitch2);\n        const row1    = this.#rows[number1];\n        const row2    = this.#rows[number2];\n\n        if (row1 === undefined) { throw new Error('Pitch \"' + pitch1 + '\" is not supported by stave ' + this.constructor.name); }\n        if (row2 === undefined) { throw new Error('Pitch \"' + pitch2 + '\" is not supported by stave ' + this.constructor.name); }\n\n        return row2 - row1;\n    }\n\n    getSpelling(key, event, transpose) {\n        if (event[1] === 'note') {\n            // Use standard MIDI note names. We don't want any spelling happening\n            // on drum parts.\n            return toNoteName(toNoteNumber(event[2]));\n        }\n\n        return toSpelling(key, event, transpose);\n    }\n\n    yRatioToPitch(y) {\n        const i = floor(y * this.rows.length);\n        const j = i < 4 ? 4 : i > 17 ? 17 : i ;\n        return this.pitches[j];\n    }\n}\n", "\nimport { toNoteNumber } from 'midi/note.js';\nimport * as glyphs from \"../glyphs.js\";\nimport DrumStave from './drum.js';\n\n\nexport default class PercussionStave extends DrumStave {\n    type = 'percussion';\n    clef = glyphs.clefPercussion;\n\n    rows = ['','','','','','','','','note','','','','','','','',''];\n\n    get maxPitch() {\n        return this.rows[17];\n    }\n\n    get minLinePitch() {\n        return this.rows[8];\n    }\n\n    get midLinePitch() {\n        return this.rows[8];\n    }\n\n    get maxLinePitch() {\n        return this.rows[8];\n    }\n\n    getPart(pitch) {\n        // Stem direction by drum or cymbal ??\n        return [35, 36, 37, 38, 40, 41, 43, 44, 45, 47, 50].includes(toNoteNumber(pitch)) ? {\n            stemDirection: 'down',\n            tieDirection:  'down'\n        } : {\n            stemDirection: 'up',\n            tieDirection:  'up'\n        } ;\n    }\n\n    getRowDiff(pitch1, pitch2) {\n        // All notes display on one line\n        return 0;\n    }\n}\n", "\nimport toSpelling  from '../event/to-spelling.js';\nimport * as glyphs from \"../glyphs.js\";\nimport Stave       from './stave.js';\n\n/**\nA simple piano grand stave which brute splits treble from bass at Bb3.\n**/\n\nexport default class PianoStave extends Stave {\n    type = 'piano';\n    rows = [      'E1','F1','G1','A1','B1',\n        'C2','D2','E2','F2','G2','A2','B2',\n        'C3','D3','E3','F3','G3','A3','B3',\n        'C4','D4','E4','F4','G4','A4','B4',\n        'C5','D5','E5','F5','G5','A5','B5',\n        'C6','D6','E6','F6','G6','A6'];\n\n    getClefHTML() {\n        return `<span class=\"treble-clef clef\">${\n            glyphs.clefTreble\n        }</span><span class=\"bass-clef clef\">${\n            glyphs.clefBass\n        }</span>`;\n    }\n\n    getTimeSigHTML(numerator, denominator, eventId) {\n        return `<span class=\"timesig\" data-event=\"${ eventId }\" data-part=\"upper\">\n            <sup>${ glyphs['timeSig' + numerator] }</sup>\n            <sub>${ glyphs['timeSig' + denominator] }</sub>\n        </span>\n        <span class=\"timesig\" data-event=\"${ eventId }\" data-part=\"lower\">\n            <sup>${ glyphs['timeSig' + numerator] }</sup>\n            <sub>${ glyphs['timeSig' + denominator] }</sub>\n        </span>`;\n    }\n\n    // TODO: there should be four parts available, soprano alto, tenor bass?\n    getPart(pitch) {\n        // A part is an object of properties assigned to a symbol.\n        // Render anything below Bb3 on the lower part.\n        return /[012]$|[AC-G][b#♭♯𝄫𝄪]*3$/.test(pitch) ? {\n            part:        'lower',\n            centerPitch: 'D3',\n            centerRow:   'stave-lower'\n        } : {\n            centerPitch: 'B4',\n            centerRow:   'stave-upper'\n        } ;\n    }\n}\n", "\nimport * as glyphs     from \"./glyphs.js\";\nimport Stave           from './stave/stave.js';\nimport DrumStave       from './stave/drum.js';\nimport PercussionStave from './stave/percussion.js';\nimport PianoStave      from './stave/piano.js';\n\nconst assign = Object.assign;\n\nclass TrebleUpStave extends Stave {\n    type = 'treble-up';\n    clef = glyphs.clefTrebleUp;\n    rows = ['C4','D4','E4','F4','G4','A4','B4','C5','D5','E5','F5','G5','A5','B5','C6','D6','E6','F6','G6','A6','B6','C7','D7','E7','F7','G7','A7'];\n}\n\nclass TrebleStave extends Stave {\n    type = 'treble';\n    clef = glyphs.clefTreble;\n    rows = ['C3','D3','E3','F3','G3','A3','B3','C4','D4','E4','F4','G4','A4','B4','C5','D5','E5','F5','G5','A5','B5','C6','D6','E6','F6','G6','A6'];\n}\n\nclass TrebleDownStave extends Stave {\n    type = 'treble-down';\n    clef = glyphs.clefTrebleDown;\n    rows = ['C2','D2','E2','F2','G2','A2','B2','C3','D3','E3','F3','G3','A3','B3','C4','D4','E4','F4','G4','A4','B4','C5','D5','E5','F5','G5','A5'];\n}\n\nclass AltoStave extends Stave {\n    type = 'alto';\n    clef = glyphs.clefAlto;\n    rows = ['D2','E2','F2','G2','A2','B2','C3','D3','E3','F3','G3','A3','B3','C4','D4','E4','F4','G4','A4','B4','C5','D5','E5','F5','G5','A5','B5'];\n}\n\nclass BassStave extends Stave {\n    type = 'bass';\n    clef = glyphs.clefBass;\n    rows = ['E1','F1','G1','A1','B1','C2','D2','E2','F2','G2','A2','B2','C3','D3','E3','F3','G3','A3','B3','C4','D4','E4','F4','G4','A4','B4','C5'];\n}\n\n\n// Register staves by type. Types are the same string used by the clef attribute,\n// as in <scribe-music clef=\"treble\">. Create a stave by type with:\n// Stave.create(type);\n\nStave['treble']      = TrebleStave;\nStave['treble-up']   = TrebleUpStave;\nStave['treble-down'] = TrebleDownStave;\nStave['alto']        = AltoStave;\nStave['bass']        = BassStave;\nStave['piano']       = PianoStave;\nStave['drum']        = DrumStave;\nStave['percussion']  = PercussionStave;\n\n\n/**\nStave.create(type)\nCreate a stave object by type.\n**/\nStave.create = (type) => new Stave[type]();\n\nexport default Stave;\n", "\nimport mod from 'fn/mod.js';\n\n/**\nfunction quantise(grid, amount, beat)\n\nA quantise `grid` is an array of positive 64-bit beat numbers in ascending order.\nThere is no implicit beat 0, it should be included in the grid if desired. The\nlast number in the array is the grid's duration, not a quantisation beat. The\ngrid is looped, both forwards and backwards in time, at this duration.\n\nQuantisation `amount` scales the amount of quantisation applied to `beat`.\n**/\n\nexport default function quantise(grid, amount, beat) {\n    const length    = grid.length;\n    const duration  = grid[length - 1];\n    const remainder = mod(duration, beat);\n\n    // Scan forward until we find a quantisation entry greater than remainder\n    let n = -1;\n    while (remainder > grid[++n]);\n\n    // Calculate distance from previous entry\n    const fromgap = remainder - (n === 0 ?\n        grid[length - 2] - duration :\n        grid[n - 1]);\n\n    // Calculate distance form next entry\n    const togap = remainder - (n === length - 1 ?\n        grid[0] + duration :\n        grid[n]);\n\n    // Apply scaled quantisation to nearest entry\n    return beat - amount * (-togap < fromgap ? togap : fromgap);\n}\n", "import nothing from 'fn/nothing.js';\n\nconst barDivisions = {\n    // 2/2\n    '2,2': [2],\n    // 3/2\n    '3,2': [2,4],\n    // 2/4\n    '2,1': [1],\n    // 3/4\n    '3,1': [1,2],\n    // 4/4\n    '4,1': [2],\n    // 6/8\n    '6,0.5': [1.5],\n    // 12/8\n    '12,0.5': [1.5,3,4.5]\n};\n\n/**\ngetBarDivisions(meter)\nGets bar divisions from `meter` event.\n**/\n\nexport function getBarDivisions(meter) {\n    return barDivisions[meter.slice(2).join(',')] || nothing;\n}\n\n/**\ngetDivision(divisions, b1, b2)\nGets first bar division from `divisions` where `b1` is before and `b2` after or\non it.\n**/\n\nexport function getDivision(divisions, b1, b2) {\n    let n = -1;\n    while (divisions[++n] && divisions[n] <= b1);\n    // If divisions[n] is undefined, comparison evaluates to false, which is\n    // what we want\n    return b2 > divisions[n] ?\n        divisions[n] :\n        undefined ;\n}\n\nexport function getLastDivision(divisions, b1, b2) {\n    let n = divisions.length;\n    while (divisions[--n] && divisions[n] >= b2);\n\n    // If divisions[n] is undefined, comparison evaluates to false, which is\n    // what we want\n    return b1 < divisions[n] ?\n        divisions[n] :\n        undefined ;\n}\n", "export default {\n    spellChordRootCFlatAsB: true,\n    spellChordRootESharpAsF: true\n}\n", "\n//import by       from 'fn/by.js';\nimport get      from 'fn/get.js';\nimport overload from 'fn/overload.js';\nimport { toNoteName, toNoteNumber, toRootName, toRootNumber } from 'midi/note.js';\nimport toKeys from './sequence/to-keys.js';\nimport eventsAtBeat from './sequence/events-at-beat.js';\nimport { keysAtBeats, keyFromBeatKeys } from './sequence/key-at-beat.js';\nimport { transposeChord } from './event/chord.js';\nimport { transposeScale } from './scale.js';\nimport Stave from './stave.js';\nimport { toKeyScale, toKeyNumber, cScale } from './keys.js';\nimport { mod12, byGreater } from './maths.js';\nimport quantise from './quantise.js';\nimport { rflat, rsharp, rdoubleflat, rdoublesharp } from './regexp.js';\nimport { getBarDivisions, getDivision, getLastDivision } from './bar.js';\nimport config from './config.js';\n\nconst assign = Object.assign;\nconst { abs, ceil, floor } = Math;\n\nconst fathercharles = [\n    // Father Charles Goes Down And Ends Battle,\n    'F♯', 'C♯', 'G♯', 'D♯', 'A♯', 'E♯', 'B♯',\n    // Battle Ends And Down Goes Charles' Father\n    'B♭', 'E♭', 'A♭', 'D♭', 'G♭', 'C♭', 'F♭'\n];\n\n/* When dealing with rounding errors we only really need beat grid-level\n   precision, our display grid has 24 slots so slot beat ± 1/48 is plenty */\nconst beatPrecision = 1/48;\n\n/* There are 24 slots in our display grid which allows for even spacing of\n   symbols down to 32nd-note triplet level, or twelve things per beat, as well\n   as 32nd-note level, or 8 things per beat. So some slots, like 1/24, go unused\n   (although they are used by accidentals, which are placed in slots preceding\n   note heads). */\nconst quantiseBeats = [0, 2/24, 3/24, 4/24, 6/24, 8/24, 9/24, 10/24, 12/24, 14/24, 15/24, 16/24, 18/24, 20/24, 21/24, 22/24, 1];\n\n/* Allowable rest durations. Do we really want to allow double-dotted rests? */\nconst restDurations = [\n         1/12,\n    1/8, 1/6,  6/32, // 7/32,\n    1/4, 1/3,  6/16, // 7/16,\n    1/2, 2/3,  6/8,  // 7/8,\n    1,   4/3,  6/4,  // 7/4,\n    2,   8/3,  3,    // 7/2\n    4,         6,\n    8\n];\n\nfunction round(d, n) {\n    return Math.round(n / d) * d;\n}\n\nfunction byFatherCharlesPitch(a, b) {\n    const ai = fathercharles.indexOf(a.pitch);\n    const bi = fathercharles.indexOf(b.pitch);\n    return ai > bi ? 1 : ai < bi ? -1 : 0;\n}\n\nfunction getStemDirection(centerPitch, head) {\n    return head && head.stemDirection || (\n        toNoteNumber(centerPitch) < toNoteNumber(head.pitch) ?\n            'down' :\n            'up');\n}\n\nfunction toDuration(event) {\n    return event[1] === 'lyric' ?\n        event[3] :\n        event[4];\n}\n\nfunction createBeam(symbols, stave, beam, n) {\n    const part = symbols[0].part;\n\n    // Not enough stems for a beam, give it a tail\n    if (beam.length === 1) {\n        const i = beam[0];\n\n        if (i >= n) throw new Error('Last beam index (' + beam[0] + ') cant be greater than n (' + n + ')');\n\n        const head = symbols[i];\n\n        // If head starts a tie insert the tie now, in front of the head\n        if (head.tie === 'begin' || head.tie === 'middle') {\n            symbols.splice(i, 0, assign({}, head, {\n                type:   'tie',\n                beat:   head.beat,\n                updown: head.stemDirection === 'up' ? 'down' : 'up',\n                event:  head.event\n            }));\n\n            // We inserted a symbol, advance n by 1\n            return 1;\n        }\n\n        // We didn't do anything\n        return 0;\n    }\n\n    // Render stems and beam\n    const stemDirection = symbols[beam[0]] && symbols[beam[0]].stemDirection ?\n        symbols[beam[0]].stemDirection :\n        (beam\n            .map((i) => stave.getRowDiff(stave.midLinePitch, symbols[i].pitch))\n            .reduce((t, u) => t + u, 0) / beam.length) < 0 ?\n            'up' :\n            'down';\n\n    const heads  = [];\n    const buffer = [];\n\n    // Loop backwards through beam splicing in stem symbols before\n    // the heads, all with the winning stem direction\n    let b = -1;\n    let avgBeginLine = 0;\n    let avgEndLine = 0;\n    let i, head, line;\n    while (beam[++b] !== undefined) {\n        i = beam[b];\n        head = symbols[i];\n        line = stave.getRowDiff(stave.midLinePitch, head.pitch);\n\n        head.stemDirection = stemDirection;\n        head.tieDirection  = stemDirection === 'up' ? 'down' : 'up';\n\n        heads.push(head);\n\n        if (b < (beam.length - 1) / 2) {\n            avgBeginLine += line / Math.floor(beam.length / 2);\n        }\n\n        else if (b > (beam.length - 1) / 2) {\n            avgEndLine += line / Math.floor(beam.length / 2);\n        }\n\n        // TODO: group stems from notes of same part on same beat\n\n        if (head.tie === 'begin') {\n            buffer.push(assign({}, head, {\n                type:   'tie',\n                beat:   head.beat,\n                updown: head.tieDirection,\n                //updown: stemDirection === 'up' ? 'down' : 'up',\n                event:  head.event\n            }));\n        }\n    }\n\n    // Calculate where to put beam exactly\n    let begin    = heads[0];\n    let end      = heads[heads.length - 1];\n    let endRange = stave.getRowDiff(begin.pitch, end.pitch);\n    let avgRange = avgEndLine - avgBeginLine;\n    let range = abs(avgRange) > abs(0.75 * endRange) ?\n        0.75 * endRange :\n        avgRange;\n\n    heads.forEach((head, i) => {\n        head.stemHeight = stemDirection === 'down' ?\n            1 + 0.125 * (-range * i / (heads.length - 1) + stave.getRowDiff(begin.pitch, head.pitch)) :\n            1 + 0.125 * (range * i  / (heads.length - 1) - stave.getRowDiff(begin.pitch, head.pitch)) ;\n    });\n\n    // Update heads with info about the beam\n    const headEvents = heads.map(get('event'));\n    heads.forEach((head) => head.beam = headEvents);\n\n    // Put the beam in front of the first head (??)\n    symbols.splice(i, 0, {\n        type:      'beam',\n        beat:      begin.beat,\n        pitch:     begin.pitch,\n        part:      begin.part,\n        duration:  end.beat - begin.beat,\n        range:     range,\n        direction: stemDirection,\n        notes:     heads,\n        events:    begin.beam\n    });\n\n    symbols.splice(i, 0, ...buffer);\n\n    // We just spliced a bunch of symbols in before index n\n    return 1 + buffer.length;\n}\n\nfunction createRest(durations, divisions, endbeat, part, tobeat, beat) {\n    // [beat, 'rest', pitch (currently unused), duration]\n    let duration = tobeat - beat;\n\n    // If the beat and tobeat don't both fall on start, end or a division...\n    if (!(beat === 0 || divisions.includes(beat)) || !(tobeat === endbeat || divisions.includes(tobeat))) {\n        // Find bar division that rest crosses\n        let division = getDivision(divisions, beat, beat + duration);\n        // Truncate rest up to division\n        if (division) duration = division - beat;\n    }\n\n    // Clamp rest duration to permissable rest symbol durations\n    let r = restDurations.length;\n    // Employ beatPrecision to work around rounding errors\n    while (restDurations[--r] + beatPrecision > duration);\n    duration = restDurations[r + 1];\n\n    // Where beat does not fall on a 2^n division clamp it to next\n    // smallest. This is what stops [0, note, 0.5], [1.5, note, 0.5]\n    // from rendering with a single quarter rest between them, but\n    // rather two eighth rests.\n    let p = 8;\n    while ((p *= 0.5) && beat % p);\n    // TODO: Something not quite right about this logic\n    if (p < duration) duration = p;\n\n    // Create rest symbol\n    return {\n        beat,\n        type: 'rest',\n        pitch: '',\n        part,\n        duration\n    };\n}\n\nfunction closeTuplet(stave, tuplet) {\n    const { beat, duration, number, heads } = tuplet;\n\n    // Decide on tuplet pitch, effectively vertical row position\n    const centreBeat = beat + 0.5 * duration;\n\n    // Encourage lowest pitch to be 1 octave below top line, ensuring\n    // triplet (with appropriate styling) always sits above the top line\n    const lowestPitchNumber = toNoteNumber(stave.maxLinePitch) - 12;\n\n    let h = heads.length;\n    let head, centreNumber;\n\n    // Scan backwards through heads until last head before centre beat\n    while ((head = heads[--h]) && head.beat > centreBeat);\n    ++h;\n\n    // Scan backwards through heads that cross centre beat, get highest pitch\n    while ((head = heads[--h]) && head.beat + head.duration > centreBeat) {\n        const number = toNoteNumber(head.pitch);\n        if (!centreNumber || number > centreNumber) centreNumber = number;\n    }\n\n    // Scan forwards from first head finding highest pitch beginning head\n    let firstNumber = lowestPitchNumber;\n    h = -1;\n    while ((head = heads[++h]) && head.beat < beatPrecision) {\n        const number = toNoteNumber(head.pitch);\n        if (!firstNumber || number > firstNumber) firstNumber = number;\n    }\n\n    // Scan backwards from last head finding highest pitch ending head\n    let lastNumber = lowestPitchNumber;\n    h = heads.length;\n    while ((head = heads[--h]) && head.beat > beat + duration - (duration / number) - beatPrecision) {\n        const pitch = toNoteNumber(head.pitch);\n        if (!lastNumber || pitch > lastNumber) lastNumber = pitch;\n    }\n\n    const avgNumber   = Math.ceil((firstNumber + lastNumber) / 2);\n    const avgPitch    = toNoteName(avgNumber);\n    if (avgNumber > centreNumber) centreNumber = avgNumber;\n\n    tuplet.pitch = toNoteName(centreNumber);\n    tuplet.angle = -3 * Math.sqrt(lastNumber - firstNumber);\n    tuplet.down  = tuplet.heads.every(isStemDown);\n}\n\nfunction isStemDown(symbol) {\n    return symbol.stemDirection === 'down';\n}\n\nfunction createSymbols(symbols, bar) {\n    // All events in symbols have the same part\n    const part  = symbols[0] && symbols[0].part;\n    const stave = bar.stave;\n\n    // Populate accidentals with key signature sharps and flats\n    const accidentals = bar.key.reduce((accidentals, n, i) => {\n        const acci = n - cScale[i];\n        if (acci !== 0) {\n            const name = toRootName(cScale[i]);\n            let n = 10;\n            while (n--) accidentals[name + n] = acci;\n        }\n        return accidentals;\n    }, {});\n\n    const divisions = getBarDivisions(bar.meter);\n\n    let beat = 0;\n    let n = -1;\n    let head;\n    let beam;\n    let tuplet;\n\n    while (head = symbols[++n]) {\n        // We are only interested in notes\n        if (head.type !== 'note') continue;\n\n        // Insert rest if head beat is greater than beat\n        if (head.beat > beat) {\n            // Create rest symbol\n            const rest = createRest(restDurations, divisions, bar.duration, part, head.beat, beat);\n            symbols.splice(n, 0, rest);\n\n            // Is it a triplet rest?\n            if (rest.duration.toFixed(2) === '0.67'\n                || rest.duration.toFixed(2) === '0.33') {\n\n                tuplet = {\n                    beat: rest.beat,\n                    type: 'tuplet',\n                    number: 3,\n                    duration: 3 * rest.duration,\n                    heads: [],\n                    part\n                };\n\n                symbols.splice(++n, 0, tuplet);\n            }\n\n            // Update beat to end of rest\n            beat += rest.duration;\n            continue;\n        }\n\n        // Are we in tuplet state\n        if (tuplet) {\n            // If this head is within tuplet duration add it to tuplet heads\n            if (head.beat < tuplet.beat + tuplet.duration) {\n                tuplet.heads.push(head);\n            }\n            // Otherwise close the tuplet\n            else {\n                // TODO: decide on stem direction for all tuplet notes\n                closeTuplet(stave, tuplet);\n\n                // End tuplet state\n                tuplet = undefined;\n            }\n        }\n\n        // Update beat\n        if (head.beat + head.duration > beat) beat = head.beat + head.duration;\n\n        // Accidental\n        // Determine accidental\n        const acci = rsharp.test(head.pitch) ? 1 :\n            rflat.test(head.pitch) ? -1 :\n                undefined;\n\n        // Line name is note name + octave (no # or b)\n        const line = head.pitch[0] + head.pitch.slice(-1);\n\n        if (\n            // If head is not a tied head from a previous bar - they\n            // don't require accidentals,\n            !(head.beat === 0 && head.tie && head.tie !== 'begin')\n            // and if it has changed from the bars current accidentals\n            && acci !== accidentals[line]\n        ) {\n            accidentals[line] = acci;\n            symbols.splice(n++, 0, assign({}, head, {\n                type: 'acci',\n                value: acci || 0\n            }));\n        }\n\n        // Up ledger lines\n        let ledgerrows = stave.getRowDiff(stave.maxLinePitch, head.pitch) - 1;\n\n        if (ledgerrows > 0) {\n            symbols.splice(n++, 0, assign({}, head, {\n                type: 'upledger',\n                rows: ledgerrows\n            }));\n        }\n\n        // Down ledger lines\n        else {\n            ledgerrows = stave.getRowDiff(head.pitch, stave.minLinePitch) - 1;\n            if (ledgerrows > 0) {\n                symbols.splice(n++, 0, assign({}, head, {\n                    type: 'downledger',\n                    rows: ledgerrows\n                }));\n            }\n        }\n\n        // Beam\n        if (beam && beam.length) {\n            // If head is a quarter note or longer\n            if (head.duration >= 1\n                // or head is a triplet quarter note\n                || head.duration.toFixed(2) === '0.67'\n                // or head starts at a division\n                || bar.divisions.includes(head.beat)\n                // or head starts after a new division\n                || getDivision(bar.divisions, symbols[beam[beam.length - 1]].beat, head.beat)\n            ) {\n                // Close the current beam\n                n += createBeam(symbols, bar.stave, beam, n);\n                beam = undefined;\n            }\n        }\n\n        // Stem and tieheads. We must wait for stems to be decided before rendering\n        // tieheads as their up/down direction is dependent.\n        if (head.duration < 4) {\n            // Is this head less than 1 beat, and not 1 triplet beat, long?\n            // Wait for it to be beamed.\n            if (head.duration < 1 && head.duration.toFixed(2) !== '0.67') {\n                if (beam) {\n                    // Keep index of head\n                    beam.push(n);\n                }\n                else {\n                    // Create new beam\n                    beam = [n];\n                }\n            }\n            else {\n                if (head.tie === 'begin' || head.tie === 'middle') {\n                    let stemDirection = getStemDirection(stave.centerPitch, head);\n                    symbols.splice(n++, 0, assign({}, head, {\n                        type:   'tie',\n                        beat:   head.beat,\n                        updown: stemDirection === 'up' ? 'down' : 'up',\n                        event:  head.event\n                    }));\n                }\n            }\n        }\n        else {\n            if (head.tie === 'begin' || head.tie === 'middle') {\n                let stemDirection = getStemDirection(stave.centerPitch, head);\n                symbols.splice(n++, 0, assign({}, head, {\n                    type:   'tie',\n                    beat:   head.beat,\n                    updown: stemDirection === 'up' ? 'down' : 'up',\n                    event:  head.event\n                }));\n            }\n        }\n    }\n\n    // Close the current beam\n    if (beam && beam.length) {\n        n += createBeam(symbols, bar.stave, beam, n);\n        beam = undefined;\n    }\n\n    // Are we in tuplet state\n    if (tuplet) {\n        // TODO: decide on stem direction for all tuplet notes\n        closeTuplet(stave, tuplet);\n\n        // End tuplet state\n        tuplet = undefined;\n    }\n\n// If last event has not taken us to the end of the bar, insert rests\n    while (beat < bar.duration) {\n        // Create rest symbol\n        const rest = createRest(restDurations, divisions, bar.duration, part, bar.duration, beat);\n        symbols.splice(n++, 0, rest);\n        // Update beat to end of rest\n        beat += rest.duration;\n    }\n\n    return symbols;\n}\n\nfunction createBarSymbols(bar) {\n    const state = {\n        clef: { name: 'treble', stemDirectionNote: 'B4' }\n    };\n\n    // Split symbols by part\n    const parts = Object.values(\n        bar.symbols.reduce((parts, symbol) => {\n            if (!parts[symbol.part]) parts[symbol.part] = [];\n            parts[symbol.part].push(symbol);\n            return parts;\n        }, {})\n    );\n\n    // If there are no parts we must nonetheless render a rest\n    // TODO: render rest for each part, even tho there are no parts here?\n    if (parts.length === 0) {\n        parts[0] = [];\n    }\n\n    // Fill each parts with accidentals, rests, beams, tieheads\n    parts.forEach((part) => createSymbols(part, bar, state.clef.stemDirectionNote));\n\n    // Empty out bar.symbols and push in symbols from parts\n    bar.symbols.length = 0;\n    parts.reduce((symbols, part) => {\n        symbols.push.apply(symbols, part);\n        return symbols;\n    }, bar.symbols);\n\n    return bar;\n}\n\nfunction createBar(beat, stave, key, meter, tieheads) {\n    const bar = {\n        beat: beat,\n        duration: meter[2],\n        divisions: getBarDivisions(meter),\n        symbols: [],\n        stave: stave,\n        key: key,\n        meter: meter\n    };\n\n    // If meter change is on this beat push a timesig into symbols\n    /*if (meter[0] === beat) {\n        bar.symbols.push({\n            type:        'timesig',\n            beat:        0,\n            numerator:   meter[2] / meter[3],\n            denominator: 4 / meter[3],\n            event:       meter,\n            stave\n        });\n    }*/\n\n    // Push tied heads into symbols\n    let m = -1;\n    let head, event;\n    while ((head = tieheads[++m])\n        && (event = head.event)\n        && event[0] < bar.beat + meter[2]\n    ) {\n        const duration = event[0] + event[4] - bar.beat;\n\n        if (duration > bar.duration) {\n            // Event ends after this bar\n            bar.symbols.push(assign({}, head, {\n                beat: 0,\n                duration: bar.duration,\n                tie: 'middle',\n                stave\n            }, stave.getPart(head.pitch)));\n        }\n        else {\n            // Event ends in this bar\n            bar.symbols.push(assign({}, head, {\n                beat: 0,\n                duration,\n                tie: 'end',\n                stave\n            }, stave.getPart(head.pitch)));\n\n            // Remove event from tieheads, as it has ended\n            tieheads.splice(m, 1);\n            --m;\n        }\n    }\n\n    return bar;\n}\n\nconst eventNameLogs = {};\nconst accidentals = {\n    '-2': '𝄫',\n    '-1': '♭',\n    '0': '',\n    '1': '♯',\n    '2': '𝄪'\n};\n\nfunction createBars(events, beatkeys, stave, meter, transpose, config) {\n    // A buffer of head symbols to be tied to symbols in the next bar\n    const tieheads = [];\n    // An array of bar objects\n    const bars = [];\n\n    const events0 = eventsAtBeat(events, 0);\n    meter = events0.find((event) => event[1] === 'meter') || meter;\n\n    // First bar. Where meter is at beat 0, also inserts a time signature.\n    let bar = createBar(0, stave, cScale, meter, tieheads);\n    bars.push(bar);\n\n    // Add clef in front of keysig\n    bar.symbols.unshift({\n        type: 'clef',\n        beat: 0,\n        stave\n    });\n\n    let n = -1;\n    let event;\n    while (event = events[++n]) {\n        if (event[1] === 'key') {\n            if (event[0] !== bar.beat) {\n                new TypeError('Scribe: \"key\" event must occur at bar start – event [' + event.join(', ') + '] is on beat ' + (event[0] - bar.beat) + ' of bar');\n            }\n\n            // Get the key scale from keyname. This scale is not a true\n            // 'scale' in an internal-data sense as it may not begin with a 0, but it\n            // maps naturals to accidentals when compared against the C scale. Remember\n            // keynumber is on a continuous scale of fourths, so multiply by 7 semitones\n            // to get chromatic number relative to C.\n            const keynumber = toKeyNumber(event[2]);\n            const keyscale  = toKeyScale(keynumber * 7 + transpose);\n\n            // Update the bar's key\n            bar.key = keyscale;\n\n            // Add key signature, TODO! Must go in front of any time signature\n            bar.symbols.push.apply(bar.symbols, keyscale\n                .map((n, i) => (n - cScale[i] && {\n                    // No beat for key signature accidentals\n                    type: 'acci',\n                    pitch: toRootName(cScale[i]) + accidentals[n - cScale[i]],\n                    value: n - cScale[i]\n                }))\n                .filter((o) => !!o)\n                .sort(byFatherCharlesPitch)\n            );\n\n            continue;\n        }\n\n        if (event[1] === 'meter') {\n            if (event[0] !== bar.beat) {\n                new TypeError('Scribe: \"meter\" event must occur at bar start – event [' + event.join(', ') + '] is on beat ' + (event[0] - bar.beat) + ' of bar');\n            }\n\n            if (event[0] === bar.beat) {\n                bar.symbols.push({\n                    type:        'timesig',\n                    beat:        0,\n                    numerator:   event[2] / event[3],\n                    denominator: 4 / event[3],\n                    event:       event,\n                    stave\n                });\n            }\n\n            // TODO! INSERT TIME SIG.\n            continue;\n        }\n\n        if (event[1] !== 'note' && event[1] !== 'chord' && event[1] !== 'lyric') {\n            if (window.DEBUG && !eventNameLogs[event[1]]) {\n                eventNameLogs[event[1]] = true;\n                console.log('Scribe \"' + event[1] + '\" events ignored');\n            }\n            continue;\n        }\n\n        // Event is in a future bar\n        while (event[0] >= bar.beat + bar.duration) {\n            // Pick up meter for next bar\n            if (event[0] === bar.beat + bar.duration) {\n                let m = n - 1;\n                while (events[++m] && events[m][0] === event[0]) {\n                    if (events[m][1] === 'meter') {\n                        meter = events[m];\n                        // TODO: We may want to add an advisory timesig to the\n                        // end of the current bar, to be displayed when this bar\n                        // is at the end of a line\n                    }\n                }\n            }\n\n            // Create the next bar. Where meter is at the new bar beat, also\n            // creates a time signature.\n            bar = createBar(bar.beat + bar.duration, stave, bar.key, meter, tieheads);\n            bars.push(bar);\n        }\n\n        const key       = beatkeys && keyFromBeatKeys(beatkeys, event[0]);\n        const startBeat = quantise(quantiseBeats, 1, event[0] - bar.beat);\n        const stopBeat  = quantise(quantiseBeats, 1, event[0] + toDuration(event) - bar.beat);\n\n        if (event[1] === 'note') {\n            const pitch = stave.getSpelling(key, event, transpose);\n            const part  = stave.getPart(pitch);\n\n            let beat  = startBeat;\n            let division, tie;\n\n            // If note does not start on a meter multiple and crosses a\n            // bar division...\n            if (startBeat !== 0\n                && startBeat % bar.meter[3] !== 0\n                && (division = getDivision(bar.divisions, beat, stopBeat))\n            ) {\n                const duration = division - beat;\n\n                // Stick it in symbols\n                bar.symbols.push(assign({\n                    type: 'note',\n                    beat,\n                    duration,\n                    dynamic: event[3],\n                    pitch,\n                    transpose,\n                    event,\n                    stave,\n                    tie: tie ? 'middle' : 'begin'\n                }, part));\n\n                // Update state of note\n                beat += duration;\n                tie = true;\n            }\n\n            // If rest of note does not stop on a meter multiple and crosses a\n            // bar division...\n            if (stopBeat < bar.duration\n                && stopBeat % bar.meter[3] !== 0\n                && (division = getLastDivision(bar.divisions, beat, stopBeat))\n            ) {\n                const duration = division - beat;\n\n                // Stick it in symbols\n                bar.symbols.push(assign({\n                    type: 'note',\n                    beat,\n                    duration,\n                    dynamic: event[3],\n                    pitch,\n                    transpose,\n                    event,\n                    stave,\n                    tie: tie ? 'middle' : 'begin'\n                }, part));\n\n                // Update state of note\n                beat += duration;\n                tie = true;\n            }\n\n            // Does note cross into next bar?\n            const duration = stopBeat > bar.duration ?\n                bar.duration - beat :\n                stopBeat - beat ;\n\n            const head = assign({\n                type: 'note',\n                beat,\n                duration,\n                dynamic: event[3],\n                pitch,\n                transpose,\n                event,\n                stave\n            }, part);\n\n            // Stick it in symbols\n            bar.symbols.push(head);\n\n            // If it's longer than the bar stick it in tieheads buffer\n            if (stopBeat > bar.duration) {\n                head.tie = tie ? 'middle' : 'begin';\n                tieheads.push(head);\n            }\n        }\n        else if (event[1] === 'chord') {\n            // Does chord cross into next bar? The symbol should not\n            const duration = stopBeat > bar.duration ?\n                bar.duration - startBeat :\n                stopBeat - startBeat ;\n\n            let root = stave.getSpelling(key, event, transpose);\n            if (root === 'C♭' && config.spellChordRootCFlatAsB) root = 'B';\n            if (root === 'E♯' && config.spellChordRootESharpAsF) root = 'F';\n\n            bar.symbols.push({\n                type: 'chord',\n                beat: startBeat,\n                duration,\n                transpose,\n                root,\n                extension: event[3],\n                event,\n                stave\n            });\n        }\n        else {\n            // Does chord cross into next bar? The symbol should not\n            const duration = stopBeat > bar.duration ?\n                bar.duration - startBeat :\n                stopBeat - startBeat ;\n\n            bar.symbols.push({\n                type: 'lyric',\n                beat: startBeat,\n                duration,\n                value: event[2],\n                event,\n                stave\n            });\n        }\n    }\n\n    // There are still tied notes to symbolise\n    while (tieheads.length) {\n        // Create the next bar\n        bar = createBar(bar.beat + bar.duration, stave, bar.key, meter, tieheads);\n        bars.push(bar);\n    }\n\n    return bars;\n}\n\nfunction isInitialMeterEvent(event) {\n    return event[0] <= 0 && event[1] === 'meter';\n}\n\nfunction isInitialKeyEvent(event) {\n    return event[0] <= 0 && event[1] === 'key';\n}\n\nconst priorities = {\n    // The higher the priority, the earlier the event is ordered when\n    // sorting events\n    key: 2,\n    meter: 1,\n    default: 0\n};\n\nfunction getPriority(event) {\n    return priorities[event[1]] || priorities.default;\n}\n\nfunction byRenderOrder(b, a) {\n        // a is before b\n    return a[0] < b[0] ? 1 :\n        // a is after b\n        a[0] > b[0] ? -1 :\n        // a and b are at the same time, prioritise by event type\n        getPriority(a) - getPriority(b) ;\n}\n\nexport default function eventsToSymbols(events, clef, keyname, meter, transpose) {\n    // TODO, WARNING! This mutates events! We probably oughta clone events first.\n\n    // If events contains no initial meter and meter is set, insert a meter event\n    const meterEvent = events.find(isInitialMeterEvent);\n    if (!meterEvent && meter) events.unshift([0, 'meter', meter[2], meter[3]]);\n\n    // If events contains no initial key and keyname is set, insert a key event\n    const keyEvent = events.find(isInitialKeyEvent);\n    if (!keyEvent && keyname) events.unshift([0, 'key', keyname]);\n\n    // Sort into the proper order for rendering\n    events.sort(byRenderOrder);\n\n    // Get the stave controller\n    const stave = Stave.create(clef || 'treble');\n\n    // Create a map of keys at beats. Doing this here is an optimisation so we\n    // don't end up running the keys matrix calculations on every note, which\n    // causes measurable delay.\n    // TEMP: don't get keys for unpitched\n    const beatkeys = stave.pitched ?\n        keysAtBeats(events) :\n        null ;\n\n    // TODO: this is a two-pass symbol generation, I wonder if we can get\n    // it down to one?\n    return createBars(events, beatkeys, stave, meter, transpose, config)\n        .map(createBarSymbols);\n}\n", "/**\ncacheByKey(fn)\nReturns a function that caches the output values of `fn(input)` against input\nvalues, which are registered as keys in an object, such that for each input\nkey `fn` is only ever called once.\n*/\n\nlet warned;\n\nexport default function cacheByKey(fn) {\n    var map = {};\n\n    return function cache(input) {\n        /*if (window.DEBUG && !warned && input === undefined) {\n            warned = true;\n            console.warn('cacheByKey() called with undefined. Not illegal, but potentially bad.');\n        }\n\n        if (window.DEBUG && typeof input !== 'string' && typeof input !== 'number') {\n            console.warn('cacheByKey() called with non-primitive input, coerced to string \"' + input + '\"');\n        }*/\n\n        if (window.DEBUG && arguments.length > 1) {\n            console.warn('cacheByKey() called with ' + arguments.length + ' arguments. Accepts exactly 1.');\n        }\n\n        return input in map ?\n            map[input] :\n            map[input] = fn(input) ;\n    };\n}\n", "/**\nchoose(map)\nReturns a function that takes its first argument as a key and uses it\nto select a function in `map` which is invoked with the remaining arguments.\n\nWhere `map` has a function `default`, that function is run when a key\nis not found, otherwise unfound keys will error.\n\n```\nvar fn = choose({\n    'fish':  function fn1(a, b) {...},\n    'chips': function fn2(a, b) {...}\n});\n\nfn('fish',  a, b);      // Calls fn1(a, b)\nfn('chips', a, b);      // Calls fn2(a, b)\nfn('mayonnaise', a, b); // Error\n```\n\nIt's worth pointing out that the `this` context is also applied to `fn1` and\n`fn2`, making `choose(map)` suitable for creating object methods.\n*/\n\nexport default function choose(map) {\n    return function choose(key, ...params) {\n        var fn = map[key] || map.default;\n        return fn && fn.apply(this, params) ;\n    };\n}\n", "\nvar mimetypes = {\n    xml:  'application/xml',\n    html: 'text/html',\n    svg:  'image/svg+xml'\n};\n\nexport default function parse(type, string) {\n    if (!string) { return; }\n\n    // Accept 'svg' or 'SVG' or 'image/svg+xml'\n    var mimetype = mimetypes[type.toLowerCase()] || type;\n    var xml;\n\n    // Cludged from jQuery source...\n    try {\n        xml = (new window.DOMParser()).parseFromString(string, mimetype);\n    }\n    catch (e) {\n        return;\n    }\n\n    if (!xml || xml.getElementsByTagName(\"parsererror\").length) {\n        throw new Error(\"Invalid \" + type.toUpperCase() + \": \" + string);\n    }\n\n    return xml;\n}\n\n/**\nparseHTML(string)\nReturns an HTML document parsed from `string`, or undefined.\n*/\n\nexport function parseHTML(string) {\n    return parse('html', string);\n}\n\n/**\nparseSVG(string)\nReturns an SVG document parsed from `string`, or undefined.\n*/\n\nexport function parseSVG(string) {\n    return parse('svg', string);\n}\n\n/**\nparseXML(string)\nReturns an XML document parsed from `string`, or undefined.\n*/\n\nexport function parseXML(string) {\n    return parse('xml', string);\n}\n", "import choose  from 'fn/choose.js';\nimport id      from 'fn/id.js';\n\nimport create  from './create.js';\nimport { parseHTML, parseSVG } from './parse.js';\n\nconst assign = Object.assign;\n\n/*\nconfig\n\n```{\n    headers:    fn(data),    // Must return an object with properties to add to the header\n    body:       fn(data),    // Must return an object to send as data\n    onresponse: function(response)\n}```\n*/\n\nexport const config = {\n    // Takes data, returns headers\n    headers: function(data) { return {}; },\n\n    // Takes data (can be FormData object or plain object), returns data\n    body: id,\n\n    // Takes response, returns response\n    /*onresponse: function(response) {\n        // If redirected, navigate the browser away from here. Can get\n        // annoying when receiving 404s, maybe not a good default...\n        if (response.redirected) {\n            window.location = response.url;\n            return;\n        }\n\n        return response;\n    }*/\n};\n\nconst createHeaders = choose({\n    'application/x-www-form-urlencoded': function(headers) {\n        return assign(headers, {\n            \"Content-Type\": 'application/x-www-form-urlencoded',\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        });\n    },\n\n    'application/json': function(headers) {\n        return assign(headers, {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        });\n    },\n\n    'multipart/form-data': function(headers) {\n        return assign(headers, {\n            \"Content-Type\": 'multipart/form-data',\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        });\n    },\n\n    'audio/wav': function(headers) {\n        return assign(headers, {\n            \"Content-Type\": 'audio/wav',\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        });\n    },\n\n    'image/png': function(headers) {\n        return assign(headers, {\n            \"Content-Type\": 'image/png',\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        });\n    },\n\n    'image/jpg': function(headers) {\n        return assign(headers, {\n            \"Content-Type\": 'image/jpg',\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        });\n    },\n\n    'image/jpeg': function(headers) {\n        return assign(headers, {\n            \"Content-Type\": 'image/jpeg',\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        });\n    },\n\n    'default': function(headers) {\n        return assign(headers, {\n            \"Content-Type\": 'application/x-www-form-urlencoded',\n            \"X-Requested-With\": \"XMLHttpRequest\"\n        });\n    }\n});\n\nconst createBody = choose({\n    'application/json': function(data) {\n        return data instanceof FormData ?\n            formDataToJSON(data) :\n            JSON.stringify(data);\n    },\n\n    'application/x-www-form-urlencoded': function(data) {\n        return data instanceof FormData ?\n            formDataToQuery(data) :\n            dataToQuery(data) ;\n    },\n\n    'multipart/form-data': function(data) {\n        return data instanceof FormData ?\n            data :\n            dataToFormData(data) ;\n    },\n\n    default: id\n});\n\nfunction formDataToJSON(formData) {\n    return JSON.stringify(\n        // formData.entries() is an iterator, not an array\n        Array\n        .from(formData.entries())\n        .reduce(function(output, entry) {\n            output[entry[0]] = entry[1];\n            return output;\n        }, {})\n    );\n}\n\nfunction formDataToQuery(data) {\n    return new URLSearchParams(data).toString();\n}\n\nfunction dataToQuery(data) {\n    return Object.keys(data).reduce((params, key) => {\n        params.append(key, data[key]);\n        return params;\n    }, new URLSearchParams());\n}\n\nfunction dataToFormData(data) {\n    throw new Error('TODO: dataToFormData(data)');\n}\n\nfunction urlFromData(url, data) {\n    // Form data\n    return data instanceof FormData ?\n        url + '?' + formDataToQuery(data) :\n        url + '?' + dataToQuery(data) ;\n}\n\nexport function createOptions(method, data, head, controller) {\n    const contentType =\n        typeof head === 'string' ? head :\n        head && head['Content-Type'] ||\n        'application/json' ;\n\n    const headers = createHeaders(contentType, assign(\n        config.headers && data ? config.headers(data) : {},\n        typeof head === 'string' ? {} : head\n    ));\n\n    const options = {\n        method:  method,\n        mode: \"cors\",\n        headers: headers,\n        credentials: 'same-origin',\n        signal: controller && controller.signal\n    };\n\n    if (method !== 'GET') {\n        options.body = createBody(contentType, config.body ? config.body(data) : data);\n    }\n\n    return options;\n}\n\nfunction respondBlob(response) {\n    return response.blob();\n}\n\nfunction respondJSON(response) {\n    return response.json().catch((e) => {\n        throw new Error('Cannot parse JSON ' + response.url + '. ' + e.message + '');\n    });\n}\n\nfunction respondForm(response) {\n    return response.formData();\n}\n\nfunction respondText(response) {\n    return response.text();\n}\n\nfunction respondDOM(response) {\n    return response.text().then((text) => (\n        // Is it a document?\n        /^\\s*<!DOCTYPE html>/.test(text) ?\n            parseHTML(text) :\n            create('fragment', text)\n    ));\n}\n\nfunction respondSVG(response) {\n    return response.text().then((text) => (\n        // Is it a document?\n        /^\\s*<\\?xml/.test(text) ?\n            parseSVG(text) :\n            // TODO: untested, don't know if this works on partial SVG\n            // fragments, I think probably not, I think we need to maybe\n            // make a <defs> instead. You have been warned.\n            (console.warn('Untested SVG fragment parsing in request.js!'),\n            create('fragment', text))\n    ));\n}\n\nconst responders = {\n    'text/plain':                        respondText,\n    'text/html':                         respondDOM,\n    'image/svg+xml':                     respondSVG,\n    'application/json':                  respondJSON,\n    'multipart/form-data':               respondForm,\n    'application/x-www-form-urlencoded': respondForm,\n    'audio':                             respondBlob,\n    'audio/wav':                         respondBlob,\n    'audio/m4a':                         respondBlob,\n    'application/zip':                   respondBlob\n};\n\nfunction respond(response) {\n    if (config.onresponse) {\n        response = config.onresponse(response);\n    }\n\n    if (!response.ok) {\n        throw new Error(response.statusText + '');\n    }\n\n    // Get mimetype from Content-Type, remembering to hoik off any\n    // parameters first\n    const contentType = response.headers.get('Content-Type');\n\n    if(!contentType) { return; }\n    const mimetype = contentType.replace(/\\;.*$/, '');\n\n    if (window.DEBUG && !responders[mimetype]) {\n        console.warn('request() has no built-in response parser for mimetype \"' + mimetype + '\"');\n    }\n\n    return responders[mimetype](response);\n}\n\n\n/**\nrequest(method, url, data, mimetype | headers)\n\nUses `fetch()` to send a request to `url`. Where `type` is `\"GET\"`, `data` is\nserialised and appended to the URL, otherwise it is sent as a request body.\nThe 4th parameter may be a content type string or a headers object (in which\ncase it must have a `'Content-Type'` property).\n**/\n\nexport default function request(method = 'GET', url, data = {}, contenttype = 'application/json') {\n    method = method.toUpperCase();\n\n    // If this is a GET and there is data, append data to the URL query string\n    if (method === 'GET' && data) {\n        url = urlFromData(url, data);\n    }\n\n    // param[4] is an optional abort controller\n    const options = createOptions(method, data, contenttype, arguments[4]);\n\n    return fetch(url, options).then(respond);\n}\n\n/**\nrequestGet(url)\nA shortcut for `request('get', url, null, 'application/json')`\n**/\n\nexport function requestGet(url) {\n    return request('GET', url);\n}\n\n/**\nrequestPatch(url, data)\nA shortcut for `request('patch', url, data, 'application/json')`\n**/\n\nexport function requestPatch(url, data) {\n    return request('PATCH', url, data, 'application/json');\n}\n\n/**\nrequestPost(url, data)\nA shortcut for `request('post', url, data, 'application/json')`\n**/\n\nexport function requestPost(url, data) {\n    return request('POST', url, data, 'application/json');\n}\n\n/**\nrequestDelete(url, data)\nA shortcut for `request('delete', url, data, 'application/json')`\n**/\n\nexport function requestDelete(url, data) {\n    return request('DELETE', url, data, 'application/json');\n}\n\n// Expose to console in DEBUG mode\nif (window.DEBUG) {\n\twindow.dom ? (window.dom.request = request) : (window.dom = { request });\n}\n", "/**\nmatches(selector, object)\n\nFor filtering and pattern matching. Returns true where all the properties\nof `selector` object are strictly equal to the same properties of `object`.\nNote that `object` may have more properties than `selector`.\n\n```\nconst vegetarian = menu.filter(matches({ vegetable: true }));\n```\n**/\n\nimport curry from './curry.js';\n\nexport function matches(object, item) {\n\tlet property;\n\tfor (property in object) {\n\t\tif (object[property] !== item[property]) { return false; }\n\t}\n\treturn true;\n}\n\nexport default curry(matches, true);\n", "//    abc_parse.js: parses a string representing ABC Music Notation into a usable internal structure.\n\nvar parseCommon = {};\n\nparseCommon.clone = function(source) {\n\tvar destination = {};\n\tfor (var property in source)\n\t\tif (source.hasOwnProperty(property))\n\t\t\tdestination[property] = source[property];\n\treturn destination;\n};\n\nparseCommon.cloneArray = function(source) {\n\tvar destination = [];\n\tfor (var i = 0; i < source.length; i++) {\n\t\tdestination.push(parseCommon.clone(source[i]));\n\t}\n\treturn destination;\n};\n\nparseCommon.cloneHashOfHash = function(source) {\n\tvar destination = {};\n\tfor (var property in source)\n\t\tif (source.hasOwnProperty(property))\n\t\t\tdestination[property] = parseCommon.clone(source[property]);\n\treturn destination;\n};\n\nparseCommon.cloneHashOfArrayOfHash = function(source) {\n\tvar destination = {};\n\tfor (var property in source)\n\t\tif (source.hasOwnProperty(property))\n\t\t\tdestination[property] = parseCommon.cloneArray(source[property]);\n\treturn destination;\n};\n\nparseCommon.strip = function(str) {\n\treturn str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n};\n\nparseCommon.startsWith = function(str, pattern) {\n\treturn str.indexOf(pattern) === 0;\n};\n\nparseCommon.endsWith = function(str, pattern) {\n\tvar d = str.length - pattern.length;\n\treturn d >= 0 && str.lastIndexOf(pattern) === d;\n};\n\nparseCommon.last = function(arr) {\n\tif (arr.length === 0)\n\t\treturn null;\n\treturn arr[arr.length-1];\n};\n\n\nexport default parseCommon;\n", "import parseCommon from './abc_common.js';\n\nvar parseDirective = {};\n\n(function() {\n\t\"use strict\";\n\tvar tokenizer;\n\tvar warn;\n\tvar multilineVars;\n\tvar tune;\n\tvar tuneBuilder;\n\tparseDirective.initialize = function(tokenizer_, warn_, multilineVars_, tune_, tuneBuilder_) {\n\t\ttokenizer = tokenizer_;\n\t\twarn = warn_;\n\t\tmultilineVars = multilineVars_;\n\t\ttune = tune_;\n\t\ttuneBuilder = tuneBuilder_;\n\t\tinitializeFonts();\n\t};\n\n\tfunction initializeFonts() {\n\t\tmultilineVars.annotationfont  = { face: \"Helvetica\", size: 12, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.gchordfont  = { face: \"Helvetica\", size: 12, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.historyfont  = { face: \"\\\"Times New Roman\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.infofont  = { face: \"\\\"Times New Roman\\\"\", size: 14, weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\tmultilineVars.measurefont  = { face: \"\\\"Times New Roman\\\"\", size: 14, weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\tmultilineVars.partsfont  = { face: \"\\\"Times New Roman\\\"\", size: 15, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.repeatfont  = { face: \"\\\"Times New Roman\\\"\", size: 13, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.textfont  = { face: \"\\\"Times New Roman\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.tripletfont = {face: \"Times\", size: 11, weight: \"normal\", style: \"italic\", decoration: \"none\"};\n\t\tmultilineVars.vocalfont  = { face: \"\\\"Times New Roman\\\"\", size: 13, weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\tmultilineVars.wordsfont  = { face: \"\\\"Times New Roman\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\n\t\t// These fonts are global for the entire tune.\n\t\ttune.formatting.composerfont  = { face: \"\\\"Times New Roman\\\"\", size: 14, weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\ttune.formatting.subtitlefont  = { face: \"\\\"Times New Roman\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.tempofont  = { face: \"\\\"Times New Roman\\\"\", size: 15, weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.titlefont  = { face: \"\\\"Times New Roman\\\"\", size: 20, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.footerfont  = { face: \"\\\"Times New Roman\\\"\", size: 12, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.headerfont  = { face: \"\\\"Times New Roman\\\"\", size: 12, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.voicefont  = { face: \"\\\"Times New Roman\\\"\", size: 13, weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.tablabelfont  = { face: \"\\\"Trebuchet MS\\\"\", size: 16, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.tabnumberfont = { face: \"\\\"Arial\\\"\", size: 11, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\ttune.formatting.tabgracefont = { face: \"\\\"Arial\\\"\", size: 8, weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\n\t\t// these are the default fonts for these element types. In the printer, these fonts might change as the tune progresses.\n\t\ttune.formatting.annotationfont  = multilineVars.annotationfont;\n\t\ttune.formatting.gchordfont  = multilineVars.gchordfont;\n\t\ttune.formatting.historyfont  = multilineVars.historyfont;\n\t\ttune.formatting.infofont  = multilineVars.infofont;\n\t\ttune.formatting.measurefont  = multilineVars.measurefont;\n\t\ttune.formatting.partsfont  = multilineVars.partsfont;\n\t\ttune.formatting.repeatfont  = multilineVars.repeatfont;\n\t\ttune.formatting.textfont  = multilineVars.textfont;\n\t\ttune.formatting.tripletfont  = multilineVars.tripletfont;\n\t\ttune.formatting.vocalfont  = multilineVars.vocalfont;\n\t\ttune.formatting.wordsfont  = multilineVars.wordsfont;\n\t}\n\n\tvar fontTypeCanHaveBox = { gchordfont: true, measurefont: true, partsfont: true, annotationfont: true, composerfont: true, historyfont: true, infofont: true, subtitlefont: true, textfont: true, titlefont: true, voicefont: true  };\n\n\tvar fontTranslation = function(fontFace) {\n\t\t// This translates Postscript fonts for a web alternative.\n\t\t// Note that the postscript fonts contain italic and bold info in them, so what is returned is a hash.\n\n\t\tswitch (fontFace) {\n\t\t\tcase \"Arial-Italic\":\n\t\t\t\treturn { face: \"Arial\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Arial-Bold\":\n\t\t\t\treturn { face: \"Arial\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Bookman-Demi\":\n\t\t\t\treturn { face: \"Bookman,serif\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Bookman-DemiItalic\":\n\t\t\t\treturn { face: \"Bookman,serif\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Bookman-Light\":\n\t\t\t\treturn { face: \"Bookman,serif\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Bookman-LightItalic\":\n\t\t\t\treturn { face: \"Bookman,serif\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Courier\":\n\t\t\t\treturn { face: \"\\\"Courier New\\\"\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Courier-Oblique\":\n\t\t\t\treturn { face: \"\\\"Courier New\\\"\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Courier-Bold\":\n\t\t\t\treturn { face: \"\\\"Courier New\\\"\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Courier-BoldOblique\":\n\t\t\t\treturn { face: \"\\\"Courier New\\\"\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"AvantGarde-Book\":\n\t\t\t\treturn { face: \"AvantGarde,Arial\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"AvantGarde-BookOblique\":\n\t\t\t\treturn { face: \"AvantGarde,Arial\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"AvantGarde-Demi\":\n\t\t\tcase \"Avant-Garde-Demi\":\n\t\t\t\treturn { face: \"AvantGarde,Arial\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"AvantGarde-DemiOblique\":\n\t\t\t\treturn { face: \"AvantGarde,Arial\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Oblique\":\n\t\t\t\treturn { face: \"Helvetica\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Bold\":\n\t\t\t\treturn { face: \"Helvetica\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-BoldOblique\":\n\t\t\t\treturn { face: \"Helvetica\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Narrow\":\n\t\t\t\treturn { face: \"\\\"Helvetica Narrow\\\",Helvetica\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Narrow-Oblique\":\n\t\t\t\treturn { face: \"\\\"Helvetica Narrow\\\",Helvetica\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Narrow-Bold\":\n\t\t\t\treturn { face: \"\\\"Helvetica Narrow\\\",Helvetica\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Helvetica-Narrow-BoldOblique\":\n\t\t\t\treturn { face: \"\\\"Helvetica Narrow\\\",Helvetica\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Palatino-Roman\":\n\t\t\t\treturn { face: \"Palatino\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Palatino-Italic\":\n\t\t\t\treturn { face: \"Palatino\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Palatino-Bold\":\n\t\t\t\treturn { face: \"Palatino\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Palatino-BoldItalic\":\n\t\t\t\treturn { face: \"Palatino\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"NewCenturySchlbk-Roman\":\n\t\t\t\treturn { face: \"\\\"New Century\\\",serif\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"NewCenturySchlbk-Italic\":\n\t\t\t\treturn { face: \"\\\"New Century\\\",serif\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"NewCenturySchlbk-Bold\":\n\t\t\t\treturn { face: \"\\\"New Century\\\",serif\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"NewCenturySchlbk-BoldItalic\":\n\t\t\t\treturn { face: \"\\\"New Century\\\",serif\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Times\":\n\t\t\tcase \"Times-Roman\":\n\t\t\tcase \"Times-Narrow\":\n\t\t\tcase \"Times-Courier\":\n\t\t\tcase \"Times-New-Roman\":\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Times-Italic\":\n\t\t\tcase \"Times-Italics\":\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"normal\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"Times-Bold\":\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"bold\", style: \"normal\", decoration: \"none\" };\n\t\t\tcase \"Times-BoldItalic\":\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"bold\", style: \"italic\", decoration: \"none\" };\n\t\t\tcase \"ZapfChancery-MediumItalic\":\n\t\t\t\treturn { face: \"\\\"Zapf Chancery\\\",cursive,serif\", weight: \"normal\", style: \"normal\", decoration: \"none\" };\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tvar getFontParameter = function(tokens, currentSetting, str, position, cmd) {\n\t\t// Every font parameter has the following format:\n\t\t// <face> <utf8> <size> <modifiers> <box>\n\t\t// Where:\n\t\t// face: either a standard web font name, or a postscript font, enumerated in fontTranslation. This could also be an * or be missing if the face shouldn't change.\n\t\t// utf8: This is optional, and specifies utf8. That's all that is supported so the field is just silently ignored.\n\t\t// size: The size, in pixels. This may be omitted if the size is not changing.\n\t\t// modifiers: zero or more of \"bold\", \"italic\", \"underline\"\n\t\t// box: Only applies to the measure numbers, gchords, and the parts. If present, then a box is drawn around the characters.\n\t\t// If face is present, then all the modifiers are cleared. If face is absent, then the modifiers are illegal.\n\t\t// The face can be a single word, a set of words separated by hyphens, or a quoted string.\n\t\t//\n\t\t// So, in practicality, there are three types of font definitions: a number only, an asterisk and a number only, or the full definition (with an optional size).\n\t\tfunction processNumberOnly() {\n\t\t\tvar size = parseInt(tokens[0].token);\n\t\t\ttokens.shift();\n\t\t\tif (!currentSetting) {\n\t\t\t\twarn(\"Can't set just the size of the font since there is no default value.\", str, position);\n\t\t\t\treturn { face: \"\\\"Times New Roman\\\"\", weight: \"normal\", style: \"normal\", decoration: \"none\", size: size};\n\t\t\t}\n\t\t\tif (tokens.length === 0) {\n\t\t\t\treturn { face: currentSetting.face, weight: currentSetting.weight, style: currentSetting.style, decoration: currentSetting.decoration, size: size};\n\t\t\t}\n\t\t\tif (tokens.length === 1 && tokens[0].token === \"box\" && fontTypeCanHaveBox[cmd])\n\t\t\t\treturn { face: currentSetting.face, weight: currentSetting.weight, style: currentSetting.style, decoration: currentSetting.decoration, size: size, box: true};\n\t\t\twarn(\"Extra parameters in font definition.\", str, position);\n\t\t\treturn { face: currentSetting.face, weight: currentSetting.weight, style: currentSetting.style, decoration: currentSetting.decoration, size: size};\n\t\t}\n\n\t\t// format 1: asterisk and number only\n\t\tif (tokens[0].token === '*') {\n\t\t\ttokens.shift();\n\t\t\tif (tokens[0].type === 'number')\n\t\t\t\treturn processNumberOnly();\n\t\t\telse {\n\t\t\t\twarn(\"Expected font size number after *.\", str, position);\n\t\t\t}\n\t\t}\n\n\t\t// format 2: number only\n\t\tif (tokens[0].type === 'number') {\n\t\t\treturn processNumberOnly();\n\t\t}\n\n\t\t// format 3: whole definition\n\t\tvar face = [];\n\t\tvar size;\n\t\tvar weight = \"normal\";\n\t\tvar style = \"normal\";\n\t\tvar decoration = \"none\";\n\t\tvar box = false;\n\t\tvar state = 'face';\n\t\tvar hyphenLast = false;\n\t\twhile (tokens.length) {\n\t\t\tvar currToken = tokens.shift();\n\t\t\tvar word = currToken.token.toLowerCase();\n\t\t\tswitch (state) {\n\t\t\t\tcase 'face':\n\t\t\t\t\tif (hyphenLast || (word !== 'utf' && currToken.type !== 'number' && word !== \"bold\" && word !== \"italic\" && word !== \"underline\" && word !== \"box\")) {\n\t\t\t\t\t\tif (face.length > 0 && currToken.token === '-') {\n\t\t\t\t\t\t\thyphenLast = true;\n\t\t\t\t\t\t\tface[face.length-1] = face[face.length-1] + currToken.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (hyphenLast) {\n\t\t\t\t\t\t\t\thyphenLast = false;\n\t\t\t\t\t\t\t\tface[face.length-1] = face[face.length-1] + currToken.token;\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\tface.push(currToken.token);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (currToken.type === 'number') {\n\t\t\t\t\t\t\tif (size) {\n\t\t\t\t\t\t\t\twarn(\"Font size specified twice in font definition.\", str, position);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsize = currToken.token;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstate = 'modifier';\n\t\t\t\t\t\t} else if (word === \"bold\")\n\t\t\t\t\t\t\tweight = \"bold\";\n\t\t\t\t\t\telse if (word === \"italic\")\n\t\t\t\t\t\t\tstyle = \"italic\";\n\t\t\t\t\t\telse if (word === \"underline\")\n\t\t\t\t\t\t\tdecoration = \"underline\";\n\t\t\t\t\t\telse if (word === \"box\") {\n\t\t\t\t\t\t\tif (fontTypeCanHaveBox[cmd])\n\t\t\t\t\t\t\t\tbox = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\twarn(\"This font style doesn't support \\\"box\\\"\", str, position);\n\t\t\t\t\t\t\tstate = \"finished\";\n\t\t\t\t\t\t} else if (word === \"utf\") {\n\t\t\t\t\t\t\tcurrToken = tokens.shift(); // this gets rid of the \"8\" after \"utf\"\n\t\t\t\t\t\t\tstate = \"size\";\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\twarn(\"Unknown parameter \" + currToken.token + \" in font definition.\", str, position);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"size\":\n\t\t\t\t\tif (currToken.type === 'number') {\n\t\t\t\t\t\tif (size) {\n\t\t\t\t\t\t\twarn(\"Font size specified twice in font definition.\", str, position);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsize = currToken.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\twarn(\"Expected font size in font definition.\", str, position);\n\t\t\t\t\t}\n\t\t\t\t\tstate = 'modifier';\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"modifier\":\n\t\t\t\t\tif (word === \"bold\")\n\t\t\t\t\t\tweight = \"bold\";\n\t\t\t\t\telse if (word === \"italic\")\n\t\t\t\t\t\tstyle = \"italic\";\n\t\t\t\t\telse if (word === \"underline\")\n\t\t\t\t\t\tdecoration = \"underline\";\n\t\t\t\t\telse if (word === \"box\") {\n\t\t\t\t\t\tif (fontTypeCanHaveBox[cmd])\n\t\t\t\t\t\t\tbox = true;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twarn(\"This font style doesn't support \\\"box\\\"\", str, position);\n\t\t\t\t\t\tstate = \"finished\";\n\t\t\t\t\t} else\n\t\t\t\t\t\twarn(\"Unknown parameter \" + currToken.token + \" in font definition.\", str, position);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"finished\":\n\t\t\t\t\twarn(\"Extra characters found after \\\"box\\\" in font definition.\", str, position);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (size === undefined) {\n\t\t\tif (!currentSetting) {\n\t\t\t\twarn(\"Must specify the size of the font since there is no default value.\", str, position);\n\t\t\t\tsize = 12;\n\t\t\t} else\n\t\t\t\tsize = currentSetting.size;\n\t\t} else\n\t\t\tsize = parseFloat(size);\n\n\t\tface = face.join(' ');\n\t\tif (face === '') {\n\t\t\tif (!currentSetting) {\n\t\t\t\twarn(\"Must specify the name of the font since there is no default value.\", str, position);\n\t\t\t\tface = \"sans-serif\";\n\t\t\t} else\n\t\t\t\tface = currentSetting.face;\n\t\t}\n\t\tvar psFont = fontTranslation(face);\n\t\tvar font = {};\n\t\tif (psFont) {\n\t\t\tfont.face = psFont.face;\n\t\t\tfont.weight = psFont.weight;\n\t\t\tfont.style = psFont.style;\n\t\t\tfont.decoration = psFont.decoration;\n\t\t\tfont.size = size;\n\t\t\tif (box)\n\t\t\t\tfont.box = true;\n\t\t\treturn font;\n\t\t}\n\t\tfont.face = face;\n\t\tfont.weight = weight;\n\t\tfont.style = style;\n\t\tfont.decoration = decoration;\n\t\tfont.size = size;\n\t\tif (box)\n\t\t\tfont.box = true;\n\t\treturn font;\n\t};\n\n\tvar getChangingFont = function(cmd, tokens, str) {\n\t\tif (tokens.length === 0)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a font as a parameter.\";\n\t\tmultilineVars[cmd] = getFontParameter(tokens, multilineVars[cmd], str, 0, cmd);\n\t\tif (multilineVars.is_in_header) // If the font appears in the header, then it becomes the default font.\n\t\t\ttune.formatting[cmd] = multilineVars[cmd];\n\t\treturn null;\n\t};\n\tvar getGlobalFont = function(cmd, tokens, str) {\n\t\tif (tokens.length === 0)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a font as a parameter.\";\n\t\ttune.formatting[cmd] = getFontParameter(tokens, tune.formatting[cmd], str, 0, cmd);\n\t\treturn null;\n\t};\n\n\tvar setScale = function(cmd, tokens) {\n\t\tvar scratch = \"\";\n\t\ttokens.forEach(function(tok) {\n\t\t\tscratch += tok.token;\n\t\t});\n\t\tvar num = parseFloat(scratch);\n\t\tif (isNaN(num) || num === 0)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a number as a parameter.\";\n\t\ttune.formatting.scale = num;\n\n\t};\n\t// starts at 35\n\tvar drumNames = [\n\t\t\"acoustic-bass-drum\",\n\t\t\"bass-drum-1\",\n\t\t\"side-stick\",\n\t\t\"acoustic-snare\",\n\t\t\"hand-clap\",\n\t\t\"electric-snare\",\n\t\t\"low-floor-tom\",\n\t\t\"closed-hi-hat\",\n\t\t\"high-floor-tom\",\n\t\t\"pedal-hi-hat\",\n\t\t\"low-tom\",\n\t\t\"open-hi-hat\",\n\t\t\"low-mid-tom\",\n\t\t\"hi-mid-tom\",\n\t\t\"crash-cymbal-1\",\n\t\t\"high-tom\",\n\t\t\"ride-cymbal-1\",\n\t\t\"chinese-cymbal\",\n\t\t\"ride-bell\",\n\t\t\"tambourine\",\n\t\t\"splash-cymbal\",\n\t\t\"cowbell\",\n\t\t\"crash-cymbal-2\",\n\t\t\"vibraslap\",\n\t\t\"ride-cymbal-2\",\n\t\t\"hi-bongo\",\n\t\t\"low-bongo\",\n\t\t\"mute-hi-conga\",\n\t\t\"open-hi-conga\",\n\t\t\"low-conga\",\n\t\t\"high-timbale\",\n\t\t\"low-timbale\",\n\t\t\"high-agogo\",\n\t\t\"low-agogo\",\n\t\t\"cabasa\",\n\t\t\"maracas\",\n\t\t\"short-whistle\",\n\t\t\"long-whistle\",\n\t\t\"short-guiro\",\n\t\t\"long-guiro\",\n\t\t\"claves\",\n\t\t\"hi-wood-block\",\n\t\t\"low-wood-block\",\n\t\t\"mute-cuica\",\n\t\t\"open-cuica\",\n\t\t\"mute-triangle\",\n\t\t\"open-triangle\",\n\t];\n\n\tvar interpretPercMap = function(restOfString) {\n\t\tvar tokens = restOfString.split(/\\s+/); // Allow multiple spaces.\n\t\tif (tokens.length !== 2 && tokens.length !== 3)\n\t\t\treturn { error: 'Expected parameters \"abc-note\", \"drum-sound\", and optionally \"note-head\"'};\n\t\tvar key = tokens[0];\n\t\t// The percussion sound can either be a MIDI number or a drum name. If it is not a number then check for a name.\n\t\tvar pitch = parseInt(tokens[1], 10);\n\t\tif ((isNaN(pitch) || pitch < 35 || pitch > 81) && tokens[1]) {\n\t\t\tpitch = drumNames.indexOf(tokens[1].toLowerCase()) + 35;\n\t\t}\n\t\tif ((isNaN(pitch) || pitch < 35 || pitch > 81))\n\t\t\treturn { error: 'Expected drum name, received \"' + tokens[1] + '\"' };\n\t\tvar value = { sound: pitch };\n\t\tif (tokens.length === 3)\n\t\t\tvalue.noteHead = tokens[2];\n\t\treturn { key: key, value: value };\n\t};\n\n\tvar getRequiredMeasurement = function(cmd, tokens) {\n\t\tvar points = tokenizer.getMeasurement(tokens);\n\t\tif (points.used === 0 || tokens.length !== 0)\n\t\t\treturn { error: \"Directive \\\"\" + cmd + \"\\\" requires a measurement as a parameter.\"};\n\t\treturn points.value;\n\t};\n\tvar oneParameterMeasurement = function(cmd, tokens) {\n\t\tvar points = tokenizer.getMeasurement(tokens);\n\t\tif (points.used === 0 || tokens.length !== 0)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a measurement as a parameter.\";\n\t\ttune.formatting[cmd] = points.value;\n\t\treturn null;\n\t};\n\n\tvar addMultilineVar = function(key, cmd, tokens, min, max) {\n\t\tif (tokens.length !== 1 || tokens[0].type !== 'number')\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a number as a parameter.\";\n\t\tvar i = tokens[0].intt;\n\t\tif (min !== undefined && i < min)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a number greater than or equal to \" + min + \" as a parameter.\";\n\t\tif (max !== undefined && i > max)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires a number less than or equal to \" + max + \" as a parameter.\";\n\t\tmultilineVars[key] = i;\n\t\treturn null;\n\t};\n\n\tvar addMultilineVarBool = function(key, cmd, tokens) {\n\t\tif (tokens.length === 1 && (tokens[0].token === 'true' || tokens[0].token === 'false')) {\n\t\t\tmultilineVars[key] = tokens[0].token === 'true';\n\t\t\treturn null;\n\t\t}\n\t\tvar str = addMultilineVar(key, cmd, tokens, 0, 1);\n\t\tif (str !== null) return str;\n\t\tmultilineVars[key] = (multilineVars[key] === 1);\n\t\treturn null;\n\t};\n\n\tvar addMultilineVarOneParamChoice = function(key, cmd, tokens, choices) {\n\t\tif (tokens.length !== 1)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires one of [ \" + choices.join(\", \") + \" ] as a parameter.\";\n\t\tvar choice = tokens[0].token;\n\t\tvar found = false;\n\t\tfor (var i = 0; !found && i < choices.length; i++) {\n\t\t\tif (choices[i] === choice)\n\t\t\t\tfound = true;\n\t\t}\n\t\tif (!found)\n\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires one of [ \" + choices.join(\", \") + \" ] as a parameter.\";\n\t\tmultilineVars[key] = choice;\n\t\treturn null;\n\t};\n\n\tvar midiCmdParam0 = [\n\t\t\"nobarlines\",\n\t\t\"barlines\",\n\t\t\"beataccents\",\n\t\t\"nobeataccents\",\n\t\t\"droneon\",\n\t\t\"droneoff\",\n\t\t\"drumon\",\n\t\t\"drumoff\",\n\t\t\"fermatafixed\",\n\t\t\"fermataproportional\",\n\t\t\"gchordon\",\n\t\t\"gchordoff\",\n\t\t\"controlcombo\",\n\t\t\"temperamentnormal\",\n\t\t\"noportamento\"\n\t];\n\tvar midiCmdParam1String = [\n\t\t\"gchord\",\n\t\t\"ptstress\",\n\t\t\"beatstring\"\n\t];\n\tvar midiCmdParam1Integer = [\n\t\t\"bassvol\",\n\t\t\"chordvol\",\n\t\t\"bassprog\",\n\t\t\"chordprog\",\n\t\t\"c\",\n\t\t\"channel\",\n\t\t\"beatmod\",\n\t\t\"deltaloudness\",\n\t\t\"drumbars\",\n\t\t\"gracedivider\",\n\t\t\"makechordchannels\",\n\t\t\"randomchordattack\",\n\t\t\"chordattack\",\n\t\t\"stressmodel\",\n\t\t\"transpose\",\n\t\t\"rtranspose\",\n\t\t\"vol\",\n\t\t\"volinc\"\n\t];\n\tvar midiCmdParam1Integer1OptionalInteger = [\n\t\t\"program\"\n\t];\n\tvar midiCmdParam2Integer = [\n\t\t\"ratio\",\n\t\t\"snt\",\n\t\t\"bendvelocity\",\n\t\t\"pitchbend\",\n\t\t\"control\",\n\t\t\"temperamentlinear\"\n\t];\n\tvar midiCmdParam4Integer = [\n\t\t\"beat\"\n\t];\n\tvar midiCmdParam5Integer = [\n\t\t\"drone\"\n\t];\n\tvar midiCmdParam1String1Integer = [\n\t\t\"portamento\"\n\t];\n\tvar midiCmdParamFraction = [\n\t\t\"expand\",\n\t\t\"grace\",\n\t\t\"trim\"\n\t];\n\tvar midiCmdParam1StringVariableIntegers = [\n\t\t\"drum\",\n\t\t\"chordname\"\n\t];\n\n\tvar parseMidiCommand = function(midi, tune, restOfString) {\n\t\tvar midi_cmd = midi.shift().token;\n\t\tvar midi_params = [];\n\t\tif (midiCmdParam0.indexOf(midi_cmd) >= 0) {\n\t\t\t// NO PARAMETERS\n\t\t\tif (midi.length !== 0)\n\t\t\t\twarn(\"Unexpected parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t} else if (midiCmdParam1String.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE STRING PARAMETER\n\t\t\tif (midi.length !== 1)\n\t\t\t\twarn(\"Expected one parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse\n\t\t\t\tmidi_params.push(midi[0].token);\n\t\t} else if (midiCmdParam1Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE INT PARAMETER\n\t\t\tif (midi.length !== 1)\n\t\t\t\twarn(\"Expected one parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\")\n\t\t\t\twarn(\"Expected one integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t} else if (midiCmdParam1Integer1OptionalInteger.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE INT PARAMETER, ONE OPTIONAL PARAMETER\n\t\t\tif (midi.length !== 1 && midi.length !== 2)\n\t\t\t\twarn(\"Expected one or two parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\")\n\t\t\t\twarn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi.length === 2 && midi[1].type !== \"number\")\n\t\t\t\twarn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tif (midi.length === 2)\n\t\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam2Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// TWO INT PARAMETERS\n\t\t\tif (midi.length !== 2)\n\t\t\t\twarn(\"Expected two parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\" || midi[1].type !== \"number\")\n\t\t\t\twarn(\"Expected two integer parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam1String1Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE STRING PARAMETER, ONE INT PARAMETER\n\t\t\tif (midi.length !== 2)\n\t\t\t\twarn(\"Expected two parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"alpha\" || midi[1].type !== \"number\")\n\t\t\t\twarn(\"Expected one string and one integer parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].token);\n\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t}\n\t\t} else if (midi_cmd === 'drummap') {\n\t\t\t// BUILD AN OBJECT OF ABC NOTE => MIDI NOTE\n\t\t\tif (midi.length === 2 && midi[0].type === 'alpha' && midi[1].type === 'number') {\n\t\t\t\tif (!tune.formatting) tune.formatting = {};\n\t\t\t\tif (!tune.formatting.midi) tune.formatting.midi = {};\n\t\t\t\tif (!tune.formatting.midi.drummap) tune.formatting.midi.drummap = {};\n\t\t\t\ttune.formatting.midi.drummap[midi[0].token] = midi[1].intt;\n\t\t\t\tmidi_params = tune.formatting.midi.drummap;\n\t\t\t} else if (midi.length === 3 && midi[0].type === 'punct' && midi[1].type === 'alpha' && midi[2].type === 'number') {\n\t\t\t\tif (!tune.formatting) tune.formatting = {};\n\t\t\t\tif (!tune.formatting.midi) tune.formatting.midi = {};\n\t\t\t\tif (!tune.formatting.midi.drummap) tune.formatting.midi.drummap = {};\n\t\t\t\ttune.formatting.midi.drummap[midi[0].token+midi[1].token] = midi[2].intt;\n\t\t\t\tmidi_params = tune.formatting.midi.drummap;\n\t\t\t} else {\n\t\t\t\twarn(\"Expected one note name and one integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t}\n\t\t} else if (midiCmdParamFraction.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE FRACTION PARAMETER\n\t\t\tif (midi.length !== 3)\n\t\t\t\twarn(\"Expected fraction parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\" || midi[1].token !== \"/\" || midi[2].type !== \"number\")\n\t\t\t\twarn(\"Expected fraction parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tmidi_params.push(midi[2].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam4Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// FOUR INT PARAMETERS\n\t\t\tif (midi.length !== 4)\n\t\t\t\twarn(\"Expected four parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\" || midi[1].type !== \"number\" || midi[2].type !== \"number\" || midi[3].type !== \"number\")\n\t\t\t\twarn(\"Expected four integer parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t\tmidi_params.push(midi[2].intt);\n\t\t\t\tmidi_params.push(midi[3].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam5Integer.indexOf(midi_cmd) >= 0) {\n\t\t\t// FIVE INT PARAMETERS\n\t\t\tif (midi.length !== 5)\n\t\t\t\twarn(\"Expected five parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\" || midi[1].type !== \"number\" || midi[2].type !== \"number\" || midi[3].type !== \"number\" || midi[4].type !== \"number\")\n\t\t\t\twarn(\"Expected five integer parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tmidi_params.push(midi[1].intt);\n\t\t\t\tmidi_params.push(midi[2].intt);\n\t\t\t\tmidi_params.push(midi[3].intt);\n\t\t\t\tmidi_params.push(midi[4].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam1Integer1OptionalInteger.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE INT PARAMETER, ONE OPTIONAL OCTAVE PARAMETER\n\t\t\tif (midi.length !== 1 || midi.length !== 4)\n\t\t\t\twarn(\"Expected one or two parameters in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"number\")\n\t\t\t\twarn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi.length === 4) {\n\t\t\t\tif (midi[1].token !== \"octave\")\n\t\t\t\t\twarn(\"Expected octave parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t\tif (midi[2].token !== \"=\")\n\t\t\t\t\twarn(\"Expected octave parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t\tif (midi[3].type !== \"number\")\n\t\t\t\t\twarn(\"Expected integer parameter for octave in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t} else {\n\t\t\t\tmidi_params.push(midi[0].intt);\n\t\t\t\tif (midi.length === 4)\n\t\t\t\t\tmidi_params.push(midi[3].intt);\n\t\t\t}\n\t\t} else if (midiCmdParam1StringVariableIntegers.indexOf(midi_cmd) >= 0) {\n\t\t\t// ONE STRING, VARIABLE INT PARAMETERS\n\t\t\tif (midi.length < 2)\n\t\t\t\twarn(\"Expected string parameter and at least one integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse if (midi[0].type !== \"alpha\")\n\t\t\t\twarn(\"Expected string parameter and at least one integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\telse {\n\t\t\t\tvar p = midi.shift();\n\t\t\t\tmidi_params.push(p.token);\n\t\t\t\twhile (midi.length > 0) {\n\t\t\t\t\tp = midi.shift();\n\t\t\t\t\tif (p.type !== \"number\")\n\t\t\t\t\t\twarn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n\t\t\t\t\tmidi_params.push(p.intt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (tuneBuilder.hasBeginMusic())\n\t\t\ttuneBuilder.appendElement('midi', -1, -1, { cmd: midi_cmd, params: midi_params });\n\t\telse {\n\t\t\tif (tune.formatting['midi'] === undefined)\n\t\t\t\ttune.formatting['midi'] = {};\n\t\t\ttune.formatting['midi'][midi_cmd] = midi_params;\n\t\t}\n\t};\n\n\tparseDirective.parseFontChangeLine = function(textstr) {\n\t\t// We don't want to match two dollar signs, so change those temporarily\n\t\ttextstr = textstr.replace(/\\$\\$/g,\"\\x03\")\n\t\tvar textParts = textstr.split('$');\n\t\tif (textParts.length > 1 && multilineVars.setfont) {\n\t\t\tvar textarr = [ ];\n\t\t\tif (textParts[0] !== '') // did the original string start with `$`?\n\t\t\t\ttextarr.push({ text: textParts[0] })\n\t\t\tfor (var i = 1; i < textParts.length; i++) {\n\t\t\t\tif (textParts[i][0] === '0')\n\t\t\t\t\ttextarr.push({ text: textParts[i].substring(1).replace(/\\x03/g,\"$$\") });\n\t\t\t\telse {\n\t\t\t\t\tvar whichFont = parseInt(textParts[i][0],10)\n\t\t\t\t\tif (multilineVars.setfont[whichFont])\n\t\t\t\t\t\ttextarr.push({font: multilineVars.setfont[whichFont], text: textParts[i].substring(1).replace(/\\x03/g,\"$$\") });\n\t\t\t\t\telse\n\t\t\t\t\t\ttextarr[textarr.length-1].text += '$' + textParts[i].replace(/\\x03/g,\"$$\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn textarr;\n\t\t}\n\t\treturn textstr.replace(/\\x03/g,\"$$\");\n\t};\n\n\tvar positionChoices = [ 'auto', 'above', 'below', 'hidden' ];\n\tparseDirective.addDirective = function(str) {\n\t\tvar tokens = tokenizer.tokenize(str, 0, str.length);\t// 3 or more % in a row, or just spaces after %% is just a comment\n\t\tif (tokens.length === 0 || tokens[0].type !== 'alpha') return null;\n\t\tvar restOfString = str.substring(str.indexOf(tokens[0].token)+tokens[0].token.length);\n\t\trestOfString = tokenizer.stripComment(restOfString);\n\t\tvar cmd = tokens.shift().token.toLowerCase();\n\t\tvar scratch = \"\";\n\t\tvar line;\n\t\tswitch (cmd)\n\t\t{\n\t\t\t// The following directives were added to abc_parser_lint, but haven't been implemented here.\n\t\t\t// Most of them are direct translations from the directives that will be parsed in. See abcm2ps's format.txt for info on each of these.\n\t\t\t//\t\t\t\t\talignbars: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\taligncomposer: { type: \"string\", Enum: [ 'left', 'center','right' ], optional: true },\n\t\t\t//\t\t\t\t\tbstemdown: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tcontinueall: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tdynalign: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\texprabove: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\texprbelow: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tgchordbox: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tgracespacebefore: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tgracespaceinside: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tgracespaceafter: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tinfospace: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tlineskipfac: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tmaxshrink: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tmaxstaffsep: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tmaxsysstaffsep: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tnotespacingfactor: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tparskipfac: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tslurheight: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tsplittune: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tsquarebreve: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tstemheight: { type: \"number\", optional: true },\n\t\t\t//\t\t\t\t\tstraightflags: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\tstretchstaff: { type: \"boolean\", optional: true },\n\t\t\t//\t\t\t\t\ttitleformat: { type: \"string\", optional: true },\n\t\t\tcase \"bagpipes\":tune.formatting.bagpipes = true;break;\n\t\t\tcase \"flatbeams\":tune.formatting.flatbeams = true;break;\n\t\t\tcase \"jazzchords\":tune.formatting.jazzchords = true;break;\n\t\t\tcase \"accentAbove\":tune.formatting.accentAbove = true;break;\n\t\t\tcase \"germanAlphabet\":tune.formatting.germanAlphabet = true;break;\n\t\t\tcase \"landscape\":multilineVars.landscape = true;break;\n\t\t\tcase \"papersize\":multilineVars.papersize = restOfString;break;\n\t\t\tcase \"graceslurs\":\n\t\t\t\tif (tokens.length !== 1)\n\t\t\t\t\treturn \"Directive graceslurs requires one parameter: 0 or 1\";\n\t\t\t\tif (tokens[0].token === '0' || tokens[0].token === 'false')\n\t\t\t\t\ttune.formatting.graceSlurs = false;\n\t\t\t\telse if (tokens[0].token === '1' || tokens[0].token === 'true')\n\t\t\t\t\ttune.formatting.graceSlurs = true;\n\t\t\t\telse\n\t\t\t\t\treturn \"Directive graceslurs requires one parameter: 0 or 1 (received \" + tokens[0].token + ')';\n\t\t\t\tbreak;\n\t\t\tcase \"lineThickness\":\n\t\t\t\tvar lt = parseStretchLast(tokens);\n\t\t\t\tif (lt.value !== undefined)\n\t\t\t\t\ttune.formatting.lineThickness = lt.value;\n\t\t\t\tif (lt.error)\n\t\t\t\t\treturn lt.error;\n\t\t\t\tbreak;\n\t\t\tcase \"stretchlast\":\n\t\t\t\tvar sl = parseStretchLast(tokens);\n\t\t\t\tif (sl.value !== undefined)\n\t\t\t\t\ttune.formatting.stretchlast = sl.value;\n\t\t\t\tif (sl.error)\n\t\t\t\t\treturn sl.error;\n\t\t\t\tbreak;\n\t\t\tcase \"titlecaps\":multilineVars.titlecaps = true;break;\n\t\t\tcase \"titleleft\":tune.formatting.titleleft = true;break;\n\t\t\tcase \"measurebox\":tune.formatting.measurebox = true;break;\n\n\t\t\tcase \"vocal\": return addMultilineVarOneParamChoice(\"vocalPosition\", cmd, tokens, positionChoices);\n\t\t\tcase \"dynamic\": return addMultilineVarOneParamChoice(\"dynamicPosition\", cmd, tokens, positionChoices);\n\t\t\tcase \"gchord\": return addMultilineVarOneParamChoice(\"chordPosition\", cmd, tokens, positionChoices);\n\t\t\tcase \"ornament\": return addMultilineVarOneParamChoice(\"ornamentPosition\", cmd, tokens, positionChoices);\n\t\t\tcase \"volume\": return addMultilineVarOneParamChoice(\"volumePosition\", cmd, tokens, positionChoices);\n\n\t\t\tcase \"botmargin\":\n\t\t\tcase \"botspace\":\n\t\t\tcase \"composerspace\":\n\t\t\tcase \"indent\":\n\t\t\tcase \"leftmargin\":\n\t\t\tcase \"linesep\":\n\t\t\tcase \"musicspace\":\n\t\t\tcase \"partsspace\":\n\t\t\tcase \"pageheight\":\n\t\t\tcase \"pagewidth\":\n\t\t\tcase \"rightmargin\":\n\t\t\tcase \"staffsep\":\n\t\t\tcase \"staffwidth\":\n\t\t\tcase \"subtitlespace\":\n\t\t\tcase \"sysstaffsep\":\n\t\t\tcase \"systemsep\":\n\t\t\tcase \"textspace\":\n\t\t\tcase \"titlespace\":\n\t\t\tcase \"topmargin\":\n\t\t\tcase \"topspace\":\n\t\t\tcase \"vocalspace\":\n\t\t\tcase \"wordsspace\":\n\t\t\t\treturn oneParameterMeasurement(cmd, tokens);\n\t\t\tcase \"voicescale\":\n\t\t\t\tif (tokens.length !== 1 || tokens[0].type !== 'number')\n\t\t\t\t\treturn \"voicescale requires one float as a parameter\";\n\t\t\t\tvar voiceScale = tokens.shift();\n\t\t\t\tif (multilineVars.currentVoice) {\n\t\t\t\t\tmultilineVars.currentVoice.scale = voiceScale.floatt;\n\t\t\t\t\ttuneBuilder.changeVoiceScale(multilineVars.currentVoice.scale);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\tcase \"voicecolor\":\n\t\t\t\tif (tokens.length !== 1) // this could either be of type alpha or quote, but it's ok if it is a number\n\t\t\t\t\treturn \"voicecolor requires one string as a parameter\";\n\t\t\t\tvar voiceColor = tokens.shift();\n\t\t\t\tif (multilineVars.currentVoice) {\n\t\t\t\t\tmultilineVars.currentVoice.color = voiceColor.token;\n\t\t\t\t\ttuneBuilder.changeVoiceColor(multilineVars.currentVoice.color);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\tcase \"vskip\":\n\t\t\t\tvar vskip = Math.round(getRequiredMeasurement(cmd, tokens));\n\t\t\t\tif (vskip.error)\n\t\t\t\t\treturn vskip.error;\n\t\t\t\ttuneBuilder.addSpacing(vskip);\n\t\t\t\treturn null;\n\t\t\tcase \"scale\":\n\t\t\t\tsetScale(cmd, tokens);\n\t\t\t\tbreak;\n\t\t\tcase \"sep\":\n\t\t\t\tif (tokens.length === 0)\n\t\t\t\t\ttuneBuilder.addSeparator(14,14,85, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+5}); // If no parameters are given, then there is a default size.\n\t\t\t\telse {\n\t\t\t\t\tvar points = tokenizer.getMeasurement(tokens);\n\t\t\t\t\tif (points.used === 0)\n\t\t\t\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires 3 numbers: space above, space below, length of line\";\n\t\t\t\t\tvar spaceAbove = points.value;\n\n\t\t\t\t\tpoints = tokenizer.getMeasurement(tokens);\n\t\t\t\t\tif (points.used === 0)\n\t\t\t\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires 3 numbers: space above, space below, length of line\";\n\t\t\t\t\tvar spaceBelow = points.value;\n\n\t\t\t\t\tpoints = tokenizer.getMeasurement(tokens);\n\t\t\t\t\tif (points.used === 0 || tokens.length !== 0)\n\t\t\t\t\t\treturn \"Directive \\\"\" + cmd + \"\\\" requires 3 numbers: space above, space below, length of line\";\n\t\t\t\t\tvar lenLine = points.value;\n\t\t\t\t\ttuneBuilder.addSeparator(spaceAbove, spaceBelow, lenLine, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+restOfString.length});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"barsperstaff\":\n\t\t\t\tscratch = addMultilineVar('barsperstaff', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tbreak;\n\t\t\tcase \"staffnonote\":\n\t\t\t\t// The sense of the boolean is opposite here. \"0\" means true.\n\t\t\t\tif (tokens.length !== 1)\n\t\t\t\t\treturn \"Directive staffnonote requires one parameter: 0 or 1\";\n\t\t\t\tif (tokens[0].token === '0')\n\t\t\t\t\tmultilineVars.staffnonote = true;\n\t\t\t\telse if (tokens[0].token === '1')\n\t\t\t\t\tmultilineVars.staffnonote = false;\n\t\t\t\telse\n\t\t\t\t\treturn \"Directive staffnonote requires one parameter: 0 or 1 (received \" + tokens[0].token + ')';\n\t\t\t\tbreak;\n\t\t\tcase \"printtempo\":\n\t\t\t\tscratch = addMultilineVarBool('printTempo', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tbreak;\n\t\t\tcase \"partsbox\":\n\t\t\t\tscratch = addMultilineVarBool('partsBox', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tmultilineVars.partsfont.box = multilineVars.partsBox;\n\t\t\t\tbreak;\n\t\t\tcase \"freegchord\":\n\t\t\t\tscratch = addMultilineVarBool('freegchord', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tbreak;\n\t\t\tcase \"measurenb\":\n\t\t\tcase \"barnumbers\":\n\t\t\t\tscratch = addMultilineVar('barNumbers', cmd, tokens);\n\t\t\t\tif (scratch !== null) return scratch;\n\t\t\t\tbreak;\n\t\t\tcase \"setbarnb\":\n\t\t\t\tif (tokens.length !== 1 || tokens[0].type !== 'number') {\n\t\t\t\t\treturn 'Directive setbarnb requires a number as a parameter.';\n\t\t\t\t}\n\t\t\t\tmultilineVars.currBarNumber = tuneBuilder.setBarNumberImmediate(tokens[0].intt);\n\t\t\t\tbreak;\n\t\t\tcase \"begintext\":\n\t\t\t\tvar textBlock = '';\n\t\t\t\tline = tokenizer.nextLine();\n\t\t\t\twhile(line && line.indexOf('%%endtext') !== 0) {\n\t\t\t\t\tif (parseCommon.startsWith(line, \"%%\"))\n\t\t\t\t\t\ttextBlock += line.substring(2) + \"\\n\";\n\t\t\t\t\telse\n\t\t\t\t\t\ttextBlock += line + \"\\n\";\n\t\t\t\t\tline = tokenizer.nextLine();\n\t\t\t\t}\n\t\t\t\ttuneBuilder.addText(textBlock, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+textBlock.length+7});\n\t\t\t\tbreak;\n\t\t\tcase \"continueall\":\n\t\t\t\tmultilineVars.continueall = true;\n\t\t\t\tbreak;\n\t\t\tcase \"beginps\":\n\t\t\t\tline = tokenizer.nextLine();\n\t\t\t\twhile(line && line.indexOf('%%endps') !== 0) {\n\t\t\t\t\ttokenizer.nextLine();\n\t\t\t\t}\n\t\t\t\twarn(\"Postscript ignored\", str, 0);\n\t\t\t\tbreak;\n\t\t\tcase \"deco\":\n\t\t\t\tif (restOfString.length > 0)\n\t\t\t\t\tmultilineVars.ignoredDecorations.push(restOfString.substring(0, restOfString.indexOf(' ')));\n\t\t\t\twarn(\"Decoration redefinition ignored\", str, 0);\n\t\t\t\tbreak;\n\t\t\tcase \"text\":\n\t\t\t\tvar textstr = tokenizer.translateString(restOfString);\n\t\t\t\ttuneBuilder.addText(parseDirective.parseFontChangeLine(textstr), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+restOfString.length+7});\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tvar centerstr = tokenizer.translateString(restOfString);\n\t\t\t\ttuneBuilder.addCentered(parseDirective.parseFontChangeLine(centerstr));\n\t\t\t\tbreak;\n\t\t\tcase \"font\":\n\t\t\t\t// don't need to do anything for this; it is a useless directive\n\t\t\t\tbreak;\n\t\t\tcase \"setfont\":\n\t\t\t\tvar sfTokens = tokenizer.tokenize(restOfString, 0, restOfString.length);\n//\t\t\t\tvar sfDone = false;\n\t\t\t\tif (sfTokens.length >= 4) {\n\t\t\t\t\tif (sfTokens[0].token === '-' && sfTokens[1].type === 'number') {\n\t\t\t\t\t\tvar sfNum = parseInt(sfTokens[1].token);\n\t\t\t\t\t\tif (sfNum >= 1 && sfNum <= 9) {\n\t\t\t\t\t\t\tif (!multilineVars.setfont)\n\t\t\t\t\t\t\t\tmultilineVars.setfont = [];\n\t\t\t\t\t\t\tsfTokens.shift();\n\t\t\t\t\t\t\tsfTokens.shift();\n\t\t\t\t\t\t\tmultilineVars.setfont[sfNum] = getFontParameter(sfTokens, multilineVars.setfont[sfNum], str, 0, 'setfont');\n//\t\t\t\t\t\t\tvar sfSize = sfTokens.pop();\n//\t\t\t\t\t\t\tif (sfSize.type === 'number') {\n//\t\t\t\t\t\t\t\tsfSize = parseInt(sfSize.token);\n//\t\t\t\t\t\t\t\tvar sfFontName = '';\n//\t\t\t\t\t\t\t\tfor (var sfi = 2; sfi < sfTokens.length; sfi++)\n//\t\t\t\t\t\t\t\t\tsfFontName += sfTokens[sfi].token;\n//\t\t\t\t\t\t\t\tmultilineVars.setfont[sfNum] = { face: sfFontName, size: sfSize };\n//\t\t\t\t\t\t\t\tsfDone = true;\n//\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n//\t\t\t\tif (!sfDone)\n//\t\t\t\t\treturn \"Bad parameters: \" + cmd;\n\t\t\t\tbreak;\n\t\t\tcase \"gchordfont\":\n\t\t\tcase \"partsfont\":\n\t\t\tcase \"tripletfont\":\n\t\t\tcase \"vocalfont\":\n\t\t\tcase \"textfont\":\n\t\t\tcase \"annotationfont\":\n\t\t\tcase \"historyfont\":\n\t\t\tcase \"infofont\":\n\t\t\tcase \"measurefont\":\n\t\t\tcase \"repeatfont\":\n\t\t\tcase \"wordsfont\":\n\t\t\t\treturn getChangingFont(cmd, tokens, str);\n\t\t\tcase \"composerfont\":\n\t\t\tcase \"subtitlefont\":\n\t\t\tcase \"tempofont\":\n\t\t\tcase \"titlefont\":\n\t\t\tcase \"voicefont\":\n\t\t\tcase \"footerfont\":\n\t\t\tcase \"headerfont\":\n\t\t\t\treturn getGlobalFont(cmd, tokens, str);\n\t\t\tcase \"barlabelfont\":\n\t\t\tcase \"barnumberfont\":\n\t\t\tcase \"barnumfont\":\n\t\t\t\treturn getChangingFont(\"measurefont\", tokens, str);\n\t\t\tcase \"staves\":\n\t\t\tcase \"score\":\n\t\t\t\tmultilineVars.score_is_present = true;\n\t\t\t\tvar addVoice = function(id, newStaff, bracket, brace, continueBar) {\n\t\t\t\t\tif (newStaff || multilineVars.staves.length === 0) {\n\t\t\t\t\t\tmultilineVars.staves.push({index: multilineVars.staves.length, numVoices: 0});\n\t\t\t\t\t}\n\t\t\t\t\tvar staff = parseCommon.last(multilineVars.staves);\n\t\t\t\t\tif (bracket !== undefined && staff.bracket === undefined) staff.bracket = bracket;\n\t\t\t\t\tif (brace !== undefined && staff.brace === undefined) staff.brace = brace;\n\t\t\t\t\tif (continueBar) staff.connectBarLines = 'end';\n\t\t\t\t\tif (multilineVars.voices[id] === undefined) {\n\t\t\t\t\t\tmultilineVars.voices[id] = {staffNum: staff.index, index: staff.numVoices};\n\t\t\t\t\t\tstaff.numVoices++;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar openParen = false;\n\t\t\t\tvar openBracket = false;\n\t\t\t\tvar openBrace = false;\n\t\t\t\tvar justOpenParen = false;\n\t\t\t\tvar justOpenBracket = false;\n\t\t\t\tvar justOpenBrace = false;\n\t\t\t\tvar continueBar = false;\n\t\t\t\tvar lastVoice;\n\t\t\t\tvar addContinueBar = function() {\n\t\t\t\t\tcontinueBar = true;\n\t\t\t\t\tif (lastVoice) {\n\t\t\t\t\t\tvar ty = 'start';\n\t\t\t\t\t\tif (lastVoice.staffNum > 0) {\n\t\t\t\t\t\t\tif (multilineVars.staves[lastVoice.staffNum-1].connectBarLines === 'start' ||\n\t\t\t\t\t\t\t\tmultilineVars.staves[lastVoice.staffNum-1].connectBarLines === 'continue')\n\t\t\t\t\t\t\t\tty = 'continue';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmultilineVars.staves[lastVoice.staffNum].connectBarLines = ty;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\twhile (tokens.length) {\n\t\t\t\t\tvar t = tokens.shift();\n\t\t\t\t\tswitch (t.token) {\n\t\t\t\t\t\tcase '(':\n\t\t\t\t\t\t\tif (openParen) warn(\"Can't nest parenthesis in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openParen = true;justOpenParen = true;}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ')':\n\t\t\t\t\t\t\tif (!openParen || justOpenParen) warn(\"Unexpected close parenthesis in %%score\", str, t.start);\n\t\t\t\t\t\t\telse openParen = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '[':\n\t\t\t\t\t\t\tif (openBracket) warn(\"Can't nest brackets in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openBracket = true;justOpenBracket = true;}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ']':\n\t\t\t\t\t\t\tif (!openBracket || justOpenBracket) warn(\"Unexpected close bracket in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openBracket = false;multilineVars.staves[lastVoice.staffNum].bracket = 'end';}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '{':\n\t\t\t\t\t\t\tif (openBrace ) warn(\"Can't nest braces in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openBrace = true;justOpenBrace = true;}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '}':\n\t\t\t\t\t\t\tif (!openBrace || justOpenBrace) warn(\"Unexpected close brace in %%score\", str, t.start);\n\t\t\t\t\t\t\telse {openBrace = false;multilineVars.staves[lastVoice.staffNum].brace = 'end';}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '|':\n\t\t\t\t\t\t\taddContinueBar();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar vc = \"\";\n\t\t\t\t\t\t\twhile (t.type === 'alpha' || t.type === 'number') {\n\t\t\t\t\t\t\t\tvc += t.token;\n\t\t\t\t\t\t\t\tif (t.continueId)\n\t\t\t\t\t\t\t\t\tt = tokens.shift();\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar newStaff = !openParen || justOpenParen;\n\t\t\t\t\t\t\tvar bracket = justOpenBracket ? 'start' : openBracket ? 'continue' : undefined;\n\t\t\t\t\t\t\tvar brace = justOpenBrace ? 'start' : openBrace ? 'continue' : undefined;\n\t\t\t\t\t\t\taddVoice(vc, newStaff, bracket, brace, continueBar);\n\t\t\t\t\t\t\tjustOpenParen = false;\n\t\t\t\t\t\t\tjustOpenBracket = false;\n\t\t\t\t\t\t\tjustOpenBrace = false;\n\t\t\t\t\t\t\tcontinueBar = false;\n\t\t\t\t\t\t\tlastVoice = multilineVars.voices[vc];\n\t\t\t\t\t\t\tif (cmd === 'staves')\n\t\t\t\t\t\t\t\taddContinueBar();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"newpage\":\n\t\t\t\tvar pgNum = tokenizer.getInt(restOfString);\n\t\t\t\ttuneBuilder.addNewPage(pgNum.digits === 0 ? -1 : pgNum.value);\n\t\t\t\tbreak;\n\n\t\t\tcase \"abc\":\n\t\t\t\tvar arr = restOfString.split(' ');\n\t\t\t\tswitch (arr[0]) {\n\t\t\t\t\tcase \"-copyright\":\n\t\t\t\t\tcase \"-creator\":\n\t\t\t\t\tcase \"-edited-by\":\n\t\t\t\t\tcase \"-version\":\n\t\t\t\t\tcase \"-charset\":\n\t\t\t\t\t\tvar subCmd = arr.shift();\n\t\t\t\t\t\ttuneBuilder.addMetaText(cmd+subCmd, arr.join(' '), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+restOfString.length+5});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn \"Unknown directive: \" + cmd+arr[0];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"header\":\n\t\t\tcase \"footer\":\n\t\t\t\tvar footerStr = tokenizer.getMeat(restOfString, 0, restOfString.length);\n\t\t\t\tfooterStr = restOfString.substring(footerStr.start, footerStr.end);\n\t\t\t\tif (footerStr[0] === '\"' && footerStr[footerStr.length-1] === '\"' )\n\t\t\t\t\tfooterStr = footerStr.substring(1, footerStr.length-1);\n\t\t\t\tvar footerArr = footerStr.split('\\t');\n\t\t\t\tvar footer = {};\n\t\t\t\tif (footerArr.length === 1)\n\t\t\t\t\tfooter = { left: \"\", center: footerArr[0], right: \"\" };\n\t\t\t\telse if (footerArr.length === 2)\n\t\t\t\t\tfooter = { left: footerArr[0], center: footerArr[1], right: \"\" };\n\t\t\t\telse\n\t\t\t\t\tfooter = { left: footerArr[0], center: footerArr[1], right: footerArr[2] };\n\t\t\t\tif (footerArr.length > 3)\n\t\t\t\t\twarn(\"Too many tabs in \" + cmd + \": \" + footerArr.length + \" found.\", restOfString, 0);\n\n\t\t\t\ttuneBuilder.addMetaTextObj(cmd, footer, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+str.length});\n\t\t\t\tbreak;\n\n\t\t\tcase \"midi\":\n\t\t\t\tvar midi = tokenizer.tokenize(restOfString, 0, restOfString.length, true);\n\t\t\t\tif (midi.length > 0 && midi[0].token === '=')\n\t\t\t\t\tmidi.shift();\n\t\t\t\tif (midi.length === 0)\n\t\t\t\t\twarn(\"Expected midi command\", restOfString, 0);\n\t\t\t\telse\n\t\t\t\t\tparseMidiCommand(midi, tune, restOfString);\n\t\t\t\tbreak;\n\t\t\tcase \"percmap\":\n\t\t\t\tvar percmap = interpretPercMap(restOfString);\n\t\t\t\tif (percmap.error)\n\t\t\t\t\twarn(percmap.error, str, 8);\n\t\t\t\telse {\n\t\t\t\t\tif (!tune.formatting.percmap)\n\t\t\t\t\t\ttune.formatting.percmap = {};\n\t\t\t\t\ttune.formatting.percmap[percmap.key] = percmap.value;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"map\":\n\t\t\tcase \"playtempo\":\n\t\t\tcase \"auquality\":\n\t\t\tcase \"continuous\":\n\t\t\tcase \"nobarcheck\":\n\t\t\t\t// TODO-PER: Actually handle the parameters of these\n\t\t\t\ttune.formatting[cmd] = restOfString;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"Unknown directive: \" + cmd;\n\t\t}\n\t\treturn null;\n\t};\n\tparseDirective.globalFormatting = function(formatHash) {\n\t\tfor (var cmd in formatHash) {\n\t\t\tif (formatHash.hasOwnProperty(cmd)) {\n\t\t\t\tvar value = ''+formatHash[cmd];\n\t\t\t\tvar tokens = tokenizer.tokenize(value, 0, value.length);\n\t\t\t\tvar scratch;\n\t\t\t\tswitch (cmd) {\n\t\t\t\t\tcase \"titlefont\":\n\t\t\t\t\tcase \"gchordfont\":\n\t\t\t\t\tcase \"composerfont\":\n\t\t\t\t\tcase \"footerfont\":\n\t\t\t\t\tcase \"headerfont\":\n\t\t\t\t\tcase \"historyfont\":\n\t\t\t\t\tcase \"infofont\":\n\t\t\t\t\tcase \"measurefont\":\n\t\t\t\t\tcase \"partsfont\":\n\t\t\t\t\tcase \"repeatfont\":\n\t\t\t\t\tcase \"subtitlefont\":\n\t\t\t\t\tcase \"tempofont\":\n\t\t\t\t\tcase \"textfont\":\n\t\t\t\t\tcase \"voicefont\":\n\t\t\t\t\tcase \"tripletfont\":\n\t\t\t\t\tcase \"vocalfont\":\n\t\t\t\t\tcase \"wordsfont\":\n\t\t\t\t\tcase \"annotationfont\":\n\t\t\t\t\tcase \"tablabelfont\":\n\t\t\t\t\tcase \"tabnumberfont\":\n\t\t\t\t\tcase \"tabgracefont\":\n\t\t\t\t\t\tgetChangingFont(cmd, tokens, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"scale\":\n\t\t\t\t\t\tsetScale(cmd, tokens);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"partsbox\":\n\t\t\t\t\t\tscratch = addMultilineVarBool('partsBox', cmd, tokens);\n\t\t\t\t\t\tif (scratch !== null) warn(scratch);\n\t\t\t\t\t\tmultilineVars.partsfont.box = multilineVars.partsBox;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"freegchord\":\n\t\t\t\t\t\tscratch = addMultilineVarBool('freegchord', cmd, tokens);\n\t\t\t\t\t\tif (scratch !== null) warn(scratch);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"fontboxpadding\":\n\t\t\t\t\t\tif (tokens.length !== 1 || tokens[0].type !== 'number')\n\t\t\t\t\t\t\twarn(\"Directive \\\"\" + cmd + \"\\\" requires a number as a parameter.\");\n\t\t\t\t\t\ttune.formatting.fontboxpadding = tokens[0].floatt;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"stretchlast\":\n\t\t\t\t\t\tvar sl = parseStretchLast(tokens);\n\t\t\t\t\t\tif (sl.value !== undefined)\n\t\t\t\t\t\t\ttune.formatting.stretchlast = sl.value;\n\t\t\t\t\t\tif (sl.error)\n\t\t\t\t\t\t\treturn sl.error;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\twarn(\"Formatting directive unrecognized: \", cmd, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction parseStretchLast(tokens) {\n\t\tif (tokens.length === 0)\n\t\t\treturn { value: 1 }; // if there is no value then the presence of this is the same as \"true\"\n\t\telse if (tokens.length === 1) {\n\t\t\tif (tokens[0].type === \"number\") {\n\t\t\t\tif (tokens[0].floatt >= 0 || tokens[0].floatt <= 1)\n\t\t\t\t\treturn {value: tokens[0].floatt};\n\t\t\t} else if (tokens[0].token === 'false') {\n\t\t\t\treturn { value: 0 };\n\t\t\t} else if (tokens[0].token === 'true') {\n\t\t\t\treturn {value: 1};\n\t\t\t}\n\t\t}\n\t\treturn { error: \"Directive stretchlast requires zero or one parameter: false, true, or number between 0 and 1 (received \" + tokens[0].token + ')' };\n\t}\n})();\n\nexport default parseDirective;\n", "var allNotes = {};\n\nconst allPitches = [\n\t'C,,,', 'D,,,', 'E,,,', 'F,,,', 'G,,,', 'A,,,', 'B,,,',\n\t'C,,', 'D,,', 'E,,', 'F,,', 'G,,', 'A,,', 'B,,',\n\t'C,', 'D,', 'E,', 'F,', 'G,', 'A,', 'B,',\n\t'C', 'D', 'E', 'F', 'G', 'A', 'B',\n\t'c', 'd', 'e', 'f', 'g', 'a', 'b',\n\t\"c'\", \"d'\", \"e'\", \"f'\", \"g'\", \"a'\", \"b'\",\n\t\"c''\", \"d''\", \"e''\", \"f''\", \"g''\", \"a''\", \"b''\",\n\t\"c'''\", \"d'''\", \"e'''\", \"f'''\", \"g'''\", \"a'''\", \"b'''\",\n];\n\nallNotes.pitchIndex = function(noteName) {\n\treturn allPitches.indexOf(noteName)\n}\n\nallNotes.noteName = function(pitchIndex) {\n\treturn allPitches[pitchIndex]\n}\n\nexport default allNotes;\n", "var sharpChords = ['C', 'C♯', 'D', \"D♯\", 'E', 'F', \"F♯\", 'G', 'G♯', 'A', 'A♯', 'B'];\nvar flatChords = ['C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B'];\nvar sharpChordsFree = ['C', 'C#', 'D', \"D#\", 'E', 'F', \"F#\", 'G', 'G#', 'A', 'A#', 'B'];\nvar flatChordsFree = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n\nexport default function transposeChordName(chord, steps, preferFlats, freeGCchord) {\n\tif (!steps || (steps % 12 === 0)) // The chords are the same if it is an exact octave change.\n\t\treturn chord;\n\n\t// There are two things in the chord that might need to be transposed:\n\t// The chord will start with a letter from A-G, and might have one accidental after it.\n\t// That accidental might be an actual sharp or flat char, or it might be a pound sign or lower case \"b\".\n\t// Then there is a bunch of stuff that isn't transposed and should just be copied. That is stuff like \"7\" and more complicated chords.\n\t// But there is one other exception: right after a slash there will be a bass note and possibly an accidental. That should also be transposed.\n\n\twhile (steps < 0) steps += 12;\n\tif (steps > 11) steps = steps % 12;\n\n\t// (chord name w/accidental) (a bunch of stuff) (/) (bass note) (anything else)\n\tvar match = chord.match(/^([A-G][b#♭♯]?)([^\\/]+)?\\/?([A-G][b#♭♯]?)?(.+)?/)\n\tif (!match)\n\t\treturn chord; // We don't recognize the format of the chord, so skip it.\n\tvar name = match[1]\n\tvar extra1 = match[2]\n\tvar bass = match[3]\n\tvar extra2 = match[4]\n\tvar index = sharpChords.indexOf(name)\n\tif (index < 0)\n\t\tindex = flatChords.indexOf(name)\n\tif (index < 0)\n\t\tindex = sharpChordsFree.indexOf(name)\n\tif (index < 0)\n\t\tindex = flatChordsFree.indexOf(name)\n\tif (index < 0)\n\t\treturn chord; // This should never happen, but if we can't find the chord just bail.\n\n\tindex += steps\n\tindex = index % 12\n\n\tif (preferFlats) {\n\t\tif (freeGCchord) chord = flatChordsFree[index]\n\t\telse chord = flatChords[index]\n\t} else {\n\t\tif (freeGCchord) chord = sharpChordsFree[index]\n\t\telse chord = sharpChords[index]\n\t}\n\n\tif (extra1)\n\t\tchord += extra1\n\n\tif (bass) {\n\t\tvar index = sharpChords.indexOf(bass)\n\t\tif (index < 0)\n\t\t\tindex = flatChords.indexOf(bass)\n\t\tif (index < 0)\n\t\t\tindex = sharpChordsFree.indexOf(bass)\n\t\tif (index < 0)\n\t\t\tindex = flatChordsFree.indexOf(bass)\n\t\tchord += '/'\n\t\tif (index >= 0) {\n\t\t\tindex += steps\n\t\t\tindex = index % 12\n\t\t\tif (preferFlats) {\n\t\t\t\tif (freeGCchord) chord += flatChordsFree[index]\n\t\t\t\telse chord += flatChords[index]\n\t\t\t} else {\n\t\t\t\tif (freeGCchord) chord += sharpChordsFree[index]\n\t\t\t\telse chord += sharpChords[index]\n\t\t\t}\n\t\t} else\n\t\t\tchord += bass; // Don't know what to do so do nothing\n\t}\n\n\tif (extra2)\n\t\tchord += extra2\n\n\treturn chord;\n}\n\n", "// All these keys have the same number of accidentals\nvar keys = {\n\t'C': { modes: ['CMaj', 'Amin', 'Am', 'GMix', 'DDor', 'EPhr', 'FLyd', 'BLoc'], stepsFromC: 0 },\n\t'Db': { modes: ['DbMaj', 'Bbmin', 'Bbm', 'AbMix', 'EbDor', 'FPhr', 'GbLyd', 'CLoc'], stepsFromC: 1 },\n\t'D': { modes: ['DMaj', 'Bmin', 'Bm', 'AMix', 'EDor', 'F#Phr', 'GLyd', 'C#Loc'], stepsFromC: 2 },\n\t'Eb': { modes: ['EbMaj', 'Cmin', 'Cm', 'BbMix', 'FDor', 'GPhr', 'AbLyd', 'DLoc'], stepsFromC: 3 },\n\t'E': { modes: ['EMaj', 'C#min', 'C#m', 'BMix', 'F#Dor', 'G#Phr', 'ALyd', 'D#Loc'], stepsFromC: 4 },\n\t'F': { modes: ['FMaj', 'Dmin', 'Dm', 'CMix', 'GDor', 'APhr', 'BbLyd', 'ELoc'], stepsFromC: 5 },\n\t'Gb': { modes: ['GbMaj', 'Ebmin', 'Ebm', 'DbMix', 'AbDor', 'BbPhr', 'CbLyd', 'FLoc'], stepsFromC: 6 },\n\t'G': { modes: ['GMaj', 'Emin', 'Em', 'DMix', 'ADor', 'BPhr', 'CLyd', 'F#Loc'], stepsFromC: 7 },\n\t'Ab': { modes: ['AbMaj', 'Fmin', 'Fm', 'EbMix', 'BbDor', 'CPhr', 'DbLyd', 'GLoc'], stepsFromC: 8 },\n\t'A': { modes: ['AMaj', 'F#min', 'F#m', 'EMix', 'BDor', 'C#Phr', 'DLyd', 'G#Loc'], stepsFromC: 9 },\n\t'Bb': { modes: ['BbMaj', 'Gmin', 'Gm', 'FMix', 'CDor', 'DPhr', 'EbLyd', 'ALoc'], stepsFromC: 10 },\n\t'B': { modes: ['BMaj', 'G#min', 'G#m', 'F#Mix', 'C#Dor', 'D#Phr', 'ELyd', 'A#Loc'], stepsFromC: 11 },\n\t// Enharmonic keys\n\t'C#': { modes: ['C#Maj', 'A#min', 'A#m', 'G#Mix', 'D#Dor', 'E#Phr', 'F#Lyd', 'B#Loc'], stepsFromC: 1 },\n\t'F#': { modes: ['F#Maj', 'D#min', 'D#m', 'C#Mix', 'G#Dor', 'A#Phr', 'BLyd', 'E#Loc'], stepsFromC: 6 },\n\t'Cb': { modes: ['CbMaj', 'Abmin', 'Abm', 'GbMix', 'DbDor', 'EbPhr', 'FbLyd', 'BbLoc'], stepsFromC: 11 },\n}\n\nvar keyReverse = null\n\nfunction createKeyReverse() {\n\tkeyReverse = {}\n\tvar allKeys = Object.keys(keys)\n\tfor (var i = 0 ; i < allKeys.length; i++) {\n\t\tvar keyObj = keys[allKeys[i]]\n\t\tkeyReverse[allKeys[i].toLowerCase()] = allKeys[i];\n\t\tfor (var j = 0; j < keyObj.modes.length; j++) {\n\t\t\tvar mode = keyObj.modes[j].toLowerCase()\n\t\t\tkeyReverse[mode] = allKeys[i];\n\t\t}\n\t}\n}\n\nfunction relativeMajor(key) {\n\t// Translate a key to its relative major. If it doesn't exist, do the best we can\n\t// by just returning the original key.\n\t// There are alternate spellings of these - so the search needs to be case insensitive.\n\t// To make this efficient, the first time this is called the \"keys\" object is reversed so this search is fast in the future\n\tif (!keyReverse) {\n\t\tcreateKeyReverse()\n\t}\n\t// get the key portion itself - there might be other stuff, like extra sharps and flats, or the mode written out.\n\tvar mode = key.toLowerCase().match(/([a-g][b#]?)(maj|min|mix|dor|phr|lyd|loc|m)?/)\n\tif (!mode || !mode[2])\n\t\treturn key;\n\tmode = mode[1] + mode[2]\n\tvar maj = keyReverse[mode]\n\tif (maj)\n\t\treturn maj;\n\treturn key;\n}\n\nfunction relativeMode(majorKey, mode) {\n\t// The reverse of the relativeMajor. Translate it back to the original mode.\n\t// If it isn't a recognized mode or it is already major, then just return the major key.\n\tvar group = keys[majorKey]\n\tif (!group)\n\t\treturn majorKey;\n\tif (mode === '')\n\t\treturn majorKey;\n\tvar match = mode.toLowerCase().match(/^(maj|min|mix|dor|phr|lyd|loc|m)/)\n\tif (!match)\n\t\treturn majorKey\n\tvar regMode = match[1]\n\tfor (var i = 0; i < group.modes.length; i++) {\n\t\tvar thisMode = group.modes[i]\n\t\tvar ind = thisMode.toLowerCase().indexOf(regMode)\n\t\tif (ind !== -1 && ind === thisMode.length - regMode.length)\n\t\t\treturn thisMode.substring(0, thisMode.length - regMode.length)\n\t}\n\treturn majorKey;\n}\n\nfunction transposeKey(key, steps) {\n\t// This takes a major key and adds the desired steps.\n\t// It assigns each key a number that is the number of steps from C so that there can just be arithmetic.\n\tvar match = keys[key]\n\tif (!match)\n\t\treturn key;\n\twhile (steps < 0) steps += 12;\n\tvar fromC = (match.stepsFromC + steps) % 12;\n\tfor (var i = 0;  i < Object.keys(keys).length; i++) {\n\t\tvar k = Object.keys(keys)[i]\n\t\tif (keys[k].stepsFromC === fromC)\n\t\t\treturn k;\n\t}\n\treturn key;\n}\n\nexport {\n\trelativeMajor,\n\trelativeMode,\n\ttransposeKey\n};\n", "import { relativeMajor } from \"./relative-major.js\";\n\nvar key1sharp = { acc: 'sharp', note: 'f' };\nvar key2sharp = { acc: 'sharp', note: 'c' };\nvar key3sharp = { acc: 'sharp', note: 'g' };\nvar key4sharp = { acc: 'sharp', note: 'd' };\nvar key5sharp = { acc: 'sharp', note: 'A' };\nvar key6sharp = { acc: 'sharp', note: 'e' };\nvar key7sharp = { acc: 'sharp', note: 'B' };\nvar key1flat = { acc: 'flat', note: 'B' };\nvar key2flat = { acc: 'flat', note: 'e' };\nvar key3flat = { acc: 'flat', note: 'A' };\nvar key4flat = { acc: 'flat', note: 'd' };\nvar key5flat = { acc: 'flat', note: 'G' };\nvar key6flat = { acc: 'flat', note: 'c' };\nvar key7flat = { acc: 'flat', note: 'F' };\n\nvar keys = {\n\t'C#': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp],\n\t'F#': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp],\n\t'B': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp],\n\t'E': [key1sharp, key2sharp, key3sharp, key4sharp],\n\t'A': [key1sharp, key2sharp, key3sharp],\n\t'D': [key1sharp, key2sharp],\n\t'G': [key1sharp],\n\t'C': [],\n\t'F': [key1flat],\n\t'Bb': [key1flat, key2flat],\n\t'Eb': [key1flat, key2flat, key3flat],\n\t'Cm': [key1flat, key2flat, key3flat],\n\t'Ab': [key1flat, key2flat, key3flat, key4flat],\n\t'Db': [key1flat, key2flat, key3flat, key4flat, key5flat],\n\t'Gb': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat],\n\t'Cb': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat, key7flat],\n\n\t// The following are not in the 2.0 spec, but seem normal enough.\n\t// TODO-PER: These SOUND the same as what's written, but they aren't right\n\t'A#': [key1flat, key2flat],\n\t'B#': [],\n\t'D#': [key1flat, key2flat, key3flat],\n\t'E#': [key1flat],\n\t'G#': [key1flat, key2flat, key3flat, key4flat],\n\t'none': [],\n};\n\nexport default function keyAccidentals(key) {\n\tvar newKey = keys[relativeMajor(key)]\n\tif (!newKey) // If we don't recognize the key then there is no change\n\t\treturn null\n\treturn JSON.parse(JSON.stringify(newKey))\n};\n", "//    abc_transpose.js: Handles the automatic transposition of key signatures, chord symbols, and notes.\n\nimport allNotes           from './all-notes.js';\nimport transposeChordName from './transpose-chord.js';\nimport keyAccidentals     from '../const/key-accidentals.js';\n\nvar transpose = {};\n\nvar keyIndex = {\n\t'C': 0,\n\t'C#': 1,\n\t'Db': 1,\n\t'D': 2,\n\t'D#': 3,\n\t'Eb': 3,\n\t'E': 4,\n\t'F': 5,\n\t'F#': 6,\n\t'Gb': 6,\n\t'G': 7,\n\t'G#': 8,\n\t'Ab': 8,\n\t'A': 9,\n\t'A#': 10,\n\t'Bb': 10,\n\t'B': 11\n};\nvar newKey = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'];\nvar newKeyMinor = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\ntranspose.keySignature = function(multilineVars, keyName, root, acc, localTranspose) {\n\tif (multilineVars.clef.type === \"perc\" || multilineVars.clef.type === \"none\")\n\t\treturn { accidentals: keyAccidentals(keyName), root: root, acc: acc };\n\tif (!localTranspose) localTranspose = 0;\n\tmultilineVars.localTransposeVerticalMovement = 0;\n\tmultilineVars.localTransposePreferFlats = false;\n\tvar k = keyAccidentals(keyName);\n\tif (!k) return multilineVars.key; // If the key isn't in the list, it is non-standard. We won't attempt to transpose it.\n\tmultilineVars.localTranspose = (multilineVars.globalTranspose ? multilineVars.globalTranspose : 0) + localTranspose;\n\n\tif (!multilineVars.localTranspose)\n\t\treturn { accidentals: k, root: root, acc: acc };\n\tmultilineVars.globalTransposeOrigKeySig = k;\n\tif (multilineVars.localTranspose % 12 === 0) {\n\t\tmultilineVars.localTransposeVerticalMovement = (multilineVars.localTranspose / 12) * 7;\n\t\treturn { accidentals: k, root: root, acc: acc };\n\t}\n\n\tvar baseKey = keyName[0];\n\tif (keyName[1] === 'b' || keyName[1] === '#') {\n\t\tbaseKey += keyName[1];\n\t\tkeyName = keyName.substr(2);\n\t} else\n\t\tkeyName = keyName.substr(1);\n\tvar thisKeyIndex = keyIndex[baseKey]\n\tvar recognized = thisKeyIndex !== undefined\n\tif (!recognized) {\n\t\t// Either the key sig is \"none\" or we don't recognize it. Either way we don't change it, and we assume key of C for the purposes of this calculation.\n\t\tthisKeyIndex = 0\n\t\tbaseKey = \"C\"\n\t\tkeyName = \"\"\n\t}\n\tvar index = thisKeyIndex + multilineVars.localTranspose;\n\twhile (index < 0) index += 12;\n\tif (index > 11) index = index % 12;\n\tvar newKeyName = (keyName[0] === 'm' ? newKeyMinor[index] : newKey[index]);\n\tvar transposedKey = newKeyName + keyName;\n\tvar newKeySig = keyAccidentals(transposedKey);\n\tif (newKeySig.length > 0 && newKeySig[0].acc === 'flat')\n\t\tmultilineVars.localTransposePreferFlats = true;\n\tvar distance = transposedKey.charCodeAt(0) - baseKey.charCodeAt(0);\n\tif (multilineVars.localTranspose > 0) {\n\t\tif (distance < 0)\n\t\t\tdistance += 7;\n\t\telse if (distance === 0) {\n\t\t\t// There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n\t\t\t// If the distance is positive (we are raising pitch), and the change is higher (that is, Ab -> A), then raise an octave.\n\t\t\t// This test is easier because we know the keys are not equal (or we wouldn't get this far), so if the base key is a flat key, then\n\t\t\t// the transposed key must be higher. Likewise, if the transposed key is sharp, then the base key must be lower. And one\n\t\t\t// of those two things must be true because they are not both natural.\n\t\t\tif (baseKey[1] === '#' ||  transposedKey[1] === 'b')\n\t\t\t\tdistance += 7;\n\t\t}\n\t} else if (multilineVars.localTranspose < 0) {\n\t\tif (distance > 0)\n\t\t\tdistance -= 7;\n\t\telse if (distance === 0) {\n\t\t\t// There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n\t\t\t// If the distance is negative (we are dropping pitch), and the change is lower (that is, A -> Ab), then drop an octave.\n\t\t\tif (baseKey[1] === 'b' ||  transposedKey[1] === '#')\n\t\t\t\tdistance -= 7;\n\t\t}\n\t}\n\n\tif (multilineVars.localTranspose > 0)\n\t\tmultilineVars.localTransposeVerticalMovement = distance + Math.floor(multilineVars.localTranspose / 12) * 7;\n\telse\n\t\tmultilineVars.localTransposeVerticalMovement = distance + Math.ceil(multilineVars.localTranspose / 12) * 7;\n\tif (recognized)\n\t\treturn { accidentals: newKeySig, root: newKeyName[0], acc: newKeyName.length > 1 ? newKeyName[1] : \"\" };\n\telse\n\t\treturn { accidentals: [], root: root, acc: acc };\n};\n\ntranspose.chordName = function(multilineVars, chord) {\n\treturn transposeChordName(chord, multilineVars.localTranspose, multilineVars.localTransposePreferFlats, multilineVars.freegchord)\n};\n\nvar pitchToLetter = [ 'c', 'd', 'e', 'f', 'g', 'a', 'b' ];\nfunction accidentalChange(origPitch, newPitch, accidental, origKeySig, newKeySig) {\n\tvar origPitchLetter = pitchToLetter[(origPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\tvar origAccidental = 0;\n\tfor (var i = 0; i < origKeySig.length; i++) {\n\t\tif (origKeySig[i].note.toLowerCase() === origPitchLetter)\n\t\t\torigAccidental = accidentals[origKeySig[i].acc];\n\t}\n\n\tvar currentAccidental = accidentals[accidental];\n\tvar delta = currentAccidental - origAccidental;\n\n\tvar newPitchLetter = pitchToLetter[(newPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\tvar newAccidental = 0;\n\tfor (var j = 0; j < newKeySig.accidentals.length; j++) {\n\t\tif (newKeySig.accidentals[j].note.toLowerCase() === newPitchLetter)\n\t\t\tnewAccidental = accidentals[newKeySig.accidentals[j].acc];\n\t}\n\tvar calcAccidental = delta + newAccidental;\n\tif (calcAccidental < -2) {\n\t\tnewPitch--;\n\t\tcalcAccidental += (newPitchLetter === 'c' || newPitchLetter === 'f') ? 1 : 2;\n\t}\n\tif (calcAccidental > 2) {\n\t\tnewPitch++;\n\t\tcalcAccidental -= (newPitchLetter === 'b' || newPitchLetter === 'e') ? 1 : 2;\n\t}\n\treturn [newPitch, calcAccidental];\n}\n\nvar accidentals = {\n\tdblflat: -2,\n\tflat: -1,\n\tnatural: 0,\n\tsharp: 1,\n\tdblsharp: 2\n};\nvar accidentals2 = {\n\t\"-2\": \"dblflat\",\n\t\"-1\": \"flat\",\n\t\"0\": \"natural\",\n\t\"1\": \"sharp\",\n\t\"2\": \"dblsharp\"\n};\nvar accidentals3 = {\n\t\"-2\": \"__\",\n\t\"-1\": \"_\",\n\t\"0\": \"=\",\n\t\"1\": \"^\",\n\t\"2\": \"^^\"\n};\n//var count = 0\ntranspose.note = function(multilineVars, el) {\n\t// the \"el\" that is passed in has el.name, el.accidental, and el.pitch. \"pitch\" is the vertical position (0=middle C)\n\t// localTranspose is the number of half steps\n\t// localTransposeVerticalMovement is the vertical distance to move.\n\t//console.log(count++,multilineVars.localTranspose, el)\n\tif (!multilineVars.localTranspose || multilineVars.clef.type === \"perc\")\n\t\treturn;\n\tvar origPitch = el.pitch;\n\tif (multilineVars.localTransposeVerticalMovement) {\n\t\tel.pitch = el.pitch + multilineVars.localTransposeVerticalMovement;\n\t\tif (el.name) {\n\t\t\tvar actual = el.accidental ? el.name.substring(1) : el.name\n\t\t\tvar acc = el.accidental ? el.name[0] : ''\n\t\t\tvar p = allNotes.pitchIndex(actual)\n\t\t\tel.name = acc + allNotes.noteName(p+multilineVars.localTransposeVerticalMovement)\n\t\t}\n\t}\n\n\tif (el.accidental) {\n\t\tvar ret = accidentalChange(origPitch, el.pitch, el.accidental, multilineVars.globalTransposeOrigKeySig, multilineVars.targetKey);\n\t\tel.pitch = ret[0];\n\t\tel.accidental = accidentals2[ret[1]];\n\t\tif (el.name) {\n\t\t\tel.name = accidentals3[ret[1]] + el.name.replace(/[_^=]/g,'');\n\t\t}\n\t}\n\n};\n\nexport default transpose;\n", "import parseCommon    from './abc_common.js';\nimport parseDirective from './abc_parse_directive.js';\nimport transpose      from './abc_transpose.js';\n\nvar parseKeyVoice = {};\n\n(function() {\n\tvar tokenizer;\n\tvar warn;\n\tvar multilineVars;\n\tvar tune;\n\tvar tuneBuilder;\n\tparseKeyVoice.initialize = function(tokenizer_, warn_, multilineVars_, tune_, tuneBuilder_) {\n\t\ttokenizer = tokenizer_;\n\t\twarn = warn_;\n\t\tmultilineVars = multilineVars_;\n\t\ttune = tune_;\n\t\ttuneBuilder = tuneBuilder_;\n\t};\n\n\tparseKeyVoice.standardKey = function(keyName, root, acc, localTranspose) {\n\t\treturn transpose.keySignature(multilineVars, keyName, root, acc, localTranspose);\n\t};\n\n\tvar clefLines = {\n\t\t'treble': { clef: 'treble', pitch: 4, mid: 0 },\n\t\t'treble+8': { clef: 'treble+8', pitch: 4, mid: 0 },\n\t\t'treble-8': { clef: 'treble-8', pitch: 4, mid: 0 },\n\t\t'treble^8': { clef: 'treble+8', pitch: 4, mid: 0 },\n\t\t'treble_8': { clef: 'treble-8', pitch: 4, mid: 0 },\n\t\t'treble1': { clef: 'treble', pitch: 2, mid: 2 },\n\t\t'treble2': { clef: 'treble', pitch: 4, mid: 0 },\n\t\t'treble3': { clef: 'treble', pitch: 6, mid: -2 },\n\t\t'treble4': { clef: 'treble', pitch: 8, mid: -4 },\n\t\t'treble5': { clef: 'treble', pitch: 10, mid: -6 },\n\t\t'perc': { clef: 'perc', pitch: 6, mid: 0 },\n\t\t'none': { clef: 'none', mid: 0 },\n\t\t'bass': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass+8': { clef: 'bass+8', pitch: 8, mid: -12 },\n\t\t'bass-8': { clef: 'bass-8', pitch: 8, mid: -12 },\n\t\t'bass^8': { clef: 'bass+8', pitch: 8, mid: -12 },\n\t\t'bass_8': { clef: 'bass-8', pitch: 8, mid: -12 },\n\t\t'bass+16': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass-16': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass^16': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass_16': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass1': { clef: 'bass', pitch: 2, mid: -6 },\n\t\t'bass2': { clef: 'bass', pitch: 4, mid: -8 },\n\t\t'bass3': { clef: 'bass', pitch: 6, mid: -10 },\n\t\t'bass4': { clef: 'bass', pitch: 8, mid: -12 },\n\t\t'bass5': { clef: 'bass', pitch: 10, mid: -14 },\n\t\t'tenor': { clef: 'alto', pitch: 8, mid: -8 },\n\t\t'tenor1': { clef: 'alto', pitch: 2, mid: -2 },\n\t\t'tenor2': { clef: 'alto', pitch: 4, mid: -4 },\n\t\t'tenor3': { clef: 'alto', pitch: 6, mid: -6 },\n\t\t'tenor4': { clef: 'alto', pitch: 8, mid: -8 },\n\t\t'tenor5': { clef: 'alto', pitch: 10, mid: -10 },\n\t\t'alto': { clef: 'alto', pitch: 6, mid: -6 },\n\t\t'alto1': { clef: 'alto', pitch: 2, mid: -2 },\n\t\t'alto2': { clef: 'alto', pitch: 4, mid: -4 },\n\t\t'alto3': { clef: 'alto', pitch: 6, mid: -6 },\n\t\t'alto4': { clef: 'alto', pitch: 8, mid: -8 },\n\t\t'alto5': { clef: 'alto', pitch: 10, mid: -10 },\n\t\t'alto+8': { clef: 'alto+8', pitch: 6, mid: -6 },\n\t\t'alto-8': { clef: 'alto-8', pitch: 6, mid: -6 },\n\t\t'alto^8': { clef: 'alto+8', pitch: 6, mid: -6 },\n\t\t'alto_8': { clef: 'alto-8', pitch: 6, mid: -6 }\n\t};\n\n\tvar calcMiddle = function(clef, oct) {\n\t\tvar value = clefLines[clef];\n\t\tvar mid = value ? value.mid : 0;\n\t\treturn mid+oct;\n\t};\n\n\tparseKeyVoice.fixClef = function(clef) {\n\t\tvar value = clefLines[clef.type];\n\t\tif (value) {\n\t\t\tclef.clefPos = value.pitch;\n\t\t\tclef.type = value.clef;\n\t\t}\n\t};\n\n\tparseKeyVoice.deepCopyKey = function(key) {\n\t\tvar ret = { accidentals: [], root: key.root, acc: key.acc, mode: key.mode };\n\t\tkey.accidentals.forEach(function(k) {\n\t\tret.accidentals.push(parseCommon.clone(k));\n\t\t});\n\t\treturn ret;\n\t};\n\n\tvar pitches = {A: 5, B: 6, C: 0, D: 1, E: 2, F: 3, G: 4, a: 12, b: 13, c: 7, d: 8, e: 9, f: 10, g: 11};\n\n\tparseKeyVoice.addPosToKey = function(clef, key) {\n\t\t// Shift the key signature from the treble positions to whatever position is needed for the clef.\n\t\t// This may put the key signature unnaturally high or low, so if it does, then shift it.\n\t\tvar mid = clef.verticalPos;\n\t\tkey.accidentals.forEach(function(acc) {\n\t\t\tvar pitch = pitches[acc.note];\n\t\t\tpitch = pitch - mid;\n\t\t\tacc.verticalPos = pitch;\n\t\t});\n\t\tif (key.impliedNaturals)\n\t\t\tkey.impliedNaturals.forEach(function(acc) {\n\t\t\t\tvar pitch = pitches[acc.note];\n\t\t\t\tpitch = pitch - mid;\n\t\t\t\tacc.verticalPos = pitch;\n\t\t\t});\n\n\t\tif (mid < -10) {\n\t\t\tkey.accidentals.forEach(function(acc) {\n\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\tif (acc.verticalPos >= 11 || (acc.verticalPos === 10 && acc.acc === 'flat'))\n\t\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\tif (acc.note === 'A' && acc.acc === 'sharp' )\n\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t\tif ((acc.note === 'G' || acc.note === 'F') && acc.acc === 'flat' )\n\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t});\n\t\t\tif (key.impliedNaturals)\n\t\t\t\tkey.impliedNaturals.forEach(function(acc) {\n\t\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\t\tif (acc.verticalPos >= 11 || (acc.verticalPos === 10 && acc.acc === 'flat'))\n\t\t\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\t\tif (acc.note === 'A' && acc.acc === 'sharp' )\n\t\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t\t\tif ((acc.note === 'G' || acc.note === 'F') && acc.acc === 'flat' )\n\t\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t\t});\n\t\t} else if (mid < -4) {\n\t\t\tkey.accidentals.forEach(function(acc) {\n\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\tif (mid === -8 && (acc.note === 'f' || acc.note === 'g') && acc.acc === 'sharp' )\n\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t});\n\t\t\tif (key.impliedNaturals)\n\t\t\t\tkey.impliedNaturals.forEach(function(acc) {\n\t\t\t\t\tacc.verticalPos -= 7;\n\t\t\t\t\tif (mid === -8 && (acc.note === 'f' || acc.note === 'g') && acc.acc === 'sharp' )\n\t\t\t\t\t\tacc.verticalPos -=7;\n\t\t\t\t});\n\t\t} else if (mid >= 7) {\n\t\t\tkey.accidentals.forEach(function(acc) {\n\t\t\t\tacc.verticalPos += 7;\n\t\t\t});\n\t\t\tif (key.impliedNaturals)\n\t\t\t\tkey.impliedNaturals.forEach(function(acc) {\n\t\t\t\t\tacc.verticalPos += 7;\n\t\t\t\t});\n\t\t}\n\t};\n\n\tparseKeyVoice.fixKey = function(clef, key) {\n\t\tvar fixedKey = parseCommon.clone(key);\n\t\tparseKeyVoice.addPosToKey(clef, fixedKey);\n\t\treturn fixedKey;\n\t};\n\n\tvar parseMiddle = function(str) {\n\t\tvar i = 0;\n\t\tvar p = str[i++];\n\t\tif (p === '^' || p === '_')\n\t\t\tp = str[i++];\n\t  var mid = pitches[p];\n\t\tif (mid === undefined)\n\t\t\tmid = 6; // If a legal middle note wasn't received, just ignore it.\n\t\tfor ( ; i < str.length; i++) {\n\t\t\tif (str[i] === ',') mid -= 7;\n\t\t\telse if (str[i] === \"'\") mid += 7;\n\t\t\telse break;\n\t\t}\n\t\treturn { mid: mid - 6, str: str.substring(i) };\t// We get the note in the middle of the staff. We want the note that appears as the first ledger line below the staff.\n\t};\n\n\tvar normalizeAccidentals = function(accs) {\n\t\tfor (var i = 0; i < accs.length; i++) {\n\t\t\tif (accs[i].note === 'b')\n\t\t\t\taccs[i].note = 'B';\n\t\t\telse if (accs[i].note === 'a')\n\t\t\t\taccs[i].note = 'A';\n\t\t\telse if (accs[i].note === 'F')\n\t\t\t\taccs[i].note = 'f';\n\t\t\telse if (accs[i].note === 'E')\n\t\t\t\taccs[i].note = 'e';\n\t\t\telse if (accs[i].note === 'D')\n\t\t\t\taccs[i].note = 'd';\n\t\t\telse if (accs[i].note === 'C')\n\t\t\t\taccs[i].note = 'c';\n\t\t\telse if (accs[i].note === 'G' && accs[i].acc === 'sharp')\n\t\t\t\taccs[i].note = 'g';\n\t\t\telse if (accs[i].note === 'g' && accs[i].acc === 'flat')\n\t\t\t\taccs[i].note = 'G';\n\t\t}\n\t};\n\n\tparseKeyVoice.parseKey = function(str, isInline)\t// (and clef)\n\t{\n\t\t// returns:\n\t\t//\t\t{ foundClef: true, foundKey: true }\n\t\t// Side effects:\n\t\t//\t\tcalls warn() when there is a syntax error\n\t\t//\t\tsets these members of multilineVars:\n\t\t//\t\t\tclef\n\t\t//\t\t\tkey\n\t\t//\t\t\tstyle\n\t\t//\n\t\t// The format is:\n\t\t// K: [⟨key⟩] [⟨modifiers⟩*]\n\t\t// modifiers are any of the following in any order:\n\t\t//  [⟨clef⟩] [middle=⟨pitch⟩] [transpose=[-]⟨number⟩] [stafflines=⟨number⟩] [staffscale=⟨number⟩][style=⟨style⟩]\n\t\t// key is none|HP|Hp|⟨specified_key⟩\n\t\t// clef is [clef=] [⟨clef type⟩] [⟨line number⟩] [+8|-8]\n\t\t// specified_key is ⟨pitch⟩[#|b][mode(first three chars are significant)][accidentals*]\n\t\tif (str.length === 0) {\n\t\t\t// an empty K: field is the same as K:none\n\t\t\tstr = 'none';\n\t\t}\n\t\tvar tokens = tokenizer.tokenize(str, 0, str.length);\n\t\tvar ret = {};\n\n\t\t// Be sure that a key was passed in\n\t\tif (tokens.length === 0) {\n\t\t\twarn(\"Must pass in key signature.\", str, 0);\n\t\t\treturn ret;\n\t\t}\n\n\t\t// first the key\n\t\tswitch (tokens[0].token) {\n\t\t\tcase 'HP':\n\t\t\t\tparseDirective.addDirective(\"bagpipes\");\n\t\t\t\tmultilineVars.key = { root: \"HP\", accidentals: [], acc: \"\", mode: \"\" };\n\t\t\t\tret.foundKey = true;\n\t\t\t\ttokens.shift();\n\t\t\t\tbreak;\n\t\t\tcase 'Hp':\n\t\t\t\tparseDirective.addDirective(\"bagpipes\");\n\t\t\t\tmultilineVars.key = { root: \"Hp\", accidentals: [{acc: 'natural', note: 'g'}, {acc: 'sharp', note: 'f'}, {acc: 'sharp', note: 'c'}], acc: \"\", mode: \"\" };\n\t\t\t\tret.foundKey = true;\n\t\t\t\ttokens.shift();\n\t\t\t\tbreak;\n\t\t\tcase 'none':\n\t\t\t\t// we got the none key - that's the same as C to us\n\t\t\t\tmultilineVars.key = { root: \"none\", accidentals: [], acc: \"\", mode: \"\" };\n\t\t\t\tret.foundKey = true;\n\t\t\t\ttokens.shift();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tvar retPitch = tokenizer.getKeyPitch(tokens[0].token);\n\t\t\t\tif (retPitch.len > 0) {\n\t\t\t\t\tret.foundKey = true;\n\t\t\t\t\tvar acc = \"\";\n\t\t\t\t\tvar mode = \"\";\n\t\t\t\t\t// The accidental and mode might be attached to the pitch, so we might want to just remove the first character.\n\t\t\t\t\tif (tokens[0].token.length > 1)\n\t\t\t\t\t\ttokens[0].token = tokens[0].token.substring(1);\n\t\t\t\t\telse\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\tvar key = retPitch.token;\n\t\t\t\t\t// We got a pitch to start with, so we might also have an accidental and a mode\n\t\t\t\t\tif (tokens.length > 0) {\n\t\t\t\t\t\tvar retAcc = tokenizer.getSharpFlat(tokens[0].token);\n\t\t\t\t\t\tif (retAcc.len > 0) {\n\t\t\t\t\t\t\tif (tokens[0].token.length > 1)\n\t\t\t\t\t\t\t\ttokens[0].token = tokens[0].token.substring(1);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t\t\tkey += retAcc.token;\n\t\t\t\t\t\t\tacc = retAcc.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tokens.length > 0) {\n\t\t\t\t\t\t\tvar retMode = tokenizer.getMode(tokens[0].token);\n\t\t\t\t\t\t\tif (retMode.len > 0) {\n\t\t\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t\t\t\tkey += retMode.token;\n\t\t\t\t\t\t\t\tmode = retMode.token;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Be sure that the key specified is in the list: not all keys are physically possible, like Cbmin.\n\t\t\t\t\t\tif (parseKeyVoice.standardKey(key, retPitch.token, acc, 0) === undefined) {\n\t\t\t\t\t\t\twarn(\"Unsupported key signature: \" + key, str, 0);\n\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// We need to do a deep copy because we are going to modify it\n\t\t\t\t\tvar oldKey = parseKeyVoice.deepCopyKey(multilineVars.key);\n\t\t\t\t\t//TODO-PER: HACK! To get the local transpose to work, the transposition is done for each line. This caused the global transposition variable to be factored in twice, so, instead of rewriting that right now, I'm just subtracting one of them here.\n\t\t\t\t\tvar keyCompensate = !isInline && multilineVars.globalTranspose ? -multilineVars.globalTranspose : 0;\n\t\t\t\t\t//console.log(\"parse\", JSON.stringify(multilineVars), isInline)\n\t\t\t\t\tvar savedOrigKey;\n\t\t\t\t\tif (isInline)\n\t\t\t\t\t\tsavedOrigKey = multilineVars.globalTransposeOrigKeySig\n\t\t\t\t\tmultilineVars.key = parseKeyVoice.deepCopyKey(parseKeyVoice.standardKey(key, retPitch.token, acc, keyCompensate));\n\t\t\t\t\tif (isInline)\n\t\t\t\t\t\tmultilineVars.globalTransposeOrigKeySig = savedOrigKey\n\t\t\t\t\tmultilineVars.key.mode = mode;\n\t\t\t\t\tif (oldKey) {\n\t\t\t\t\t\t// Add natural in all places that the old key had an accidental.\n\t\t\t\t\t\tvar kk;\n\t\t\t\t\t\tfor (var k = 0; k < multilineVars.key.accidentals.length; k++) {\n\t\t\t\t\t\t\tfor (kk = 0; kk < oldKey.accidentals.length; kk++) {\n\t\t\t\t\t\t\t\tif (oldKey.accidentals[kk].note && multilineVars.key.accidentals[k].note.toLowerCase() === oldKey.accidentals[kk].note.toLowerCase())\n\t\t\t\t\t\t\t\t\toldKey.accidentals[kk].note = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (kk = 0; kk < oldKey.accidentals.length; kk++) {\n\t\t\t\t\t\t\tif (oldKey.accidentals[kk].note) {\n\t\t\t\t\t\t\t\tif (!multilineVars.key.impliedNaturals)\n\t\t\t\t\t\t\t\t\tmultilineVars.key.impliedNaturals = [];\n\t\t\t\t\t\t\t\tmultilineVars.key.impliedNaturals.push({ acc: 'natural', note: oldKey.accidentals[kk].note });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// There are two special cases of deprecated syntax. Ignore them if they occur\n\t\tif (tokens.length === 0) return ret;\n\t\tif (tokens[0].token === 'exp') tokens.shift();\n\t\tif (tokens.length === 0) return ret;\n\t\tif (tokens[0].token === 'oct') tokens.shift();\n\n\t\t// now see if there are extra accidentals\n\t\tif (tokens.length === 0) return ret;\n\t\tvar accs = tokenizer.getKeyAccidentals2(tokens);\n\t\tif (accs.warn)\n\t\t\twarn(accs.warn, str, 0);\n\t\t// If we have extra accidentals, first replace ones that are of the same pitch before adding them to the end.\n\t\tif (accs.accs) {\n\t\t\tif (!ret.foundKey) {\t\t// if there are only extra accidentals, make sure this is set.\n\t\t\t\tret.foundKey = true;\n\t\t\t\tmultilineVars.key = { root: \"none\", acc: \"\", mode: \"\", accidentals: [] };\n\t\t\t}\n\t\t\tnormalizeAccidentals(accs.accs);\n\t\t\tfor (var i = 0; i < accs.accs.length; i++) {\n\t\t\t\tvar found = false;\n\t\t\t\tfor (var j = 0; j < multilineVars.key.accidentals.length && !found; j++) {\n\t\t\t\t\tif (multilineVars.key.accidentals[j].note === accs.accs[i].note) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tif (multilineVars.key.accidentals[j].acc !== accs.accs[i].acc) {\n\t\t\t\t\t\t\t// If the accidental is different, then replace it. If it is the same, then the declaration was redundant, so just ignore it.\n\t\t\t\t\t\t\tmultilineVars.key.accidentals[j].acc = accs.accs[i].acc;\n\t\t\t\t\t\t\tif (!multilineVars.key.explicitAccidentals)\n\t\t\t\t\t\t\t\tmultilineVars.key.explicitAccidentals = [];\n\t\t\t\t\t\t\tmultilineVars.key.explicitAccidentals.push(accs.accs[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!found) {\n\t\t\t\t\tif (!multilineVars.key.explicitAccidentals)\n\t\t\t\t\t\tmultilineVars.key.explicitAccidentals = [];\n\t\t\t\t\tmultilineVars.key.explicitAccidentals.push(accs.accs[i]);\n\t\t\t\t\tmultilineVars.key.accidentals.push(accs.accs[i]);\n\t\t\t\t\tif (multilineVars.key.impliedNaturals) {\n\t\t\t\t\t\tfor (var kkk = 0; kkk < multilineVars.key.impliedNaturals.length; kkk++) {\n\t\t\t\t\t\t\tif (multilineVars.key.impliedNaturals[kkk].note === accs.accs[i].note)\n\t\t\t\t\t\t\t\tmultilineVars.key.impliedNaturals.splice(kkk, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now see if any optional parameters are present. They have the form \"key=value\", except that \"clef=\" is optional\n\t\tvar token;\n\t\twhile (tokens.length > 0) {\n\t\t\tswitch (tokens[0].token) {\n\t\t\t\tcase \"m\":\n\t\t\t\tcase \"middle\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after middle\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after middle\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after middle=\", str, 0); return ret; }\n\t\t\t\t\tvar pitch = tokenizer.getPitchFromTokens(tokens);\n\t\t\t\t\tif (pitch.warn)\n\t\t\t\t\t\twarn(pitch.warn, str, 0);\n\t\t\t\t\tif (pitch.position)\n\t\t\t\t\t\tmultilineVars.clef.verticalPos = pitch.position - 6;\t// we get the position from the middle line, but want to offset it to the first ledger line.\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"transpose\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after transpose\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after transpose\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after transpose=\", str, 0); return ret; }\n\t\t\t\t\tif (tokens[0].type !== 'number') { warn(\"Expected number after transpose\", str, tokens[0].start); break; }\n\t\t\t\t\tmultilineVars.clef.transpose = tokens[0].intt;\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"stafflines\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after stafflines\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after stafflines\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after stafflines=\", str, 0); return ret; }\n\t\t\t\t\tif (tokens[0].type !== 'number') { warn(\"Expected number after stafflines\", str, tokens[0].start); break; }\n\t\t\t\t\tmultilineVars.clef.stafflines = tokens[0].intt;\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"staffscale\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after staffscale\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after staffscale\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after staffscale=\", str, 0); return ret; }\n\t\t\t\t\tif (tokens[0].type !== 'number') { warn(\"Expected number after staffscale\", str, tokens[0].start); break; }\n\t\t\t\t\tmultilineVars.clef.staffscale = tokens[0].floatt;\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"octave\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after octave\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after octave\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after octave=\", str, 0); return ret; }\n\t\t\t\t\tif (tokens[0].type !== 'number') { warn(\"Expected number after octave\", str, tokens[0].start); break; }\n\t\t\t\t\tmultilineVars.octave = tokens[0].intt;\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"style\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after style\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after style\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after style=\", str, 0); return ret; }\n\t\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\t\tcase \"normal\":\n\t\t\t\t\t\tcase \"harmonic\":\n\t\t\t\t\t\tcase \"rhythm\":\n\t\t\t\t\t\tcase \"x\":\n\t\t\t\t\t\tcase \"triangle\":\n\t\t\t\t\t\t\tmultilineVars.style = tokens[0].token;\n\t\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\twarn(\"error parsing style element: \" + tokens[0].token, str, tokens[0].start);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"clef\":\n\t\t\t\t\ttokens.shift();\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected = after clef\", str, 0); return ret; }\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.token !== \"=\") { warn(\"Expected = after clef\", str, token.start); break; }\n\t\t\t\t\tif (tokens.length === 0) { warn(\"Expected parameter after clef=\", str, 0); return ret; }\n\t\t\t\t\t//break; yes, we want to fall through. That allows \"clef=\" to be optional.\n\t\t\t\tcase \"treble\":\n\t\t\t\tcase \"bass\":\n\t\t\t\tcase \"alto\":\n\t\t\t\tcase \"tenor\":\n\t\t\t\tcase \"perc\":\n\t\t\t\tcase \"none\":\n\t\t\t\t\t// clef is [clef=] [⟨clef type⟩] [⟨line number⟩] [+8|-8]\n\t\t\t\t\tvar clef = tokens.shift();\n\t\t\t\t\tswitch (clef.token) {\n\t\t\t\t\t\tcase 'treble':\n\t\t\t\t\t\tcase 'tenor':\n\t\t\t\t\t\tcase 'alto':\n\t\t\t\t\t\tcase 'bass':\n\t\t\t\t\t\tcase 'perc':\n\t\t\t\t\t\tcase 'none':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'C': clef.token = 'alto'; break;\n\t\t\t\t\t\tcase 'F': clef.token = 'bass'; break;\n\t\t\t\t\t\tcase 'G': clef.token = 'treble'; break;\n\t\t\t\t\t\tcase 'c': clef.token = 'alto'; break;\n\t\t\t\t\t\tcase 'f': clef.token = 'bass'; break;\n\t\t\t\t\t\tcase 'g': clef.token = 'treble'; break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\twarn(\"Expected clef name. Found \" + clef.token, str, clef.start);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (tokens.length > 0 && tokens[0].type === 'number') {\n\t\t\t\t\t\tclef.token += tokens[0].token;\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t}\n\t\t\t\t\tif (tokens.length > 1 && (tokens[0].token === '-' || tokens[0].token === '+' || tokens[0].token === '^' || tokens[0].token === '_') && tokens[1].token === '8') {\n\t\t\t\t\t\tclef.token += tokens[0].token + tokens[1].token;\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\t}\n\t\t\t\t\tmultilineVars.clef = {type: clef.token, verticalPos: calcMiddle(clef.token, 0)};\n\t\t\t\t\tif (multilineVars.currentVoice && multilineVars.currentVoice.transpose !== undefined)\n\t\t\t\t\t\tmultilineVars.clef.transpose = multilineVars.currentVoice.transpose;\n\t\t\t\t\tret.foundClef = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\twarn(\"Unknown parameter: \" + tokens[0].token, str, tokens[0].start);\n\t\t\t\t\ttokens.shift();\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\tvar setCurrentVoice = function(id) {\n\t\tmultilineVars.currentVoice = multilineVars.voices[id];\n\t\ttuneBuilder.setCurrentVoice(multilineVars.currentVoice.staffNum, multilineVars.currentVoice.index);\n\t};\n\n\tparseKeyVoice.parseVoice = function(line, i, e) {\n\t\t//First truncate the string to the first non-space character after V: through either the\n\t\t//end of the line or a % character. Then remove trailing spaces, too.\n\t\tvar ret = tokenizer.getMeat(line, i, e);\n\t\tvar start = ret.start;\n\t\tvar end = ret.end;\n\t\t//The first thing on the line is the ID. It can be any non-space string and terminates at the\n\t\t//first space.\n\t\tvar id = tokenizer.getToken(line, start, end);\n\t\tif (id.length === 0) {\n\t\t\twarn(\"Expected a voice id\", line, start);\n\t\t\treturn;\n\t\t}\n\t\tvar isNew = false;\n\t\tif (multilineVars.voices[id] === undefined) {\n\t\t\tmultilineVars.voices[id] = {};\n\t\t\tisNew = true;\n\t\t\tif (multilineVars.score_is_present)\n\t\t\t\twarn(\"Can't have an unknown V: id when the %score directive is present\", line, start);\n\t\t}\n\t\tstart += id.length;\n\t\tstart += tokenizer.eatWhiteSpace(line, start);\n\n\t\tvar staffInfo = {startStaff: isNew};\n\t\tvar addNextTokenToStaffInfo = function(name) {\n\t\t\tvar attr = tokenizer.getVoiceToken(line, start, end);\n\t\t\tif (attr.warn !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.warn, line, start);\n\t\t\telse if (attr.err !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.err, line, start);\n\t\t\telse if (attr.token.length === 0 && line[start] !== '\"')\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice\", line, start);\n\t\t\telse\n\t\t\t\tstaffInfo[name] = attr.token;\n\t\t\tstart += attr.len;\n\t\t};\n\t\tvar addNextTokenToVoiceInfo = function(id, name, type) {\n\t\t\tvar attr = tokenizer.getVoiceToken(line, start, end);\n\t\t\tif (attr.warn !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.warn, line, start);\n\t\t\telse if (attr.err !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.err, line, start);\n\t\t\telse if (attr.token.length === 0 && line[start] !== '\"')\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice\", line, start);\n\t\t\telse {\n\t\t\t\tif (type === 'number')\n\t\t\t\t\tattr.token = parseFloat(attr.token);\n\t\t\t\tmultilineVars.voices[id][name] = attr.token;\n\t\t\t}\n\t\t\tstart += attr.len;\n\t\t};\n\t\tvar getNextToken = function(name, type) {\n\t\t\tvar attr = tokenizer.getVoiceToken(line, start, end);\n\t\t\tif (attr.warn !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.warn, line, start);\n\t\t\telse if (attr.err !== undefined)\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice: \" + attr.err, line, start);\n\t\t\telse if (attr.token.length === 0 && line[start] !== '\"')\n\t\t\t\twarn(\"Expected value for \" + name + \" in voice\", line, start);\n\t\t\telse {\n\t\t\t\tif (type === 'number')\n\t\t\t\t\tattr.token = parseFloat(attr.token);\n\t\t\t\treturn attr.token;\n\t\t\t}\n\t\t\tstart += attr.len;\n\t\t};\n\t\tvar addNextNoteTokenToVoiceInfo = function(id, name) {\n\t\t\tvar noteToTransposition = {\n\t\t\t\t\"_B\": 2,\n\t\t\t\t\"_E\": 9,\n\t\t\t\t\"_b\": -10,\n\t\t\t\t\"_e\": -3\n\t\t\t};\n\t\t\tvar attr = tokenizer.getVoiceToken(line, start, end);\n\t\t\tif (attr.warn !== undefined)\n\t\t\t\twarn(\"Expected one of (_B, _E, _b, _e) for \" + name + \" in voice: \" + attr.warn, line, start);\n\t\t\telse if (attr.token.length === 0 && line[start] !== '\"')\n\t\t\t\twarn(\"Expected one of (_B, _E, _b, _e) for \" + name + \" in voice\", line, start);\n\t\t\telse {\n\t\t\t\tvar t = noteToTransposition[attr.token];\n\t\t\t\tif (!t)\n\t\t\t\t\twarn(\"Expected one of (_B, _E, _b, _e) for \" + name + \" in voice\", line, start);\n\t\t\t\telse\n\t\t\t\t\tmultilineVars.voices[id][name] = t;\n\t\t\t}\n\t\t\tstart += attr.len;\n\t\t};\n\n\t\t//Then the following items can occur in any order:\n\t\twhile (start < end) {\n\t\t\tvar token = tokenizer.getVoiceToken(line, start, end);\n\t\t\tstart += token.len;\n\n\t\t\tif (token.warn) {\n\t\t\t\twarn(\"Error parsing voice: \" + token.warn, line, start);\n\t\t\t} else {\n\t\t\t\tvar attr = null;\n\t\t\t\tswitch (token.token) {\n\t\t\t\t\tcase 'clef':\n\t\t\t\t\tcase 'cl':\n\t\t\t\t\t\taddNextTokenToStaffInfo('clef');\n\t\t\t\t\t\t// TODO-PER: check for a legal clef; do octavizing\n\t\t\t\t\t\tvar oct = 0;\n\t//\t\t\t\t\t\t\tfor (var ii = 0; ii < staffInfo.clef.length; ii++) {\n\t//\t\t\t\t\t\t\t\tif (staffInfo.clef[ii] === ',') oct -= 7;\n\t//\t\t\t\t\t\t\t\telse if (staffInfo.clef[ii] === \"'\") oct += 7;\n\t//\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif (staffInfo.clef !== undefined) {\n\t\t\t\t\t\t  staffInfo.clef = staffInfo.clef.replace(/[',]/g, \"\"); //'//comment for emacs formatting of regexp\n\t\t\t\t\t\t\tif (staffInfo.clef.indexOf('+16') !== -1) {\n\t\t\t\t\t\t\t\toct += 14;\n\t\t\t\t\t\t\t\tstaffInfo.clef = staffInfo.clef.replace('+16', '');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstaffInfo.verticalPos = calcMiddle(staffInfo.clef, oct);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'treble':\n\t\t\t\t\tcase 'bass':\n\t\t\t\t\tcase 'tenor':\n\t\t\t\t\tcase 'alto':\n\t\t\t\t\tcase 'perc':\n\t\t\t\t\tcase 'none':\n\t\t\t\t\tcase 'treble\\'':\n\t\t\t\t\tcase 'bass\\'':\n\t\t\t\t\tcase 'tenor\\'':\n\t\t\t\t\tcase 'alto\\'':\n\t\t\t\t\tcase 'none\\'':\n\t\t\t\t\tcase 'treble\\'\\'':\n\t\t\t\t\tcase 'bass\\'\\'':\n\t\t\t\t\tcase 'tenor\\'\\'':\n\t\t\t\t\tcase 'alto\\'\\'':\n\t\t\t\t\tcase 'none\\'\\'':\n\t\t\t\t\tcase 'treble,':\n\t\t\t\t\tcase 'bass,':\n\t\t\t\t\tcase 'tenor,':\n\t\t\t\t\tcase 'alto,':\n\t\t\t\t\tcase 'none,':\n\t\t\t\t\tcase 'treble,,':\n\t\t\t\t\tcase 'bass,,':\n\t\t\t\t\tcase 'tenor,,':\n\t\t\t\t\tcase 'alto,,':\n\t\t\t\t\tcase 'none,,':\n\t\t\t\t\t\t// TODO-PER: handle the octave indicators on the clef by changing the middle property\n\t\t\t\t\t\tvar oct2 = 0;\n\t//\t\t\t\t\t\t\tfor (var iii = 0; iii < token.token.length; iii++) {\n\t//\t\t\t\t\t\t\t\tif (token.token[iii] === ',') oct2 -= 7;\n\t//\t\t\t\t\t\t\t\telse if (token.token[iii] === \"'\") oct2 += 7;\n\t//\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t  staffInfo.clef = token.token.replace(/[',]/g, \"\"); //'//comment for emacs formatting of regexp\n\t\t\t\t\t\tstaffInfo.verticalPos = calcMiddle(staffInfo.clef, oct2);\n\t\t\t\t\t\tmultilineVars.voices[id].clef = token.token;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'staves':\n\t\t\t\t\tcase 'stave':\n\t\t\t\t\tcase 'stv':\n\t\t\t\t\t\taddNextTokenToStaffInfo('staves');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'brace':\n\t\t\t\t\tcase 'brc':\n\t\t\t\t\t\taddNextTokenToStaffInfo('brace');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bracket':\n\t\t\t\t\tcase 'brk':\n\t\t\t\t\t\taddNextTokenToStaffInfo('bracket');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'name':\n\t\t\t\t\tcase 'nm':\n\t\t\t\t\t\taddNextTokenToStaffInfo('name');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'subname':\n\t\t\t\t\tcase 'sname':\n\t\t\t\t\tcase 'snm':\n\t\t\t\t\t\taddNextTokenToStaffInfo('subname');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'merge':\n\t\t\t\t\t\tstaffInfo.startStaff = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'stem':\n\t\t\t\t\tcase 'stems':\n\t\t\t\t\t\tattr = tokenizer.getVoiceToken(line, start, end);\n\t\t\t\t\t\tif (attr.warn !== undefined)\n\t\t\t\t\t\t\twarn(\"Expected value for stems in voice: \" + attr.warn, line, start);\n\t\t\t\t\t\telse if (attr.err !== undefined)\n\t\t\t\t\t\t\twarn(\"Expected value for stems in voice: \" + attr.err, line, start);\n\t\t\t\t\t\telse if (attr.token === 'up' || attr.token === 'down')\n\t\t\t\t\t\t\tmultilineVars.voices[id].stem = attr.token;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twarn(\"Expected up or down for voice stem\", line, start);\n\t\t\t\t\t\tstart += attr.len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'up':\n\t\t\t\t\tcase 'down':\n\t\t\t\t\t\tmultilineVars.voices[id].stem = token.token;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'middle':\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\taddNextTokenToStaffInfo('verticalPos');\n\t\t\t\t\t\tstaffInfo.verticalPos = parseMiddle(staffInfo.verticalPos).mid;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'gchords':\n\t\t\t\t\tcase 'gch':\n\t\t\t\t\t\tmultilineVars.voices[id].suppressChords = true;\n\t\t\t\t\t\t// gchords can stand on its own, or it could be gchords=0.\n\t\t\t\t\t\tattr = tokenizer.getVoiceToken(line, start, end);\n\t\t\t\t\t\tif (attr.token === \"0\")\n\t\t\t\t\t\t\tstart = start + attr.len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'space':\n\t\t\t\t\tcase 'spc':\n\t\t\t\t\t\taddNextTokenToStaffInfo('spacing');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'scale', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'score':\n\t\t\t\t\t\taddNextNoteTokenToVoiceInfo(id, 'scoreTranspose');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transpose':\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'transpose', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'stafflines':\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'stafflines', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'staffscale':\n\t\t\t\t\t\t// TODO-PER: This is passed to the engraver, but the engraver ignores it.\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'staffscale', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'octave':\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'octave', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'volume':\n\t\t\t\t\t\t// TODO-PER: This is accepted, but not implemented, yet.\n\t\t\t\t\t\taddNextTokenToVoiceInfo(id, 'volume', 'number');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cue':\n\t\t\t\t\t\t// TODO-PER: This is accepted, but not implemented, yet.\n\t\t\t\t\t\tvar cue = getNextToken('cue', 'string');\n\t\t\t\t\t\tif (cue === 'on')\n\t\t\t\t\t\t\tmultilineVars.voices[id].scale = 0.6;\n\t\t\t\t\t\telse multilineVars.voices[id].scale = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"style\":\n\t\t\t\t\t\tattr = tokenizer.getVoiceToken(line, start, end);\n\t\t\t\t\t\tif (attr.warn !== undefined)\n\t\t\t\t\t\t\twarn(\"Expected value for style in voice: \" + attr.warn, line, start);\n\t\t\t\t\t\telse if (attr.err !== undefined)\n\t\t\t\t\t\t\twarn(\"Expected value for style in voice: \" + attr.err, line, start);\n\t\t\t\t\t\telse if (attr.token === 'normal' || attr.token === 'harmonic' || attr.token === 'rhythm' || attr.token === 'x' || attr.token === 'triangle')\n\t\t\t\t\t\t\tmultilineVars.voices[id].style = attr.token;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twarn(\"Expected one of [normal, harmonic, rhythm, x, triangle] for voice style\", line, start);\n\t\t\t\t\t\tstart += attr.len;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// default:\n\t\t\t\t\t// Use this to find V: usages that aren't handled.\n\t\t\t\t\t// \tconsole.log(\"parse voice\", token, tune.metaText.title);\n\t\t\t\t}\n\t\t\t}\n\t\t\tstart += tokenizer.eatWhiteSpace(line, start);\n\t\t}\n\n\t\t// now we've filled up staffInfo, figure out what to do with this voice\n\t\t// TODO-PER: It is unclear from the standard and the examples what to do with brace, bracket, and staves, so they are ignored for now.\n\t\tif (staffInfo.startStaff || multilineVars.staves.length === 0) {\n\t\t\tmultilineVars.staves.push({index: multilineVars.staves.length, meter: multilineVars.origMeter});\n\t\t\tif (!multilineVars.score_is_present)\n\t\t\t\tmultilineVars.staves[multilineVars.staves.length-1].numVoices = 0;\n\t\t}\n\t\tif (multilineVars.voices[id].staffNum === undefined) {\n\t\t\t// store where to write this for quick access later.\n\t\t\tmultilineVars.voices[id].staffNum = multilineVars.staves.length-1;\n\t\t\tvar vi = 0;\n\t\t\tfor(var v in multilineVars.voices) {\n\t\t\t\tif(multilineVars.voices.hasOwnProperty(v)) {\n\t\t\t\t\tif (multilineVars.voices[v].staffNum === multilineVars.voices[id].staffNum)\n\t\t\t\t\t\tvi++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmultilineVars.voices[id].index = vi-1;\n\t\t}\n\t\tvar s = multilineVars.staves[multilineVars.voices[id].staffNum];\n\t\tif (!multilineVars.score_is_present)\n\t\t\ts.numVoices++;\n\t\tif (staffInfo.clef) s.clef = {type: staffInfo.clef, verticalPos: staffInfo.verticalPos};\n\t\tif (staffInfo.spacing) s.spacing_below_offset = staffInfo.spacing;\n\t\tif (staffInfo.verticalPos) s.verticalPos = staffInfo.verticalPos;\n\n\t\tif (staffInfo.name) {if (s.name) s.name.push(staffInfo.name); else s.name = [ staffInfo.name ];}\n\t\tif (staffInfo.subname) {if (s.subname) s.subname.push(staffInfo.subname); else s.subname = [ staffInfo.subname ];}\n\n\t\tsetCurrentVoice(id);\n\t};\n\n})();\n\nexport default parseKeyVoice;\n", "//    abc_parse_header.js: parses a the header fields from a string representing ABC Music Notation into a usable internal structure.\n\nimport parseCommon    from './abc_common.js';\nimport parseDirective from './abc_parse_directive.js';\nimport parseKeyVoice  from './abc_parse_key_voice.js';\n\nexport default function(tokenizer, warn, multilineVars, tune, tuneBuilder) {\n\tthis.reset = function(tokenizer, warn, multilineVars, tune) {\n\t\tparseKeyVoice.initialize(tokenizer, warn, multilineVars, tune, tuneBuilder);\n\t\tparseDirective.initialize(tokenizer, warn, multilineVars, tune, tuneBuilder);\n\t};\n\tthis.reset(tokenizer, warn, multilineVars, tune);\n\n\tthis.setTitle = function(title, origSize) {\n\t\tif (multilineVars.hasMainTitle)\n\t\t\ttuneBuilder.addSubtitle(title, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+origSize+2});\t// display secondary title\n\t\telse\n\t\t{\n\t\t\ttuneBuilder.addMetaText(\"title\", title, { startChar: multilineVars.iChar, endChar: multilineVars.iChar+origSize+2});\n\t\t\tmultilineVars.hasMainTitle = true;\n\t\t}\n\t};\n\n\tthis.setMeter = function(line) {\n\t\tline = tokenizer.stripComment(line);\n\t\tif (line === 'C') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'common_time'};\n\t\t} else if (line === 'C|') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'cut_time'};\n\t\t} else if (line === 'o') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'tempus_perfectum'};\n\t\t} else if (line === 'c') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'tempus_imperfectum'};\n\t\t} else if (line === 'o.') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'tempus_perfectum_prolatio'};\n\t\t} else if (line === 'c.') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn {type: 'tempus_imperfectum_prolatio'};\n\t\t} else if (line.length === 0 || line.toLowerCase() === 'none') {\n\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\tmultilineVars.default_length = 0.125;\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar tokens = tokenizer.tokenize(line, 0, line.length);\n\t\t\t// the form is [open_paren] decimal [ plus|dot decimal ]... [close_paren] slash decimal [plus same_as_before]\n\t\t\ttry {\n\t\t\t\tvar parseNum = function() {\n\t\t\t\t\t// handles this much: [open_paren] decimal [ plus|dot decimal ]... [close_paren]\n\t\t\t\t\tvar ret = {value: 0, num: \"\"};\n\n\t\t\t\t\tvar tok = tokens.shift();\n\t\t\t\t\tif (tok.token === '(')\n\t\t\t\t\t\ttok = tokens.shift();\n\t\t\t\t\twhile (1) {\n\t\t\t\t\t\tif (tok.type !== 'number') throw \"Expected top number of meter\";\n\t\t\t\t\t\tret.value += parseInt(tok.token);\n\t\t\t\t\t\tret.num += tok.token;\n\t\t\t\t\t\tif (tokens.length === 0 || tokens[0].token === '/') return ret;\n\t\t\t\t\t\ttok = tokens.shift();\n\t\t\t\t\t\tif (tok.token === ')') {\n\t\t\t\t\t\t\tif (tokens.length === 0 || tokens[0].token === '/') return ret;\n\t\t\t\t\t\t\tthrow \"Unexpected paren in meter\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tok.token !== '.' && tok.token !== '+') throw \"Expected top number of meter\";\n\t\t\t\t\t\tret.num += tok.token;\n\t\t\t\t\t\tif (tokens.length === 0) throw \"Expected top number of meter\";\n\t\t\t\t\t\ttok = tokens.shift();\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\t// just to suppress warning\n\t\t\t\t};\n\n\t\t\t\tvar parseFraction = function() {\n\t\t\t\t\t// handles this much: parseNum slash decimal\n\t\t\t\t\tvar ret = parseNum();\n\t\t\t\t\tif (tokens.length === 0) return ret;\n\t\t\t\t\tvar tok = tokens.shift();\n\t\t\t\t\tif (tok.token !== '/') throw \"Expected slash in meter\";\n\t\t\t\t\ttok = tokens.shift();\n\t\t\t\t\tif (tok.type !== 'number') throw \"Expected bottom number of meter\";\n\t\t\t\t\tret.den = tok.token;\n\t\t\t\t\tret.value = ret.value / parseInt(ret.den);\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\n\t\t\t\tif (tokens.length === 0) throw \"Expected meter definition in M: line\";\n\t\t\t\tvar meter = {type: 'specified', value: [ ]};\n\t\t\t\tvar totalLength = 0;\n\t\t\t\twhile (1) {\n\t\t\t\t\tvar ret = parseFraction();\n\t\t\t\t\ttotalLength += ret.value;\n\t\t\t\t\tvar mv = { num: ret.num };\n\t\t\t\t\tif (ret.den !== undefined)\n\t\t\t\t\t\tmv.den = ret.den;\n\t\t\t\t\tmeter.value.push(mv);\n\t\t\t\t\tif (tokens.length === 0) break;\n\t\t\t\t\t//var tok = tokens.shift();\n\t\t\t\t\t//if (tok.token !== '+') throw \"Extra characters in M: line\";\n\t\t\t\t}\n\n\t\t\t\tif (multilineVars.havent_set_length === true) {\n\t\t\t\t\tmultilineVars.default_length = totalLength < 0.75 ? 0.0625 : 0.125;\n\t\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t\t}\n\t\t\t\treturn meter;\n\t\t\t} catch (e) {\n\t\t\t\twarn(e, line, 0);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tthis.calcTempo = function(relTempo) {\n\t\tvar dur = 1/4;\n\t\tif (multilineVars.meter && multilineVars.meter.type === 'specified') {\n\t\t\tdur = 1 / parseInt(multilineVars.meter.value[0].den);\n\t\t} else if (multilineVars.origMeter && multilineVars.origMeter.type === 'specified') {\n\t\t\tdur = 1 / parseInt(multilineVars.origMeter.value[0].den);\n\t\t}\n\t\t//var dur = multilineVars.default_length ? multilineVars.default_length : 1;\n\t\tfor (var i = 0; i < relTempo.duration; i++)\n\t\t\trelTempo.duration[i] = dur * relTempo.duration[i];\n\t\treturn relTempo;\n\t};\n\n\tthis.resolveTempo = function() {\n\t\tif (multilineVars.tempo) {\t// If there's a tempo waiting to be resolved\n\t\t\tthis.calcTempo(multilineVars.tempo);\n\t\t\ttune.metaText.tempo = multilineVars.tempo;\n\t\t\tdelete multilineVars.tempo;\n\t\t}\n\t};\n\n\tthis.addUserDefinition = function(line, start, end) {\n\t\tvar equals = line.indexOf('=', start);\n\t\tif (equals === -1) {\n\t\t\twarn(\"Need an = in a macro definition\", line, start);\n\t\t\treturn;\n\t\t}\n\n\t\tvar before = parseCommon.strip(line.substring(start, equals));\n\t\tvar after = parseCommon.strip(line.substring(equals+1));\n\n\t\tif (before.length !== 1) {\n\t\t\twarn(\"Macro definitions can only be one character\", line, start);\n\t\t\treturn;\n\t\t}\n\t\tvar legalChars = \"HIJKLMNOPQRSTUVWXYhijklmnopqrstuvw~\";\n\t\tif (legalChars.indexOf(before) === -1) {\n\t\t\twarn(\"Macro definitions must be H-Y, h-w, or tilde\", line, start);\n\t\t\treturn;\n\t\t}\n\t\tif (after.length === 0) {\n\t\t\twarn(\"Missing macro definition\", line, start);\n\t\t\treturn;\n\t\t}\n\t\tif (multilineVars.macros === undefined)\n\t\t\tmultilineVars.macros = {};\n\t\tmultilineVars.macros[before] = after;\n\t};\n\n\tthis.setDefaultLength = function(line, start, end) {\n\t\tvar len = line.substring(start, end).replace(/ /g, \"\");\n\t\tvar len_arr = len.split('/');\n\t\tif (len_arr.length === 2) {\n\t\t\tvar n = parseInt(len_arr[0]);\n\t\t\tvar d = parseInt(len_arr[1]);\n\t\t\tif (d > 0) {\n\t\t\t\tmultilineVars.default_length = n / d;\t// a whole note is 1\n\t\t\t\tmultilineVars.havent_set_length = false;\n\t\t\t}\n\t\t} else if (len_arr.length === 1 && len_arr[0] === '1') {\n\t\t\tmultilineVars.default_length = 1;\n\t\t\tmultilineVars.havent_set_length = false;\n\t\t}\n\t};\n\n\n\tvar tempoString = {\n\n\t\tlarghissimo: 20,\n\t\tadagissimo: 24,\n\t\tsostenuto: 28,\n\t\tgrave: 32,\n\t\tlargo: 40,\n\t\tlento: 50,\n\t\tlarghetto: 60,\n\t\tadagio: 68,\n\t\tadagietto: 74,\n\t\tandante: 80,\n\t\tandantino: 88,\n\t\t\"marcia moderato\": 84,\n\t\t\"andante moderato\": 100,\n\t\tmoderato: 112,\n\t\tallegretto: 116,\n\t\t\"allegro moderato\": 120,\n\t\tallegro: 126,\n\t\tanimato: 132,\n\t\tagitato: 140,\n\t\tveloce: 148,\n\t\t\"mosso vivo\": 156,\n\t\tvivace: 164,\n\t\tvivacissimo: 172,\n\t\tallegrissimo: 176,\n\t\tpresto: 184,\n\t\tprestissimo: 210,\n\t};\n\n\tthis.setTempo = function(line, start, end, iChar) {\n\t\t//Q - tempo; can be used to specify the notes per minute, e.g. If\n\t\t//the meter denominator is a 4 note then Q:120 or Q:C=120\n\t\t//is 120 quarter notes per minute. Similarly  Q:C3=40 would be 40\n\t\t//dotted half notes per minute. An absolute tempo may also be\n\t\t//set, e.g. Q:1/8=120 is 120 eighth notes per minute,\n\t\t//irrespective of the meter's denominator.\n\t\t//\n\t\t// This is either a number, \"C=number\", \"Cnumber=number\", or fraction [fraction...]=number\n\t\t// It depends on the M: field, which may either not be present, or may appear after this.\n\t\t// If M: is not present, an eighth note is used.\n\t\t// That means that this field can't be calculated until the end, if it is the first three types, since we don't know if we'll see an M: field.\n\t\t// So, if it is the fourth type, set it here, otherwise, save the info in the multilineVars.\n\t\t// The temporary variables we keep are the duration and the bpm. In the first two forms, the duration is 1.\n\t\t// In addition, a quoted string may both precede and follow. If a quoted string is present, then the duration part is optional.\n\t\ttry {\n\t\t\tvar tokens = tokenizer.tokenize(line, start, end);\n\n\t\t\tif (tokens.length === 0) throw \"Missing parameter in Q: field\";\n\n\t\t\tvar tempo = { startChar: iChar+start-2, endChar: iChar+end };\n\t\t\tvar delaySet = true;\n\t\t\tvar token = tokens.shift();\n\t\t\tif (token.type === 'quote') {\n\t\t\t\ttempo.preString = token.token;\n\t\t\t\ttoken = tokens.shift();\n\t\t\t\tif (tokens.length === 0) {\t// It's ok to just get a string for the tempo\n\t\t\t\t\t// If the string is a well-known tempo, put in the bpm\n\t\t\t\t\tif (tempoString[tempo.preString.toLowerCase()]) {\n\t\t\t\t\t\ttempo.bpm = tempoString[tempo.preString.toLowerCase()];\n\t\t\t\t\t\ttempo.suppressBpm = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn {type: 'immediate', tempo: tempo};\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === 'alpha' && token.token === 'C')\t { // either type 2 or type 3\n\t\t\t\tif (tokens.length === 0) throw \"Missing tempo after C in Q: field\";\n\t\t\t\ttoken = tokens.shift();\n\t\t\t\tif (token.type === 'punct' && token.token === '=') {\n\t\t\t\t\t// This is a type 2 format. The duration is an implied 1\n\t\t\t\t\tif (tokens.length === 0) throw \"Missing tempo after = in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'number') throw \"Expected number after = in Q: field\";\n\t\t\t\t\ttempo.duration = [1];\n\t\t\t\t\ttempo.bpm = parseInt(token.token);\n\t\t\t\t} else if (token.type === 'number') {\n\t\t\t\t\t// This is a type 3 format.\n\t\t\t\t\ttempo.duration = [parseInt(token.token)];\n\t\t\t\t\tif (tokens.length === 0) throw \"Missing = after duration in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'punct' || token.token !== '=') throw \"Expected = after duration in Q: field\";\n\t\t\t\t\tif (tokens.length === 0) throw \"Missing tempo after = in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'number') throw \"Expected number after = in Q: field\";\n\t\t\t\t\ttempo.bpm = parseInt(token.token);\n\t\t\t\t} else throw \"Expected number or equal after C in Q: field\";\n\n\t\t\t} else if (token.type === 'number') {\t// either type 1 or type 4\n\t\t\t\tvar num = parseInt(token.token);\n\t\t\t\tif (tokens.length === 0 || tokens[0].type === 'quote') {\n\t\t\t\t\t// This is type 1\n\t\t\t\t\ttempo.duration = [1];\n\t\t\t\t\ttempo.bpm = num;\n\t\t\t\t} else {\t// This is type 4\n\t\t\t\t\tdelaySet = false;\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'punct' && token.token !== '/') throw \"Expected fraction in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'number') throw \"Expected fraction in Q: field\";\n\t\t\t\t\tvar den = parseInt(token.token);\n\t\t\t\t\ttempo.duration = [num/den];\n\t\t\t\t\t// We got the first fraction, keep getting more as long as we find them.\n\t\t\t\t\twhile (tokens.length > 0  && tokens[0].token !== '=' && tokens[0].type !== 'quote') {\n\t\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\t\tif (token.type !== 'number') throw \"Expected fraction in Q: field\";\n\t\t\t\t\t\tnum = parseInt(token.token);\n\t\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\t\tif (token.type !== 'punct' && token.token !== '/') throw \"Expected fraction in Q: field\";\n\t\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\t\tif (token.type !== 'number') throw \"Expected fraction in Q: field\";\n\t\t\t\t\t\tden = parseInt(token.token);\n\t\t\t\t\t\ttempo.duration.push(num/den);\n\t\t\t\t\t}\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'punct' && token.token !== '=') throw \"Expected = in Q: field\";\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t\tif (token.type !== 'number') throw \"Expected tempo in Q: field\";\n\t\t\t\t\ttempo.bpm = parseInt(token.token);\n\t\t\t\t}\n\t\t\t} else throw \"Unknown value in Q: field\";\n\t\t\tif (tokens.length !== 0) {\n\t\t\t\ttoken = tokens.shift();\n\t\t\t\tif (token.type === 'quote') {\n\t\t\t\t\ttempo.postString = token.token;\n\t\t\t\t\ttoken = tokens.shift();\n\t\t\t\t}\n\t\t\t\tif (tokens.length !== 0) throw \"Unexpected string at end of Q: field\";\n\t\t\t}\n\t\t\tif (multilineVars.printTempo === false)\n\t\t\t\ttempo.suppress = true;\n\t\t\treturn {type: delaySet?'delaySet':'immediate', tempo: tempo};\n\t\t} catch (msg) {\n\t\t\twarn(msg, line, start);\n\t\t\treturn {type: 'none'};\n\t\t}\n\t};\n\n\tthis.letter_to_inline_header = function(line, i, startLine)\n\t{\n\t\tvar ws = tokenizer.eatWhiteSpace(line, i);\n\t\ti +=ws;\n\t\tif (line.length >= i+5 && line[i] === '[' && line[i+2] === ':') {\n\t\t\tvar e = line.indexOf(']', i);\n\t\t\tvar startChar = multilineVars.iChar + i;\n\t\t\tvar endChar = multilineVars.iChar + e + 1;\n\t\t\tswitch(line.substring(i, i+3))\n\t\t\t{\n\t\t\t\tcase \"[I:\":\n\t\t\t\t\tvar err = parseDirective.addDirective(line.substring(i+3, e));\n\t\t\t\t\tif (err) warn(err, line, i);\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[M:\":\n\t\t\t\t\tvar meter = this.setMeter(line.substring(i+3, e));\n\t\t\t\t\tif (tuneBuilder.hasBeginMusic() && meter)\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('meter', startChar, endChar, meter);\n\t\t\t\t\telse\n\t\t\t\t\t\tmultilineVars.meter = meter;\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[K:\":\n\t\t\t\t\tvar result = parseKeyVoice.parseKey(line.substring(i+3, e), true);\n\t\t\t\t\tif (result.foundClef && tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('clef', startChar, endChar, multilineVars.clef);\n\t\t\t\t\tif (result.foundKey && tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('key', startChar, endChar, parseKeyVoice.fixKey(multilineVars.clef, multilineVars.key));\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[P:\":\n\t\t\t\t\tvar part = parseDirective.parseFontChangeLine(line.substring(i+3, e))\n\t\t\t\t\tif (startLine || tune.lines.length <= tune.lineNum)\n\t\t\t\t\t\tmultilineVars.partForNextLine = { title: part, startChar: startChar, endChar: endChar };\n\t\t\t\t\telse\n\t\t\t\t\t\ttuneBuilder.appendElement('part', startChar, endChar, {title: part});\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[L:\":\n\t\t\t\t\tthis.setDefaultLength(line, i+3, e);\n\t\t\t\t\treturn [ e-i+1+ws ];\n\t\t\t\tcase \"[Q:\":\n\t\t\t\t\tif (e > 0) {\n\t\t\t\t\t\tvar tempo = this.setTempo(line, i+3, e, multilineVars.iChar);\n\t\t\t\t\t\tif (tempo.type === 'delaySet') {\n\t\t\t\t\t\t\tif (tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\t\t\ttuneBuilder.appendElement('tempo', startChar, endChar, this.calcTempo(tempo.tempo));\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tmultilineVars.tempoForNextLine = ['tempo', startChar, endChar, this.calcTempo(tempo.tempo)]\n\t\t\t\t\t\t} else if (tempo.type === 'immediate') {\n\t\t\t\t\t\t\tif (!startLine && tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\t\t\ttuneBuilder.appendElement('tempo', startChar, endChar, tempo.tempo);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tmultilineVars.tempoForNextLine = ['tempo', startChar, endChar, tempo.tempo]\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [ e-i+1+ws, line[i+1], line.substring(i+3, e)];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"[V:\":\n\t\t\t\t\tif (e > 0) {\n\t\t\t\t\t\tparseKeyVoice.parseVoice(line, i+3, e);\n\t\t\t\t\t\t//startNewLine();\n\t\t\t\t\t\treturn [ e-i+1+ws, line[i+1], line.substring(i+3, e)];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"[r:\":\n\t\t\t\t\treturn [ e-i+1+ws ];\n\n\t\t\t\tdefault:\n\t\t\t\t\t// TODO: complain about unhandled header\n\t\t\t}\n\t\t}\n\t\treturn [ 0 ];\n\t};\n\n\tthis.letter_to_body_header = function(line, i)\n\t{\n\t\tif (line.length >= i+3) {\n\t\t\tswitch(line.substring(i, i+2))\n\t\t\t{\n\t\t\t\tcase \"I:\":\n\t\t\t\t\tvar err = parseDirective.addDirective(line.substring(i+2));\n\t\t\t\t\tif (err) warn(err, line, i);\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"M:\":\n\t\t\t\t\tvar meter = this.setMeter(line.substring(i+2));\n\t\t\t\t\tif (tuneBuilder.hasBeginMusic() && meter)\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('meter', multilineVars.iChar + i, multilineVars.iChar + line.length, meter);\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"K:\":\n\t\t\t\t\tvar result = parseKeyVoice.parseKey(line.substring(i+2), tuneBuilder.hasBeginMusic());\n\t\t\t\t\tif (result.foundClef && tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('clef', multilineVars.iChar + i, multilineVars.iChar + line.length, multilineVars.clef);\n\t\t\t\t\tif (result.foundKey && tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\ttuneBuilder.appendStartingElement('key', multilineVars.iChar + i, multilineVars.iChar + line.length, parseKeyVoice.fixKey(multilineVars.clef, multilineVars.key));\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"P:\":\n\t\t\t\t\tif (tuneBuilder.hasBeginMusic())\n\t\t\t\t\t\ttuneBuilder.appendElement('part', multilineVars.iChar + i, multilineVars.iChar + line.length, {title: line.substring(i+2)});\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"L:\":\n\t\t\t\t\tthis.setDefaultLength(line, i+2, line.length);\n\t\t\t\t\treturn [ line.length ];\n\t\t\t\tcase \"Q:\":\n\t\t\t\t\tvar e = line.indexOf('\\x12', i+2);\n\t\t\t\t\tif (e === -1) e = line.length;\n\t\t\t\t\tvar tempo = this.setTempo(line, i+2, e, multilineVars.iChar);\n\t\t\t\t\tif (tempo.type === 'delaySet') tuneBuilder.appendElement('tempo', multilineVars.iChar + i, multilineVars.iChar + line.length, this.calcTempo(tempo.tempo));\n\t\t\t\t\telse if (tempo.type === 'immediate') tuneBuilder.appendElement('tempo', multilineVars.iChar + i, multilineVars.iChar + line.length, tempo.tempo);\n\t\t\t\treturn [ e, line[i], parseCommon.strip(line.substring(i+2))];\n\t\t\t\tcase \"V:\":\n\t\t\t\t\tparseKeyVoice.parseVoice(line, i+2, line.length);\n//\t\t\t\t\t\tstartNewLine();\n\t\t\t\t\treturn [ line.length, line[i], parseCommon.strip(line.substring(i+2))];\n\t\t\t\tdefault:\n\t\t\t\t\t// TODO: complain about unhandled header\n\t\t\t}\n\t\t}\n\t\treturn [ 0 ];\n\t};\n\n\tvar metaTextHeaders = {\n\t\tA: 'author',\n\t\tB: 'book',\n\t\tC: 'composer',\n\t\tD: 'discography',\n\t\tF: 'url',\n\t\tG: 'group',\n\t\tI: 'instruction',\n\t\tN: 'notes',\n\t\tO: 'origin',\n\t\tR: 'rhythm',\n\t\tS: 'source',\n\t\tW: 'unalignedWords',\n\t\tZ: 'transcription'\n\t};\n\n\tthis.parseHeader = function(line) {\n\t\tvar field = metaTextHeaders[line[0]];\n\t\tvar origSize = line.length-2\n\t\tvar restOfLine = tokenizer.translateString(tokenizer.stripComment(line.substring(2)))\n\t\tif (field === 'unalignedWords' || field === 'notes') {\n\t\t\t// These fields can be multi-line\n\t\t\ttuneBuilder.addMetaTextArray(field, parseDirective.parseFontChangeLine(restOfLine), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t} else if (field !== undefined) {\n\t\t\t// these fields are single line\n\t\t\ttuneBuilder.addMetaText(field, parseDirective.parseFontChangeLine(restOfLine), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t} else {\n\t\t\tvar startChar = multilineVars.iChar;\n\t\t\tvar endChar = startChar + line.length;\n\t\t\tswitch(line[0])\n\t\t\t{\n\t\t\t\tcase  'H':\n\t\t\t\t\t// History is a little different because once it starts it continues until another header field is encountered\n\t\t\t\t\ttuneBuilder.addMetaTextArray(\"history\", parseDirective.parseFontChangeLine(restOfLine), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t\t\t\tline = tokenizer.peekLine()\n\t\t\t\t\twhile (line && line[1] !== ':') {\n\t\t\t\t\t\ttokenizer.nextLine()\n\t\t\t\t\t\ttuneBuilder.addMetaTextArray(\"history\", parseDirective.parseFontChangeLine(tokenizer.translateString(tokenizer.stripComment(line))), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t\t\t\t\tline = tokenizer.peekLine()\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'K':\n\t\t\t\t\t// since the key is the last thing that can happen in the header, we can resolve the tempo now\n\t\t\t\t\tthis.resolveTempo();\n\t\t\t\t\tvar result = parseKeyVoice.parseKey(line.substring(2), false);\n\t\t\t\t\tif (!multilineVars.is_in_header && tuneBuilder.hasBeginMusic()) {\n\t\t\t\t\t\tif (result.foundClef)\n\t\t\t\t\t\t\ttuneBuilder.appendStartingElement('clef', startChar, endChar, multilineVars.clef);\n\t\t\t\t\t\tif (result.foundKey)\n\t\t\t\t\t\t\ttuneBuilder.appendStartingElement('key', startChar, endChar, parseKeyVoice.fixKey(multilineVars.clef, multilineVars.key));\n\t\t\t\t\t}\n\t\t\t\t\tmultilineVars.is_in_header = false;\t// The first key signifies the end of the header.\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'L':\n\t\t\t\t\tthis.setDefaultLength(line, 2, line.length);\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'M':\n\t\t\t\t\tmultilineVars.origMeter = multilineVars.meter = this.setMeter(line.substring(2));\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'P':\n\t\t\t\t\t// TODO-PER: There is more to do with parts, but the writer doesn't care.\n\t\t\t\t\tif (multilineVars.is_in_header)\n\t\t\t\t\t\ttuneBuilder.addMetaText(\"partOrder\", parseDirective.parseFontChangeLine(restOfLine), { startChar: multilineVars.iChar, endChar: multilineVars.iChar+line.length});\n\t\t\t\t\telse\n\t\t\t\t\t\tmultilineVars.partForNextLine = { title: restOfLine, startChar: startChar, endChar: endChar};\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'Q':\n\t\t\t\t\tvar tempo = this.setTempo(line, 2, line.length, multilineVars.iChar);\n\t\t\t\t\tif (tempo.type === 'delaySet') multilineVars.tempo = tempo.tempo;\n\t\t\t\t\telse if (tempo.type === 'immediate') {\n\t\t\t\t\t\tif (!tune.metaText.tempo)\n\t\t\t\t\t\t\ttune.metaText.tempo = tempo.tempo;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmultilineVars.tempoForNextLine = ['tempo', startChar, endChar, tempo.tempo]\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'T':\n\t\t\t\t\tif (multilineVars.titlecaps)\n\t\t\t\t\t\trestOfLine = restOfLine.toUpperCase();\n\t\t\t\t\tthis.setTitle(parseDirective.parseFontChangeLine(tokenizer.theReverser(restOfLine)), origSize);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'U':\n\t\t\t\t\tthis.addUserDefinition(line, 2, line.length);\n\t\t\t\t\tbreak;\n\t\t\t\tcase  'V':\n\t\t\t\t\tparseKeyVoice.parseVoice(line, 2, line.length);\n\t\t\t\t\tif (!multilineVars.is_in_header)\n\t\t\t\t\t\treturn {newline: true};\n\t\t\t\t\tbreak;\n\t\t\t\tcase  's':\n\t\t\t\t\treturn {symbols: true};\n\t\t\t\tcase  'w':\n\t\t\t\t\treturn {words: true};\n\t\t\t\tcase 'X':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'E':\n\t\t\t\tcase 'm':\n\t\t\t\t\twarn(\"Ignored header\", line, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {regular: true};\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t};\n};\n", "export const legalAccents = [\n  'trill',\n  'lowermordent',\n  'uppermordent',\n  'mordent',\n  'pralltriller',\n  'accent',\n  'fermata',\n  'invertedfermata',\n  'tenuto',\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '+',\n  'wedge',\n  'open',\n  'thumb',\n  'snap',\n  'turn',\n  'roll',\n  'breath',\n  'shortphrase',\n  'mediumphrase',\n  'longphrase',\n  'segno',\n  'coda',\n  'D.S.',\n  'D.C.',\n  'fine',\n  'beambr1',\n  'beambr2',\n  'slide',\n  'marcato',\n  'upbow',\n  'downbow',\n  '/',\n  '//',\n  '///',\n  '////',\n  'trem1',\n  'trem2',\n  'trem3',\n  'trem4',\n  'turnx',\n  'invertedturn',\n  'invertedturnx',\n  'trill(',\n  'trill)',\n  'arpeggio',\n  'xstem',\n  'mark',\n  'umarcato',\n  'style=normal',\n  'style=harmonic',\n  'style=rhythm',\n  'style=x',\n  'style=triangle',\n  'D.C.alcoda',\n  'D.C.alfine',\n  'D.S.alcoda',\n  'D.S.alfine',\n  'editorial',\n  'courtesy'\n];\n\nexport const volumeDecorations = [\n  'p',\n  'pp',\n  'f',\n  'ff',\n  'mf',\n  'mp',\n  'ppp',\n  'pppp',\n  'fff',\n  'ffff',\n  'sfz'\n];\n\nexport const dynamicDecorations = [\n  'crescendo(',\n  'crescendo)',\n  'diminuendo(',\n  'diminuendo)',\n  'glissando(',\n  'glissando)',\n  '~(',\n  '~)'\n];\n\nexport const accentPseudonyms = [\n  ['<', 'accent'],\n  ['>', 'accent'],\n  ['tr', 'trill'],\n  ['plus', '+'],\n  ['emphasis', 'accent'],\n  ['^', 'umarcato'],\n  ['marcato', 'umarcato']\n];\n\nexport const accentDynamicPseudonyms = [\n  ['<(', 'crescendo('],\n  ['<)', 'crescendo)'],\n  ['>(', 'diminuendo('],\n  ['>)', 'diminuendo)']\n];\n\nexport const nonDecorations = 'ABCDEFGabcdefgxyzZ[]|^_{'; // use this to prescreen so we don't have to look for a decoration at every note.\n\nexport const durations = [\n  0.5, 0.75, 0.875, 0.9375, 0.96875, 0.984375, 0.25, 0.375, 0.4375, 0.46875,\n  0.484375, 0.4921875, 0.125, 0.1875, 0.21875, 0.234375, 0.2421875, 0.24609375,\n  0.0625, 0.09375, 0.109375, 0.1171875, 0.12109375, 0.123046875, 0.03125,\n  0.046875, 0.0546875, 0.05859375, 0.060546875, 0.0615234375, 0.015625,\n  0.0234375, 0.02734375, 0.029296875, 0.0302734375, 0.03076171875\n];\n\nexport const pitches = {\n  A: 5,\n  B: 6,\n  C: 0,\n  D: 1,\n  E: 2,\n  F: 3,\n  G: 4,\n  a: 12,\n  b: 13,\n  c: 7,\n  d: 8,\n  e: 9,\n  f: 10,\n  g: 11\n};\n\nexport const rests = {\n  x: 'invisible',\n  X: 'invisible-multimeasure',\n  y: 'spacer',\n  z: 'rest',\n  Z: 'multimeasure'\n};\n\nexport const accMap = {\n  dblflat: '__',\n  flat: '_',\n  natural: '=',\n  sharp: '^',\n  dblsharp: '^^',\n  quarterflat: '_/',\n  quartersharp: '^/'\n};\n\nexport const tripletQ = {\n  2: 3,\n  3: 2,\n  4: 3,\n  5: 2, // TODO-PER: not handling 6/8 rhythm yet\n  6: 2,\n  7: 2, // TODO-PER: not handling 6/8 rhythm yet\n  8: 3,\n  9: 2 // TODO-PER: not handling 6/8 rhythm yet\n};\n", "import parseCommon   from './abc_common.js';\nimport parseKeyVoice from './abc_parse_key_voice.js';\nimport transpose     from './abc_transpose.js';\nimport {\n  legalAccents,\n  volumeDecorations,\n  dynamicDecorations,\n  accentPseudonyms,\n  accentDynamicPseudonyms,\n  nonDecorations,\n  durations,\n  pitches,\n  rests,\n  accMap,\n  tripletQ\n} from './abc_parse_settings.js';\n\nvar tokenizer;\nvar warn;\nvar multilineVars;\nvar tune;\nvar tuneBuilder;\nvar header;\n\nexport default function MusicParser(_tokenizer, _warn, _multilineVars, _tune, _tuneBuilder, _header) {\n\ttokenizer = _tokenizer;\n\twarn = _warn;\n\tmultilineVars = _multilineVars;\n\ttune = _tune;\n\ttuneBuilder = _tuneBuilder;\n\theader = _header;\n\tthis.lineContinuation = false;\n}\n\n//\n// Parse line of music\n//\n// This is a stream of <(bar-marking|header|note-group)...> in any order, with optional spaces between each element\n// core-note is <open-slur, accidental, pitch:required, octave, duration, close-slur&|tie> with no spaces within that\n// chord is <open-bracket:required, core-note:required... close-bracket:required duration> with no spaces within that\n// grace-notes is <open-brace:required, (open-slur|core-note:required|close-slur)..., close-brace:required> spaces are allowed\n// note-group is <grace-notes, chord symbols&|decorations..., grace-notes, slur&|triplet, chord|core-note, end-slur|tie> spaces are allowed between items\n// bar-marking is <ampersand> or <chord symbols&|decorations..., bar:required> spaces allowed\n// header is <open-bracket:required, K|M|L|V:required, colon:required, field:required, close-bracket:required> spaces can occur between the colon, in the field, and before the close bracket\n// header can also be the only thing on a line. This is true even if it is a continuation line. In this case the brackets are not required.\n// a space is a back-tick, a space, or a tab. If it is a back-tick, then there is no end-beam.\n\n// Line preprocessing: anything after a % is ignored (the double %% should have been taken care of before this)\n// Then, all leading and trailing spaces are ignored.\n// If there was a line continuation, the \\n was replaced by a \\r and the \\ was replaced by a space. This allows the construct\n// of having a header mid-line conceptually, but actually be at the start of the line. This is equivolent to putting the header in [ ].\n\n// TODO-PER: How to handle ! for line break?\n// TODO-PER: dots before bar, dots before slur\n// TODO-PER: U: redefinable symbols.\n\n// Ambiguous symbols:\n// \"[\" can be the start of a chord, the start of a header element or part of a bar line.\n// --- if it is immediately followed by \"|\", it is a bar line\n// --- if it is immediately followed by K: L: M: V: it is a header (note: there are other headers mentioned in the standard, but I'm not sure how they would be used.)\n// --- otherwise it is the beginning of a chord\n// \"(\" can be the start of a slur or a triplet\n// --- if it is followed by a number from 2-9, then it is a triplet\n// --- otherwise it is a slur\n// \"]\"\n// --- if there is a chord open, then this is the close\n// --- if it is after a [|, then it is an invisible bar line\n// --- otherwise, it is par of a bar\n// \".\" can be a bar modifier or a slur modifier, or a decoration\n// --- if it comes immediately before a bar, it is a bar modifier\n// --- if it comes immediately before a slur, it is a slur modifier\n// --- otherwise it is a decoration for the next note.\n// number:\n// --- if it is after a bar, with no space, it is an ending marker\n// --- if it is after a ( with no space, it is a triplet count\n// --- if it is after a pitch or octave or slash, then it is a duration\n\n// Unambiguous symbols (except inside quoted strings):\n// vertical-bar, colon: part of a bar\n// ABCDEFGabcdefg: pitch\n// xyzZ: rest\n// comma, prime: octave\n// close-paren: end-slur\n// hyphen: tie\n// tilde, v, u, bang, plus, THLMPSO: decoration\n// carat, underscore, equal: accidental\n// ampersand: time reset\n// open-curly, close-curly: grace notes\n// double-quote: chord symbol\n// less-than, greater-than, slash: duration\n// back-tick, space, tab: space\n\nvar isInTie = function(multilineVars, overlayLevel, el) {\n\tif (multilineVars.inTie[overlayLevel] === undefined)\n\t\treturn false;\n\t// If this is single voice music then the voice index isn't set, so we use the first voice.\n\tvar voiceIndex = multilineVars.currentVoice ? multilineVars.currentVoice.staffNum * 100 + multilineVars.currentVoice.index : 0;\n\tif (multilineVars.inTie[overlayLevel][voiceIndex]) {\n\t\tif (el.pitches !== undefined || el.rest.type !== 'spacer')\n\t\t\treturn true;\n\t}\n\treturn false;\n};\n\nvar el = { };\nMusicParser.prototype.parseMusic = function(line) {\n\theader.resolveTempo();\n\t//multilineVars.havent_set_length = false;\t// To late to set this now.\n\tmultilineVars.is_in_header = false;\t// We should have gotten a key header by now, but just in case, this is definitely out of the header.\n\tvar i = 0;\n\tvar startOfLine = multilineVars.iChar;\n\t// see if there is nothing but a comment on this line. If so, just ignore it. A full line comment is optional white space followed by %\n\twhile (tokenizer.isWhiteSpace(line[i]) && i < line.length)\n\t\ti++;\n\tif (i === line.length || line[i] === '%')\n\t\treturn;\n\n\t// Start with the standard staff, clef and key symbols on each line\n\tvar delayStartNewLine = multilineVars.start_new_line;\n\tif (multilineVars.continueall === undefined)\n\t\tmultilineVars.start_new_line = true;\n\telse\n\t\tmultilineVars.start_new_line = false;\n\tvar tripletNotesLeft = 0;\n\n\t// See if the line starts with a header field\n\tvar retHeader = header.letter_to_body_header(line, i);\n\tif (retHeader[0] > 0) {\n\t\ti += retHeader[0];\n\t\t// fixes bug on this: c[V:2]d\n\t\tif (retHeader[1] === 'V')\n\t\t\tthis.startNewLine();\n\t\t\t// delayStartNewLine = true;\n\t\t// TODO-PER: Handle inline headers\n\t}\n\n\tvar overlayLevel = 0;\n\twhile (i < line.length)\n\t{\n\t\tvar startI = i;\n\t\tif (line[i] === '%')\n\t\t\tbreak;\n\n\t\tvar retInlineHeader = header.letter_to_inline_header(line, i, delayStartNewLine);\n\t\tif (retInlineHeader[0] > 0) {\n\t\t\ti += retInlineHeader[0];\n\t\t\tif (retInlineHeader[1] === 'V')\n\t\t\t\tdelayStartNewLine = true; // fixes bug on this: c[V:2]d\n\t\t\t// TODO-PER: Handle inline headers\n\t\t\t//multilineVars.start_new_line = false;\n\t\t} else {\n\t\t\t// Wait until here to actually start the line because we know we're past the inline statements.\n\t\t\tif (!tuneBuilder.hasBeginMusic() || (delayStartNewLine && !this.lineContinuation)) {\n\t\t\t\tthis.startNewLine();\n\t\t\t\tdelayStartNewLine = false;\n\t\t\t}\n\n\t\t\t// We need to decide if the following characters are a bar-marking or a note-group.\n\t\t\t// Unfortunately, that is ambiguous. Both can contain chord symbols and decorations.\n\t\t\t// If there is a grace note either before or after the chord symbols and decorations, then it is definitely a note-group.\n\t\t\t// If there is a bar marker, it is definitely a bar-marking.\n\t\t\t// If there is either a core-note or chord, it is definitely a note-group.\n\t\t\t// So, loop while we find grace-notes, chords-symbols, or decorations. [It is an error to have more than one grace-note group in a row; the others can be multiple]\n\t\t\t// Then, if there is a grace-note, we know where to go.\n\t\t\t// Else see if we have a chord, core-note, slur, triplet, or bar.\n\n\t\t\tvar ret;\n\t\t\twhile (1) {\n\t\t\t\tret = tokenizer.eatWhiteSpace(line, i);\n\t\t\t\tif (ret > 0) {\n\t\t\t\t\ti += ret;\n\t\t\t\t}\n\t\t\t\tif (i > 0 && line[i-1] === '\\x12') {\n\t\t\t\t\t// there is one case where a line continuation isn't the same as being on the same line, and that is if the next character after it is a header.\n\t\t\t\t\tret = header.letter_to_body_header(line, i);\n\t\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\t\tif (ret[1] === 'V')\n\t\t\t\t\t\t\tthis.startNewLine(); // fixes bug on this: c\\\\nV:2]\\\\nd\n\t\t\t\t\t\t// TODO: insert header here\n\t\t\t\t\t\ti = ret[0];\n\t\t\t\t\t\tmultilineVars.start_new_line = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// gather all the grace notes, chord symbols and decorations\n\t\t\t\tret = letter_to_spacer(line, i);\n\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\ti += ret[0];\n\t\t\t\t}\n\n\t\t\t\tret = letter_to_chord(line, i);\n\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\t// There could be more than one chord here if they have different positions.\n\t\t\t\t\t// If two chords have the same position, then connect them with newline.\n\t\t\t\t\tif (!el.chord)\n\t\t\t\t\t\tel.chord = [];\n\t\t\t\t\tvar chordName = tokenizer.translateString(ret[1]);\n\t\t\t\t\tchordName = chordName.replace(/;/g, \"\\n\");\n\t\t\t\t\tvar addedChord = false;\n\t\t\t\t\tfor (var ci = 0; ci < el.chord.length; ci++) {\n\t\t\t\t\t\tif (el.chord[ci].position === ret[2]) {\n\t\t\t\t\t\t\taddedChord = true;\n\t\t\t\t\t\t\tel.chord[ci].name += \"\\n\" + chordName;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (addedChord === false) {\n\t\t\t\t\t\tif (ret[2] === null && ret[3])\n\t\t\t\t\t\t\tel.chord.push({name: chordName, rel_position: ret[3]});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel.chord.push({name: chordName, position: ret[2]});\n\t\t\t\t\t}\n\n\t\t\t\t\ti += ret[0];\n\t\t\t\t\tvar ii = tokenizer.skipWhiteSpace(line.substring(i));\n\t\t\t\t\tif (ii > 0)\n\t\t\t\t\t\tel.force_end_beam_last = true;\n\t\t\t\t\ti += ii;\n\t\t\t\t} else {\n\t\t\t\t\tif (nonDecorations.indexOf(line[i]) === -1)\n\t\t\t\t\t\tret = letter_to_accent(line, i);\n\t\t\t\t\telse ret = [ 0 ];\n\t\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\t\tif (ret[1] === null) {\n\t\t\t\t\t\t\tif (i + 1 < line.length)\n\t\t\t\t\t\t\t\tthis.startNewLine();\t// There was a ! in the middle of the line. Start a new line if there is anything after it.\n\t\t\t\t\t\t} else if (ret[1].length > 0) {\n\t\t\t\t\t\t\tif (ret[1].indexOf(\"style=\") === 0) {\n\t\t\t\t\t\t\t\tel.style = ret[1].substr(6);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (el.decoration === undefined)\n\t\t\t\t\t\t\t\t\tel.decoration = [];\n\t\t\t\t\t\t\t\tif (ret[1] === 'beambr1')\n\t\t\t\t\t\t\t\t\tel.beambr = 1;\n\t\t\t\t\t\t\t\telse if (ret[1] === \"beambr2\")\n\t\t\t\t\t\t\t\t\tel.beambr = 2;\n\t\t\t\t\t\t\t\telse el.decoration.push(ret[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti += ret[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret = letter_to_grace(line, i);\n\t\t\t\t\t\t// TODO-PER: Be sure there aren't already grace notes defined. That is an error.\n\t\t\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\t\t\tel.gracenotes = ret[1];\n\t\t\t\t\t\t\ti += ret[0];\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tret = letter_to_bar(line, i);\n\t\t\tif (ret[0] > 0) {\n\t\t\t\t// This is definitely a bar\n\t\t\t\toverlayLevel = 0;\n\t\t\t\tif (el.gracenotes !== undefined) {\n\t\t\t\t\t// Attach the grace note to an invisible note\n\t\t\t\t\tel.rest = { type: 'spacer' };\n\t\t\t\t\tel.duration = 0.125; // TODO-PER: I don't think the duration of this matters much, but figure out if it does.\n\t\t\t\t\tmultilineVars.addFormattingOptions(el, tune.formatting, 'note');\n\t\t\t\t\ttuneBuilder.appendElement('note', startOfLine+i, startOfLine+i+ret[0], el);\n\t\t\t\t\tmultilineVars.measureNotEmpty = true;\n\t\t\t\t\tel = {};\n\t\t\t\t}\n\t\t\t\tvar bar = {type: ret[1]};\n\t\t\t\tif (bar.type.length === 0)\n\t\t\t\t\twarn(\"Unknown bar type\", line, i);\n\t\t\t\telse {\n\t\t\t\t\tif (multilineVars.inEnding && bar.type !== 'bar_thin') {\n\t\t\t\t\t\tbar.endEnding = true;\n\t\t\t\t\t\tmultilineVars.inEnding = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (ret[2]) {\n\t\t\t\t\t\tbar.startEnding = ret[2];\n\t\t\t\t\t\tif (multilineVars.inEnding)\n\t\t\t\t\t\t\tbar.endEnding = true;\n\t\t\t\t\t\tmultilineVars.inEnding = true;\n\t\t\t\t\t\tif (ret[1] === \"bar_right_repeat\") {\n\t\t\t\t\t\t\t// restore the tie and slur state from the start repeat\n\t\t\t\t\t\t\tmultilineVars.restoreStartEndingHoldOvers();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// save inTie, inTieChord\n\t\t\t\t\t\t\tmultilineVars.duplicateStartEndingHoldOvers();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (el.decoration !== undefined)\n\t\t\t\t\t\tbar.decoration = el.decoration;\n\t\t\t\t\tif (el.chord !== undefined)\n\t\t\t\t\t\tbar.chord = el.chord;\n\t\t\t\t\tif (bar.startEnding && multilineVars.barFirstEndingNum === undefined)\n\t\t\t\t\t\tmultilineVars.barFirstEndingNum = multilineVars.currBarNumber;\n\t\t\t\t\telse if (bar.startEnding && bar.endEnding && multilineVars.barFirstEndingNum)\n\t\t\t\t\t\tmultilineVars.currBarNumber = multilineVars.barFirstEndingNum;\n\t\t\t\t\telse if (bar.endEnding)\n\t\t\t\t\t\tmultilineVars.barFirstEndingNum = undefined;\n\t\t\t\t\tif (bar.type !== 'bar_invisible' && multilineVars.measureNotEmpty) {\n\t\t\t\t\t\tvar isFirstVoice = multilineVars.currentVoice === undefined || (multilineVars.currentVoice.staffNum ===  0 && multilineVars.currentVoice.index ===  0);\n\t\t\t\t\t\tif (isFirstVoice) {\n\t\t\t\t\t\t\tmultilineVars.currBarNumber++;\n\t\t\t\t\t\t\tif (multilineVars.barNumbers && multilineVars.currBarNumber % multilineVars.barNumbers === 0)\n\t\t\t\t\t\t\t\tbar.barNumber = multilineVars.currBarNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmultilineVars.addFormattingOptions(el, tune.formatting, 'bar');\n\t\t\t\t\ttuneBuilder.appendElement('bar', startOfLine+startI, startOfLine+i+ret[0], bar);\n\t\t\t\t\tmultilineVars.measureNotEmpty = false;\n\t\t\t\t\tel = {};\n\t\t\t\t}\n\t\t\t\ti += ret[0];\n\t\t\t} else if (line[i] === '&') {\t// backtrack to beginning of measure\n\t\t\t\tret = letter_to_overlay(line, i);\n\t\t\t\tif (ret[0] > 0) {\n\t\t\t\t\ttuneBuilder.appendElement('overlay', startOfLine, startOfLine+1, {});\n\t\t\t\t\ti += 1;\n\t\t\t\t\toverlayLevel++;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// This is definitely a note group\n\t\t\t\t//\n\t\t\t\t// Look for as many open slurs and triplets as there are. (Note: only the first triplet is valid.)\n\t\t\t\tret = letter_to_open_slurs_and_triplets(line, i);\n\t\t\t\tif (ret.consumed > 0) {\n\t\t\t\t\tif (ret.startSlur !== undefined)\n\t\t\t\t\t\tel.startSlur = ret.startSlur;\n\t\t\t\t\tif (ret.dottedSlur)\n\t\t\t\t\t\tel.dottedSlur = true;\n\t\t\t\t\tif (ret.triplet !== undefined) {\n\t\t\t\t\t\tif (tripletNotesLeft > 0)\n\t\t\t\t\t\t\twarn(\"Can't nest triplets\", line, i);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tel.startTriplet = ret.triplet;\n\t\t\t\t\t\t\tel.tripletMultiplier = ret.tripletQ / ret.triplet;\n\t\t\t\t\t\t\tel.tripletR = ret.num_notes;\n\t\t\t\t\t\t\ttripletNotesLeft = ret.num_notes === undefined ? ret.triplet : ret.num_notes;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti += ret.consumed;\n\t\t\t\t}\n\n\t\t\t\t// handle chords.\n\t\t\t\tif (line[i] === '[') {\n\t\t\t\t\tvar chordStartChar = i;\n\t\t\t\t\ti++;\n\t\t\t\t\tvar chordDuration = null;\n\t\t\t\t\tvar rememberEndBeam = false;\n\n\t\t\t\t\tvar done = false;\n\t\t\t\t\twhile (!done) {\n\t\t\t\t\t\tvar accent = letter_to_accent(line, i);\n\t\t\t\t\t\tif (accent[0] > 0) {\n\t\t\t\t\t\t\ti += accent[0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar chordNote = getCoreNote(line, i, {}, false);\n\t\t\t\t\t\tif (chordNote !== null && chordNote.pitch !== undefined) {\n\t\t\t\t\t\t\tif (accent[0] > 0) { // If we found a decoration above, it modifies the entire chord. \"style\" is handled below.\n\t\t\t\t\t\t\t\tif (accent[1].indexOf(\"style=\") !== 0) {\n\t\t\t\t\t\t\t\t\tif (el.decoration === undefined)\n\t\t\t\t\t\t\t\t\t\tel.decoration = [];\n\t\t\t\t\t\t\t\t\tel.decoration.push(accent[1]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (chordNote.end_beam) {\n\t\t\t\t\t\t\t\tel.end_beam = true;\n\t\t\t\t\t\t\t\tdelete chordNote.end_beam;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (el.pitches === undefined) {\n\t\t\t\t\t\t\t\tel.duration = chordNote.duration;\n\t\t\t\t\t\t\t\tel.pitches = [ chordNote ];\n\t\t\t\t\t\t\t} else\t// Just ignore the note lengths of all but the first note. The standard isn't clear here, but this seems less confusing.\n\t\t\t\t\t\t\t\tel.pitches.push(chordNote);\n\t\t\t\t\t\t\tdelete chordNote.duration;\n\t\t\t\t\t\t\tif (accent[0] > 0) { // If we found a style above, it modifies the individual pitch, not the entire chord.\n\t\t\t\t\t\t\t\tif (accent[1].indexOf(\"style=\") === 0) {\n\t\t\t\t\t\t\t\t\tel.pitches[el.pitches.length-1].style = accent[1].substr(6);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (multilineVars.inTieChord[el.pitches.length]) {\n\t\t\t\t\t\t\t\tchordNote.endTie = true;\n\t\t\t\t\t\t\t\tmultilineVars.inTieChord[el.pitches.length] = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (chordNote.startTie)\n\t\t\t\t\t\t\t\tmultilineVars.inTieChord[el.pitches.length] = true;\n\n\t\t\t\t\t\t\ti  = chordNote.endChar;\n\t\t\t\t\t\t\tdelete chordNote.endChar;\n\t\t\t\t\t\t} else if (line[i] === ' ') {\n\t\t\t\t\t\t\t// Spaces are not allowed in chords, but we can recover from it by ignoring it.\n\t\t\t\t\t\t\twarn(\"Spaces are not allowed in chords\", line, i);\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (i < line.length && line[i] === ']') {\n\t\t\t\t\t\t\t\t// consume the close bracket\n\t\t\t\t\t\t\t\ti++;\n\n\t\t\t\t\t\t\t\tif (multilineVars.next_note_duration !== 0) {\n\t\t\t\t\t\t\t\t\tel.duration = el.duration * multilineVars.next_note_duration;\n\t\t\t\t\t\t\t\t\tmultilineVars.next_note_duration = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (isInTie(multilineVars,  overlayLevel, el)) {\n\t\t\t\t\t\t\t\t\tel.pitches.forEach(function(pitch) { pitch.endTie = true; });\n\t\t\t\t\t\t\t\t\tsetIsInTie(multilineVars,  overlayLevel, false);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (tripletNotesLeft > 0 && !(el.rest && el.rest.type === \"spacer\")) {\n\t\t\t\t\t\t\t\t\ttripletNotesLeft--;\n\t\t\t\t\t\t\t\t\tif (tripletNotesLeft === 0) {\n\t\t\t\t\t\t\t\t\t\tel.endTriplet = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar postChordDone = false;\n\t\t\t\t\t\t\t\twhile (i < line.length && !postChordDone) {\n\t\t\t\t\t\t\t\t\tswitch (line[i]) {\n\t\t\t\t\t\t\t\t\t\tcase ' ':\n\t\t\t\t\t\t\t\t\t\tcase '\\t':\n\t\t\t\t\t\t\t\t\t\t\taddEndBeam(el);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase ')':\n\t\t\t\t\t\t\t\t\t\t\tif (el.endSlur === undefined) el.endSlur = 1; else el.endSlur++;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase '-':\n\t\t\t\t\t\t\t\t\t\t\tel.pitches.forEach(function(pitch) { pitch.startTie = {}; });\n\t\t\t\t\t\t\t\t\t\t\tsetIsInTie(multilineVars,  overlayLevel, true);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase '>':\n\t\t\t\t\t\t\t\t\t\tcase '<':\n\t\t\t\t\t\t\t\t\t\t\tvar br2 = getBrokenRhythm(line, i);\n\t\t\t\t\t\t\t\t\t\t\ti += br2[0] - 1;\t// index gets incremented below, so we'll let that happen\n\t\t\t\t\t\t\t\t\t\t\tmultilineVars.next_note_duration = br2[2];\n\t\t\t\t\t\t\t\t\t\t\tif (chordDuration)\n\t\t\t\t\t\t\t\t\t\t\t\tchordDuration = chordDuration * br2[1];\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\tchordDuration = br2[1];\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase '1':\n\t\t\t\t\t\t\t\t\t\tcase '2':\n\t\t\t\t\t\t\t\t\t\tcase '3':\n\t\t\t\t\t\t\t\t\t\tcase '4':\n\t\t\t\t\t\t\t\t\t\tcase '5':\n\t\t\t\t\t\t\t\t\t\tcase '6':\n\t\t\t\t\t\t\t\t\t\tcase '7':\n\t\t\t\t\t\t\t\t\t\tcase '8':\n\t\t\t\t\t\t\t\t\t\tcase '9':\n\t\t\t\t\t\t\t\t\t\tcase '/':\n\t\t\t\t\t\t\t\t\t\t\tvar fraction = tokenizer.getFraction(line, i);\n\t\t\t\t\t\t\t\t\t\t\tchordDuration = fraction.value;\n\t\t\t\t\t\t\t\t\t\t\ti = fraction.index;\n\t\t\t\t\t\t\t\t\t\t\tvar ch = line[i]\n\t\t\t\t\t\t\t\t\t\t\tif (ch === ' ')\n\t\t\t\t\t\t\t\t\t\t\t\trememberEndBeam = true;\n\t\t\t\t\t\t\t\t\t\t\tif (ch === '-' || ch === ')' || ch === ' ' || ch === '<' || ch === '>')\n\t\t\t\t\t\t\t\t\t\t\t\ti--; // Subtracting one because one is automatically added below\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\tpostChordDone = true;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tpostChordDone = true;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!postChordDone) {\n\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\twarn(\"Expected ']' to end the chords\", line, i);\n\n\t\t\t\t\t\t\tif (el.pitches !== undefined) {\n\t\t\t\t\t\t\t\tif (chordDuration !== null) {\n\t\t\t\t\t\t\t\t\tel.duration = el.duration * chordDuration;\n\t\t\t\t\t\t\t\t\tif (rememberEndBeam)\n\t\t\t\t\t\t\t\t\t\taddEndBeam(el);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tmultilineVars.addFormattingOptions(el, tune.formatting, 'note');\n\t\t\t\t\t\t\t\ttuneBuilder.appendElement('note', startOfLine+startI, startOfLine+i, el);\n\t\t\t\t\t\t\t\tmultilineVars.measureNotEmpty = true;\n\t\t\t\t\t\t\t\tel = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\t// Single pitch\n\t\t\t\t\tvar el2 = {};\n\t\t\t\t\tvar core = getCoreNote(line, i, el2, true);\n\t\t\t\t\tif (el2.endTie !== undefined) setIsInTie(multilineVars,  overlayLevel, true);\n\t\t\t\t\tif (core !== null) {\n\t\t\t\t\t\tif (core.pitch !== undefined) {\n\t\t\t\t\t\t\tel.pitches = [ { } ];\n\t\t\t\t\t\t\t// TODO-PER: straighten this out so there is not so much copying: getCoreNote shouldn't change e'\n\t\t\t\t\t\t\tif (core.accidental !== undefined) el.pitches[0].accidental = core.accidental;\n\t\t\t\t\t\t\tel.pitches[0].pitch = core.pitch;\n\t\t\t\t\t\t\tel.pitches[0].name = core.name;\n\t\t\t\t\t\t\tif (core.midipitch || core.midipitch === 0)\n\t\t\t\t\t\t\t\tel.pitches[0].midipitch = core.midipitch;\n\t\t\t\t\t\t\tif (core.endSlur !== undefined) el.pitches[0].endSlur = core.endSlur;\n\t\t\t\t\t\t\tif (core.endTie !== undefined) el.pitches[0].endTie = core.endTie;\n\t\t\t\t\t\t\tif (core.startSlur !== undefined) el.pitches[0].startSlur = core.startSlur;\n\t\t\t\t\t\t\tif (el.startSlur !== undefined) el.pitches[0].startSlur = el.startSlur;\n\t\t\t\t\t\t\tif (el.dottedSlur !== undefined) el.pitches[0].dottedSlur = true;\n\t\t\t\t\t\t\tif (core.startTie !== undefined) el.pitches[0].startTie = core.startTie;\n\t\t\t\t\t\t\tif (el.startTie !== undefined) el.pitches[0].startTie = el.startTie;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.rest = core.rest;\n\t\t\t\t\t\t\tif (core.endSlur !== undefined) el.endSlur = core.endSlur;\n\t\t\t\t\t\t\tif (core.endTie !== undefined) el.rest.endTie = core.endTie;\n\t\t\t\t\t\t\tif (core.startSlur !== undefined) el.startSlur = core.startSlur;\n\t\t\t\t\t\t\tif (core.startTie !== undefined) el.rest.startTie = core.startTie;\n\t\t\t\t\t\t\tif (el.startTie !== undefined) el.rest.startTie = el.startTie;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (core.chord !== undefined) el.chord = core.chord;\n\t\t\t\t\t\tif (core.duration !== undefined) el.duration = core.duration;\n\t\t\t\t\t\tif (core.decoration !== undefined) el.decoration = core.decoration;\n\t\t\t\t\t\tif (core.graceNotes !== undefined) el.graceNotes = core.graceNotes;\n\t\t\t\t\t\tdelete el.startSlur;\n\t\t\t\t\t\tdelete el.dottedSlur;\n\t\t\t\t\t\tif (isInTie(multilineVars,  overlayLevel, el)) {\n\t\t\t\t\t\t\tif (el.pitches !== undefined) {\n\t\t\t\t\t\t\t\tel.pitches[0].endTie = true;\n\t\t\t\t\t\t\t} else if (el.rest.type !== 'spacer') {\n\t\t\t\t\t\t\t\tel.rest.endTie = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetIsInTie(multilineVars,  overlayLevel, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (core.startTie || el.startTie)\n\t\t\t\t\t\t\tsetIsInTie(multilineVars,  overlayLevel, true);\n\t\t\t\t\t\ti  = core.endChar;\n\n\t\t\t\t\t\tif (tripletNotesLeft > 0 && !(core.rest && core.rest.type === \"spacer\")) {\n\t\t\t\t\t\t\ttripletNotesLeft--;\n\t\t\t\t\t\t\tif (tripletNotesLeft === 0) {\n\t\t\t\t\t\t\t\tel.endTriplet = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (core.end_beam)\n\t\t\t\t\t\t\taddEndBeam(el);\n\n\t\t\t\t\t\t// If there is a whole rest, then it should be the duration of the measure, not it's own duration. We need to special case it.\n\t\t\t\t\t\t// If the time signature length is greater than 4/4, though, then a whole rest has no special treatment.\n\t\t\t\t\t\tif (el.rest && el.rest.type === 'rest' && el.duration === 1 && durationOfMeasure(multilineVars) <= 1) {\n\t\t\t\t\t\t\tel.rest.type = 'whole';\n\n\t\t\t\t\t\t\tel.duration = durationOfMeasure(multilineVars);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create a warning if this is not a displayable duration.\n\t\t\t\t\t\t// The first item on a line is a regular note value, each item after that represents a dot placed after the previous note.\n\t\t\t\t\t\t// Only durations less than a whole note are tested because whole note durations have some tricky rules.\n\n            if (el.duration < 1 && durations.indexOf(el.duration) === -1 && el.duration !== 0) {\n\t\t\t\t\t\t\tif (!el.rest || el.rest.type !== 'spacer')\n\t\t\t\t\t\t\t\twarn(\"Duration not representable: \" + line.substring(startI, i), line, i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmultilineVars.addFormattingOptions(el, tune.formatting, 'note');\n\t\t\t\t\t\ttuneBuilder.appendElement('note', startOfLine+startI, startOfLine+i, el);\n\t\t\t\t\t\tmultilineVars.measureNotEmpty = true;\n\t\t\t\t\t\tel = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (i === startI) {\t// don't know what this is, so ignore it.\n\t\t\t\t\tif (line[i] !== ' ' && line[i] !== '`')\n\t\t\t\t\t\twarn(\"Unknown character ignored\", line, i);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tthis.lineContinuation = line.indexOf('\\x12') >= 0 || (retHeader[0] > 0)\n\tif (!this.lineContinuation) { el = { } }\n};\n\nvar setIsInTie =function(multilineVars, overlayLevel, value) {\n\t// If this is single voice music then the voice index isn't set, so we use the first voice.\n\tvar voiceIndex = multilineVars.currentVoice ? multilineVars.currentVoice.staffNum * 100 + multilineVars.currentVoice.index : 0;\n\tif (multilineVars.inTie[overlayLevel] === undefined)\n\t\tmultilineVars.inTie[overlayLevel] = [];\n\tmultilineVars.inTie[overlayLevel][voiceIndex] = value;\n};\n\nvar letter_to_chord = function(line, i) {\n\tif (line[i] === '\"')\n\t{\n\t\tvar chord = tokenizer.getBrackettedSubstring(line, i, 5);\n\t\tif (!chord[2])\n\t\t\twarn(\"Missing the closing quote while parsing the chord symbol\", line , i);\n\t\t// If it starts with ^, then the chord appears above.\n\t\t// If it starts with _ then the chord appears below.\n\t\t// (note that the 2.0 draft standard defines them as not chords, but annotations and also defines @.)\n\t\tif (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '^') {\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tchord[2] = 'above';\n\t\t} else if (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '_') {\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tchord[2] = 'below';\n\t\t} else if (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '<') {\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tchord[2] = 'left';\n\t\t} else if (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '>') {\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tchord[2] = 'right';\n\t\t} else if (chord[0] > 0 && chord[1].length > 0 && chord[1][0] === '@') {\n\t\t\t// @-15,5.7\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tvar x = tokenizer.getFloat(chord[1]);\n\t\t\tif (x.digits === 0)\n\t\t\t\twarn(\"Missing first position in absolutely positioned annotation.\", line , i);\n\t\t\tchord[1] = chord[1].substring(x.digits);\n\t\t\tif (chord[1][0] !== ',')\n\t\t\t\twarn(\"Missing comma absolutely positioned annotation.\", line , i);\n\t\t\tchord[1] = chord[1].substring(1);\n\t\t\tvar y = tokenizer.getFloat(chord[1]);\n\t\t\tif (y.digits === 0)\n\t\t\t\twarn(\"Missing second position in absolutely positioned annotation.\", line , i);\n\t\t\tchord[1] = chord[1].substring(y.digits);\n\t\t\tvar ws = tokenizer.skipWhiteSpace(chord[1]);\n\t\t\tchord[1] = chord[1].substring(ws);\n\t\t\tchord[2] = null;\n\t\t\tchord[3] = { x: x.value, y: y.value };\n\t\t} else {\n\t\t\tif (multilineVars.freegchord !== true) {\n\t\t\t\tchord[1] = chord[1].replace(/([ABCDEFG0-9])b/g, \"$1♭\");\n\t\t\t\tchord[1] = chord[1].replace(/([ABCDEFG0-9])#/g, \"$1♯\");\n\t\t\t\tchord[1] = chord[1].replace(/^([ABCDEFG])([♯♭]?)o([^A-Za-z])/g, \"$1$2°$3\");\n\t\t\t\tchord[1] = chord[1].replace(/^([ABCDEFG])([♯♭]?)o$/g, \"$1$2°\");\n\t\t\t\tchord[1] = chord[1].replace(/^([ABCDEFG])([♯♭]?)0([^A-Za-z])/g, \"$1$2ø$3\");\n\t\t\t\tchord[1] = chord[1].replace(/^([ABCDEFG])([♯♭]?)\\^([^A-Za-z])/g, \"$1$2∆$3\");\n\t\t\t}\n\t\t\tchord[2] = 'default';\n\t\t\tchord[1] = transpose.chordName(multilineVars, chord[1]);\n\t\t}\n\t\treturn chord;\n\t}\n\treturn [0, \"\"];\n};\n\nvar letter_to_grace =  function(line, i) {\n\t// Grace notes are an array of: startslur, note, endslur, space; where note is accidental, pitch, duration\n\tif (line[i] === '{') {\n\t\t// fetch the gracenotes string and consume that into the array\n\t\tvar gra = tokenizer.getBrackettedSubstring(line, i, 1, '}');\n\t\tif (!gra[2])\n\t\t\twarn(\"Missing the closing '}' while parsing grace note\", line, i);\n\t\t// If there is a slur after the grace construction, then move it to the last note inside the grace construction\n\t\tif (line[i+gra[0]] === ')') {\n\t\t\tgra[0]++;\n\t\t\tgra[1] += ')';\n\t\t}\n\n\t\tvar gracenotes = [];\n\t\tvar ii = 0;\n\t\tvar inTie = false;\n\t\twhile (ii < gra[1].length) {\n\t\t\tvar acciaccatura = false;\n\t\t\tif (gra[1][ii] === '/') {\n\t\t\t\tacciaccatura = true;\n\t\t\t\tii++;\n\t\t\t}\n\t\t\tvar note = getCoreNote(gra[1], ii, {}, false);\n\t\t\tif (note !== null) {\n\t\t\t\t// The grace note durations should not be affected by the default length: they should be based on 1/16, so if that isn't the default, then multiply here.\n\t\t\t\tnote.duration = note.duration / (multilineVars.default_length * 8);\n\t\t\t\tif (acciaccatura)\n\t\t\t\t\tnote.acciaccatura = true;\n\t\t\t\tgracenotes.push(note);\n\n\t\t\t\tif (inTie) {\n\t\t\t\t\tnote.endTie = true;\n\t\t\t\t\tinTie = false;\n\t\t\t\t}\n\t\t\t\tif (note.startTie)\n\t\t\t\t\tinTie = true;\n\n\t\t\t\tii  = note.endChar;\n\t\t\t\tdelete note.endChar;\n\n\t\t\t\tif (note.end_beam) {\n\t\t\t\t\tnote.endBeam = true;\n\t\t\t\t\tdelete note.end_beam;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// We shouldn't get anything but notes or a space here, so report an error\n\t\t\t\tif (gra[1][ii] === ' ') {\n\t\t\t\t\tif (gracenotes.length > 0)\n\t\t\t\t\t\tgracenotes[gracenotes.length-1].endBeam = true;\n\t\t\t\t} else\n\t\t\t\t\twarn(\"Unknown character '\" + gra[1][ii] + \"' while parsing grace note\", line, i);\n\t\t\t\tii++;\n\t\t\t}\n\t\t}\n\t\tif (gracenotes.length)\n\t\t\treturn [gra[0], gracenotes];\n\t}\n\treturn [ 0 ];\n};\n\nfunction letter_to_overlay(line, i) {\n\tif (line[i] === '&') {\n\t\tvar start = i;\n\t\twhile (line[i] && line[i] !== ':' && line[i] !== '|')\n\t\t\ti++;\n\t\treturn [ i-start, line.substring(start+1, i) ];\n\t}\n\treturn [ 0 ];\n}\n\nfunction durationOfMeasure(multilineVars) {\n\t// TODO-PER: This could be more complicated if one of the unusual measures is used.\n\tvar meter = multilineVars.origMeter;\n\tif (!meter || meter.type !== 'specified')\n\t\treturn 1;\n\tif (!meter.value || meter.value.length === 0)\n\t\treturn 1;\n\treturn parseInt(meter.value[0].num, 10) / parseInt(meter.value[0].den, 10);\n}\n\n\n\n\nvar letter_to_accent = function(line, i) {\n\tvar macro = multilineVars.macros[line[i]];\n\n\tif (macro !== undefined) {\n\t\tif (macro[0] === '!' || macro[0] === '+')\n\t\t\tmacro = macro.substring(1);\n\t\tif (macro[macro.length-1] === '!' || macro[macro.length-1] === '+')\n\t\t\tmacro = macro.substring(0, macro.length-1);\n\t\tif (legalAccents.includes(macro))\n\t\t\treturn [ 1, macro ];\n\t\telse if (volumeDecorations.includes(macro)) {\n\t\t\tif (multilineVars.volumePosition === 'hidden')\n\t\t\t\tmacro = \"\";\n\t\t\treturn [1, macro];\n\t\t} else if (dynamicDecorations.includes(macro)) {\n\t\t\tif (multilineVars.dynamicPosition === 'hidden')\n\t\t\t\tmacro = \"\";\n\t\t\treturn [1, macro];\n\t\t} else {\n\t\t\tif (!multilineVars.ignoredDecorations.includes(macro))\n\t\t\t\twarn(\"Unknown macro: \" + macro, line, i);\n\t\t\treturn [1, '' ];\n\t\t}\n\t}\n\tswitch (line[i])\n\t{\n\t\tcase '.':\n\t\t\tif (line[i+1] === '(' || line[i+1] === '-') // a dot then open paren is a dotted slur; likewise dot dash is dotted tie.\n\t\t\t\tbreak;\n\t\t\treturn [1, 'staccato'];\n\t\tcase 'u':return [1, 'upbow'];\n\t\tcase 'v':return [1, 'downbow'];\n\t\tcase '~':return [1, 'irishroll'];\n\t\tcase '!':\n\t\tcase '+':\n\t\t\tvar ret = tokenizer.getBrackettedSubstring(line, i, 5);\n\t\t\t// Be sure that the accent is recognizable.\n\t\t\tif (ret[1].length > 1 && (ret[1][0] === '^' || ret[1][0] ==='_'))\n\t\t\t\tret[1] = ret[1].substring(1);\t// TODO-PER: The test files have indicators forcing the ornament to the top or bottom, but that isn't in the standard. We'll just ignore them.\n\t\t\tif (legalAccents.includes(ret[1]))\n\t\t\t\treturn ret;\n\t\t\tif (volumeDecorations.includes(ret[1])) {\n\t\t\t\tif (multilineVars.volumePosition === 'hidden' )\n\t\t\t\t\tret[1] = '';\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tif (dynamicDecorations.includes(ret[1])) {\n\t\t\t\tif (multilineVars.dynamicPosition === 'hidden' )\n\t\t\t\t\tret[1] = '';\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tvar ind = accentPseudonyms.findIndex(function (acc) { return ret[1] === acc[0]})\n\t\t\tif (ind >= 0) {\n\t\t\t\tret[1] = accentPseudonyms[ind][1];\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tind = accentDynamicPseudonyms.findIndex(function (acc) { return ret[1] === acc[0]})\n\t\t\tif (ind >= 0) {\n\t\t\t\tret[1] = accentDynamicPseudonyms[ind][1];\n\t\t\t\tif (multilineVars.dynamicPosition === 'hidden' )\n\t\t\t\t\tret[1] = '';\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// We didn't find the accent in the list, so consume the space, but don't return an accent.\n\t\t\t// Although it is possible that ! was used as a line break, so accept that.\n\t\t\tif (line[i] === '!' && (ret[0] === 1 || line[i+ret[0]-1] !== '!'))\n\t\t\t\treturn [1, null ];\n\t\t\twarn(\"Unknown decoration: \" + ret[1], line, i);\n\t\t\tret[1] = \"\";\n\t\t\treturn ret;\n\t\tcase 'H':return [1, 'fermata'];\n\t\tcase 'J':return [1, 'slide'];\n\t\tcase 'L':return [1, 'accent'];\n\t\tcase 'M':return [1, 'mordent'];\n\t\tcase 'O':return[1, 'coda'];\n\t\tcase 'P':return[1, 'pralltriller'];\n\t\tcase 'R':return [1, 'roll'];\n\t\tcase 'S':return [1, 'segno'];\n\t\tcase 'T':return [1, 'trill'];\n\t}\n\treturn [0, 0];\n};\n\nvar letter_to_spacer = function(line, i) {\n\tvar start = i;\n\twhile (tokenizer.isWhiteSpace(line[i]))\n\t\ti++;\n\treturn [ i-start ];\n};\n\n// returns the class of the bar line\n// the number of the repeat\n// and the number of characters used up\n// if 0 is returned, then the next element was not a bar line\nvar letter_to_bar = function(line, curr_pos) {\n\tvar ret = tokenizer.getBarLine(line, curr_pos);\n\tif (ret.len === 0)\n\t\treturn [0,\"\"];\n\tif (ret.warn) {\n\t\twarn(ret.warn, line, curr_pos);\n\t\treturn [ret.len,\"\"];\n\t}\n\n\t// Now see if this is a repeated ending\n\t// A repeated ending is all of the characters 1,2,3,4,5,6,7,8,9,0,-, and comma\n\t// It can also optionally start with '[', which is ignored.\n\t// Also, it can have white space before the '['.\n\tfor (var ws = 0; ws < line.length; ws++)\n\t\tif (line[curr_pos + ret.len + ws] !== ' ')\n\t\t\tbreak;\n\tvar orig_bar_len = ret.len;\n\tif (line[curr_pos+ret.len+ws] === '[') {\n\t\tret.len += ws + 1;\n\t}\n\n\t// It can also be a quoted string. It is unclear whether that construct requires '[', but it seems like it would. otherwise it would be confused with a regular chord.\n\tif (line[curr_pos+ret.len] === '\"' && line[curr_pos+ret.len-1] === '[') {\n\t\tvar ending = tokenizer.getBrackettedSubstring(line, curr_pos+ret.len, 5);\n\t\treturn [ret.len+ending[0], ret.token, ending[1]];\n\t}\n\tvar retRep = tokenizer.getTokenOf(line.substring(curr_pos+ret.len), \"1234567890-,\");\n\tif (retRep.len === 0 || retRep.token[0] === '-')\n\t\treturn [orig_bar_len, ret.token];\n\n\treturn [ret.len+retRep.len, ret.token, retRep.token];\n};\n\nvar letter_to_open_slurs_and_triplets =  function(line, i) {\n\t// consume spaces, and look for all the open parens. If there is a number after the open paren,\n\t// that is a triplet. Otherwise that is a slur. Collect all the slurs and the first triplet.\n\tvar ret = {};\n\tvar start = i;\n\tif (line[i] === '.' && line[i+1] === '(') {\n\t\tret.dottedSlur = true;\n\t\ti++;\n\t}\n\twhile (line[i] === '(' || tokenizer.isWhiteSpace(line[i])) {\n\t\tif (line[i] === '(') {\n\t\t\tif (i+1 < line.length && (line[i+1] >= '2' && line[i+1] <= '9')) {\n\t\t\t\tif (ret.triplet !== undefined)\n\t\t\t\t\twarn(\"Can't nest triplets\", line, i);\n\t\t\t\telse {\n\t\t\t\t\tret.triplet = line[i+1] - '0';\n\t\t\t\t\tret.tripletQ = tripletQ[ret.triplet];\n\t\t\t\t\tret.num_notes = ret.triplet;\n\t\t\t\t\tif (i+2 < line.length && line[i+2] === ':') {\n\t\t\t\t\t\t// We are expecting \"(p:q:r\" or \"(p:q\" or \"(p::r\"\n\t\t\t\t\t\t// That is: \"put p notes into the time of q for the next r notes\"\n\t\t\t\t\t\t// if r is missing, then it is equal to p.\n\t\t\t\t\t\t// if q is missing, it is determined from this table:\n\t\t\t\t\t\t// (2 notes in the time of 3\n\t\t\t\t\t\t// (3 notes in the time of 2\n\t\t\t\t\t\t// (4 notes in the time of 3\n\t\t\t\t\t\t// (5 notes in the time of n | if time sig is (6/8, 9/8, 12/8), n=3, else n=2\n\t\t\t\t\t\t// (6 notes in the time of 2\n\t\t\t\t\t\t// (7 notes in the time of n\n\t\t\t\t\t\t// (8 notes in the time of 3\n\t\t\t\t\t\t// (9 notes in the time of n\n\t\t\t\t\t\tif (i+3 < line.length && line[i+3] === ':') {\n\t\t\t\t\t\t\t// The second number, 'q', is not present.\n\t\t\t\t\t\t\tif (i+4 < line.length && (line[i+4] >= '1' && line[i+4] <= '9')) {\n\t\t\t\t\t\t\t\tret.num_notes = line[i+4] - '0';\n\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\twarn(\"expected number after the two colons after the triplet to mark the duration\", line, i);\n\t\t\t\t\t\t} else if (i+3 < line.length && (line[i+3] >= '1' && line[i+3] <= '9')) {\n\t\t\t\t\t\t\tret.tripletQ = line[i+3] - '0';\n\t\t\t\t\t\t\tif (i+4 < line.length && line[i+4] === ':') {\n\t\t\t\t\t\t\t\tif (i+5 < line.length && (line[i+5] >= '1' && line[i+5] <= '9')) {\n\t\t\t\t\t\t\t\t\tret.num_notes = line[i+5] - '0';\n\t\t\t\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ti += 2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\twarn(\"expected number after the triplet to mark the duration\", line, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (ret.startSlur === undefined)\n\t\t\t\t\tret.startSlur = 1;\n\t\t\t\telse\n\t\t\t\t\tret.startSlur++;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\tret.consumed = i-start;\n\treturn ret;\n};\n\nMusicParser.prototype.startNewLine = function() {\n\tvar params = { startChar: -1, endChar: -1};\n\tif (multilineVars.partForNextLine.title)\n\t\tparams.part = multilineVars.partForNextLine;\n\tparams.clef = multilineVars.currentVoice && multilineVars.staves[multilineVars.currentVoice.staffNum].clef !== undefined ? parseCommon.clone(multilineVars.staves[multilineVars.currentVoice.staffNum].clef) : parseCommon.clone(multilineVars.clef);\n\tvar scoreTranspose = multilineVars.currentVoice ? multilineVars.currentVoice.scoreTranspose : 0;\n\tparams.key = parseKeyVoice.standardKey(multilineVars.key.root+multilineVars.key.acc+multilineVars.key.mode, multilineVars.key.root, multilineVars.key.acc, scoreTranspose);\n\tparams.key.mode = multilineVars.key.mode;\n\tif (multilineVars.key.impliedNaturals)\n\t\tparams.key.impliedNaturals = multilineVars.key.impliedNaturals;\n\tif (multilineVars.key.explicitAccidentals) {\n\t\tfor (var i = 0; i < multilineVars.key.explicitAccidentals.length; i++) {\n\t\t\tvar found = false;\n\t\t\tfor (var j = 0; j < params.key.accidentals.length; j++) {\n\t\t\t\tif (params.key.accidentals[j].note === multilineVars.key.explicitAccidentals[i].note) {\n\t\t\t\t\t// If the note is already in the list, override it with the new value\n\t\t\t\t\tparams.key.accidentals[j].acc = multilineVars.key.explicitAccidentals[i].acc;\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found)\n\t\t\t\tparams.key.accidentals.push(multilineVars.key.explicitAccidentals[i]);\n\t\t}\n\t}\n\tmultilineVars.targetKey = params.key;\n\tif (params.key.explicitAccidentals)\n\t\tdelete params.key.explicitAccidentals;\n\tparseKeyVoice.addPosToKey(params.clef, params.key);\n\tif (multilineVars.meter !== null) {\n\t\tif (multilineVars.currentVoice) {\n\t\t\tmultilineVars.staves.forEach(function(st) {\n\t\t\t\tst.meter = multilineVars.meter;\n\t\t\t});\n\t\t\tparams.meter = multilineVars.staves[multilineVars.currentVoice.staffNum].meter;\n\t\t\tmultilineVars.staves[multilineVars.currentVoice.staffNum].meter = null;\n\t\t} else\n\t\t\tparams.meter = multilineVars.meter;\n\t\tmultilineVars.meter = null;\n\t} else if (multilineVars.currentVoice && multilineVars.staves[multilineVars.currentVoice.staffNum].meter) {\n\t\t// Make sure that each voice gets the meter marking.\n\t\tparams.meter = multilineVars.staves[multilineVars.currentVoice.staffNum].meter;\n\t\tmultilineVars.staves[multilineVars.currentVoice.staffNum].meter = null;\n\t}\n\tif (multilineVars.currentVoice && multilineVars.currentVoice.name)\n\t\tparams.name = multilineVars.currentVoice.name;\n\tif (multilineVars.vocalfont)\n\t\tparams.vocalfont = multilineVars.vocalfont;\n\tif (multilineVars.tripletfont)\n\t\tparams.tripletfont = multilineVars.tripletfont;\n\tif (multilineVars.gchordfont)\n\t\tparams.gchordfont = multilineVars.gchordfont;\n\tif (multilineVars.style)\n\t\tparams.style = multilineVars.style;\n\tif (multilineVars.currentVoice) {\n\t\tvar staff = multilineVars.staves[multilineVars.currentVoice.staffNum];\n\t\tif (staff.brace) params.brace = staff.brace;\n\t\tif (staff.bracket) params.bracket = staff.bracket;\n\t\tif (staff.connectBarLines) params.connectBarLines = staff.connectBarLines;\n\t\tif (staff.name) params.name = staff.name[multilineVars.currentVoice.index];\n\t\tif (staff.subname) params.subname = staff.subname[multilineVars.currentVoice.index];\n\t\tif (multilineVars.currentVoice.stem)\n\t\t\tparams.stem = multilineVars.currentVoice.stem;\n\t\tif (multilineVars.currentVoice.stafflines)\n\t\t\tparams.stafflines = multilineVars.currentVoice.stafflines;\n\t\tif (multilineVars.currentVoice.staffscale)\n\t\t\tparams.staffscale = multilineVars.currentVoice.staffscale;\n\t\tif (multilineVars.currentVoice.scale)\n\t\t\tparams.scale = multilineVars.currentVoice.scale;\n\t\tif (multilineVars.currentVoice.color)\n\t\t\tparams.color = multilineVars.currentVoice.color;\n\t\tif (multilineVars.currentVoice.style)\n\t\t\tparams.style = multilineVars.currentVoice.style;\n\t\tif (multilineVars.currentVoice.transpose)\n\t\t\tparams.clef.transpose = multilineVars.currentVoice.transpose;\n\t}\n\tvar isFirstVoice = multilineVars.currentVoice === undefined || (multilineVars.currentVoice.staffNum ===  0 && multilineVars.currentVoice.index ===  0);\n\tif (multilineVars.barNumbers === 0 && isFirstVoice && multilineVars.currBarNumber !== 1)\n\t\tparams.barNumber = multilineVars.currBarNumber;\n\ttuneBuilder.startNewLine(params);\n\tif (multilineVars.key.impliedNaturals)\n\t\tdelete multilineVars.key.impliedNaturals;\n\n\tmultilineVars.partForNextLine = {};\n\tif (multilineVars.tempoForNextLine.length === 4)\n\t\ttuneBuilder.appendElement(multilineVars.tempoForNextLine[0],multilineVars.tempoForNextLine[1],multilineVars.tempoForNextLine[2],multilineVars.tempoForNextLine[3]);\n\tmultilineVars.tempoForNextLine = [];\n}\n\n// TODO-PER: make this a method in el.\nvar addEndBeam = function(el) {\n\tif (el.duration !== undefined && el.duration < 0.25)\n\t\tel.end_beam = true;\n\treturn el;\n};\n\nvar getCoreNote = function(line, index, el, canHaveBrokenRhythm) {\n\t//var el = { startChar: index };\n\tvar isComplete = function(state) {\n\t\treturn (state === 'octave' || state === 'duration' || state === 'Zduration' || state === 'broken_rhythm' || state === 'end_slur');\n\t};\n\tvar dottedTie;\n\tif (line[index] === '.' && line[index+1] === '-') {\n\t\tdottedTie = true;\n\t\tindex++;\n\t}\n\tvar state = 'startSlur';\n\tvar durationSetByPreviousNote = false;\n\twhile (1) {\n\t\tswitch(line[index]) {\n\t\t\tcase '(':\n\t\t\t\tif (state === 'startSlur') {\n\t\t\t\t\tif (el.startSlur === undefined) el.startSlur = 1; else el.startSlur++;\n\t\t\t\t} else if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\tif (isComplete(state)) {\n\t\t\t\t\tif (el.endSlur === undefined) el.endSlur = 1; else el.endSlur++;\n\t\t\t\t} else return null;\n\t\t\t\tbreak;\n\t\t\tcase '^':\n\t\t\t\tif (state === 'startSlur') {el.accidental = 'sharp';state = 'sharp2';}\n\t\t\t\telse if (state === 'sharp2') {el.accidental = 'dblsharp';state = 'pitch';}\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '_':\n\t\t\t\tif (state === 'startSlur') {el.accidental = 'flat';state = 'flat2';}\n\t\t\t\telse if (state === 'flat2') {el.accidental = 'dblflat';state = 'pitch';}\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '=':\n\t\t\t\tif (state === 'startSlur') {el.accidental = 'natural';state = 'pitch';}\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase 'A':\n\t\t\tcase 'B':\n\t\t\tcase 'C':\n\t\t\tcase 'D':\n\t\t\tcase 'E':\n\t\t\tcase 'F':\n\t\t\tcase 'G':\n\t\t\tcase 'a':\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'e':\n\t\t\tcase 'f':\n\t\t\tcase 'g':\n\t\t\t\tif (state === 'startSlur' || state === 'sharp2' || state === 'flat2' || state === 'pitch') {\n\t\t\t\t\tel.pitch = pitches[line[index]];\n\t\t\t\t\tel.pitch += 7 * (multilineVars.currentVoice && multilineVars.currentVoice.octave !== undefined ? multilineVars.currentVoice.octave : multilineVars.octave);\n\t\t\t\t\tel.name = line[index];\n\t\t\t\t\tif (el.accidental)\n\t\t\t\t\t\tel.name = accMap[el.accidental] + el.name;\n\t\t\t\t\ttranspose.note(multilineVars, el);\n\t\t\t\t\tstate = 'octave';\n\t\t\t\t\t// At this point we have a valid note. The rest is optional. Set the duration in case we don't get one below\n\t\t\t\t\tif (canHaveBrokenRhythm && multilineVars.next_note_duration !== 0) {\n\t\t\t\t\t\tel.duration = multilineVars.default_length * multilineVars.next_note_duration;\n\t\t\t\t\t\tmultilineVars.next_note_duration = 0;\n\t\t\t\t\t\tdurationSetByPreviousNote = true;\n\t\t\t\t\t} else\n\t\t\t\t\t\tel.duration = multilineVars.default_length;\n\t\t\t\t\t// If the clef is percussion, there is probably some translation of the pitch to a particular drum kit item.\n\t\t\t\t\tif ((multilineVars.clef && multilineVars.clef.type === \"perc\") ||\n\t\t\t\t\t\t(multilineVars.currentVoice && multilineVars.currentVoice.clef === \"perc\")) {\n\t\t\t\t\t\tvar key = line[index];\n\t\t\t\t\t\tif (el.accidental) {\n\t\t\t\t\t\t\tkey = accMap[el.accidental] + key;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tune.formatting && tune.formatting.midi && tune.formatting.midi.drummap)\n\t\t\t\t\t\tel.midipitch = tune.formatting.midi.drummap[key];\n\t\t\t\t\t}\n\t\t\t\t} else if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase ',':\n\t\t\t\tif (state === 'octave') {el.pitch -= 7; el.name += ','; }\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '\\'':\n\t\t\t\tif (state === 'octave') {el.pitch += 7; el.name += \"'\";  }\n\t\t\t\telse if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase 'x':\n\t\t\tcase 'X':\n\t\t\tcase 'y':\n\t\t\tcase 'z':\n\t\t\tcase 'Z':\n\t\t\t\tif (state === 'startSlur') {\n\t\t\t\t\tel.rest = { type: rests[line[index]] };\n\t\t\t\t\t// There shouldn't be some of the properties that notes have. If some sneak in due to bad syntax in the abc file,\n\t\t\t\t\t// just nix them here.\n\t\t\t\t\tdelete el.accidental;\n\t\t\t\t\tdelete el.startSlur;\n\t\t\t\t\tdelete el.startTie;\n\t\t\t\t\tdelete el.endSlur;\n\t\t\t\t\tdelete el.endTie;\n\t\t\t\t\tdelete el.end_beam;\n\t\t\t\t\tdelete el.grace_notes;\n\t\t\t\t\t// At this point we have a valid note. The rest is optional. Set the duration in case we don't get one below\n\t\t\t\t\tif (el.rest.type.indexOf('multimeasure') >= 0) {\n\t\t\t\t\t\tel.duration = tune.getBarLength();\n\t\t\t\t\t\tel.rest.text = 1;\n\t\t\t\t\t\tstate = 'Zduration';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (canHaveBrokenRhythm && multilineVars.next_note_duration !== 0) {\n\t\t\t\t\t\t\tel.duration = multilineVars.default_length * multilineVars.next_note_duration;\n\t\t\t\t\t\t\tmultilineVars.next_note_duration = 0;\n\t\t\t\t\t\t\tdurationSetByPreviousNote = true;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tel.duration = multilineVars.default_length;\n\t\t\t\t\t\tstate = 'duration';\n\t\t\t\t\t}\n\t\t\t\t} else if (isComplete(state)) {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '1':\n\t\t\tcase '2':\n\t\t\tcase '3':\n\t\t\tcase '4':\n\t\t\tcase '5':\n\t\t\tcase '6':\n\t\t\tcase '7':\n\t\t\tcase '8':\n\t\t\tcase '9':\n\t\t\tcase '0':\n\t\t\tcase '/':\n\t\t\t\tif (state === 'octave' || state === 'duration') {\n\t\t\t\t\tvar fraction = tokenizer.getFraction(line, index);\n\t\t\t\t\t//if (!durationSetByPreviousNote)\n\t\t\t\t\tel.duration = el.duration * fraction.value;\n\t\t\t\t\t// TODO-PER: We can test the returned duration here and give a warning if it isn't the one expected.\n\t\t\t\t\tel.endChar = fraction.index;\n\t\t\t\t\twhile (fraction.index < line.length && (tokenizer.isWhiteSpace(line[fraction.index]) || line[fraction.index] === '-')) {\n\t\t\t\t\t\tif (line[fraction.index] === '-')\n\t\t\t\t\t\t\tel.startTie = {};\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel = addEndBeam(el);\n\t\t\t\t\t\tfraction.index++;\n\t\t\t\t\t}\n\t\t\t\t\tindex = fraction.index-1;\n\t\t\t\t\tstate = 'broken_rhythm';\n\t\t\t\t} else if (state === 'sharp2') {\n\t\t\t\t\tel.accidental = 'quartersharp';state = 'pitch';\n\t\t\t\t} else if (state === 'flat2') {\n\t\t\t\t\tel.accidental = 'quarterflat';state = 'pitch';\n\t\t\t\t} else if (state === 'Zduration') {\n\t\t\t\t\tvar num = tokenizer.getNumber(line, index);\n\t\t\t\t\tel.duration = num.num * tune.getBarLength();\n\t\t\t\t\tel.rest.text = num.num;\n\t\t\t\t\tel.endChar = num.index;\n\t\t\t\t\treturn el;\n\t\t\t\t} else return null;\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tif (state === 'startSlur') {\n\t\t\t\t\t// This is the first character, so it must have been meant for the previous note. Correct that here.\n\t\t\t\t\ttuneBuilder.addTieToLastNote(dottedTie);\n\t\t\t\t\tel.endTie = true;\n\t\t\t\t} else if (state === 'octave' || state === 'duration' || state === 'end_slur') {\n\t\t\t\t\tel.startTie = {};\n\t\t\t\t\tif (!durationSetByPreviousNote && canHaveBrokenRhythm)\n\t\t\t\t\t\tstate = 'broken_rhythm';\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Peek ahead to the next character. If it is a space, then we have an end beam.\n\t\t\t\t\t\tif (tokenizer.isWhiteSpace(line[index + 1]))\n\t\t\t\t\t\t\taddEndBeam(el);\n\t\t\t\t\t\tel.endChar = index+1;\n\t\t\t\t\t\treturn el;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === 'broken_rhythm') {el.endChar = index;return el;}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase ' ':\n\t\t\tcase '\\t':\n\t\t\t\tif (isComplete(state)) {\n\t\t\t\t\tel.end_beam = true;\n\t\t\t\t\t// look ahead to see if there is a tie\n\t\t\t\t\tdottedTie = false;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (line[index] === '.' && line[index+1] === '-') {\n\t\t\t\t\t\t\tdottedTie = true;\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (line[index] === '-') {\n\t\t\t\t\t\t\tel.startTie = {};\n\t\t\t\t\t\t\tif (dottedTie)\n\t\t\t\t\t\t\t\tel.startTie.style = \"dotted\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t} while (index < line.length &&\n\t\t\t\t\t\t(tokenizer.isWhiteSpace(line[index]) || line[index] === '-') ||\n\t\t\t\t\t\t(line[index] === '.' && line[index+1] === '-'));\n\t\t\t\t\tel.endChar = index;\n\t\t\t\t\tif (!durationSetByPreviousNote && canHaveBrokenRhythm && (line[index] === '<' || line[index] === '>')) {\t// TODO-PER: Don't need the test for < and >, but that makes the endChar work out for the regression test.\n\t\t\t\t\t\tindex--;\n\t\t\t\t\t\tstate = 'broken_rhythm';\n\t\t\t\t\t} else\n\t\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\telse return null;\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\tcase '<':\n\t\t\t\tif (isComplete(state)) {\n\t\t\t\t\tif (canHaveBrokenRhythm) {\n\t\t\t\t\t\tvar br2 = getBrokenRhythm(line, index);\n\t\t\t\t\t\tindex += br2[0] - 1;\t// index gets incremented below, so we'll let that happen\n\t\t\t\t\t\tmultilineVars.next_note_duration = br2[2];\n\t\t\t\t\t\tel.duration = br2[1]*el.duration;\n\t\t\t\t\t\tstate = 'end_slur';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel.endChar = index;\n\t\t\t\t\t\treturn el;\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\treturn null;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (isComplete(state)) {\n\t\t\t\t\tel.endChar = index;\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t}\n\t\tindex++;\n\t\tif (index === line.length) {\n\t\t\tif (isComplete(state)) {el.endChar = index;return el;}\n\t\t\telse return null;\n\t\t}\n\t}\n\treturn null;\n};\n\nvar getBrokenRhythm = function(line, index) {\n\tswitch (line[index]) {\n\t\tcase '>':\n\t\t\tif (index < line.length - 2 && line[index + 1] === '>' && line[index + 2] === '>')\t// triple >>>\n\t\t\t\treturn [3, 1.875, 0.125];\n\t\t\telse if (index < line.length - 1 && line[index + 1] === '>')\t// double >>\n\t\t\t\treturn [2, 1.75, 0.25];\n\t\t\telse\n\t\t\t\treturn [1, 1.5, 0.5];\n\t\tcase '<':\n\t\t\tif (index < line.length - 2 && line[index + 1] === '<' && line[index + 2] === '<')\t// triple <<<\n\t\t\t\treturn [3, 0.125, 1.875];\n\t\t\telse if (index < line.length - 1 && line[index + 1] === '<')\t// double <<\n\t\t\t\treturn [2, 0.25, 1.75];\n\t\t\telse\n\t\t\t\treturn [1, 0.5, 1.5];\n\t}\n\treturn null;\n};\n", "//    abc_tokenizer.js: tokenizes an ABC Music Notation string to support abc_parse.\n\nimport parseCommon from './abc_common.js';\n\n\n// this is a series of functions that get a particular element out of the passed stream.\n// the return is the number of characters consumed, so 0 means that the element wasn't found.\n// also returned is the element found. This may be a different length because spaces may be consumed that aren't part of the string.\n// The return structure for most calls is { len: num_chars_consumed, token: str }\nvar Tokenizer = function(lines, multilineVars) {\n\tthis.lineIndex = 0\n\tthis.lines = lines\n\tthis.multilineVars = multilineVars;\n\n\tthis.skipWhiteSpace = function(str) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t  if (!this.isWhiteSpace(str[i]))\n\t\t\t\treturn i;\n\t\t}\n\t\treturn str.length;\t// It must have been all white space\n\t};\n\tvar finished = function(str, i) {\n\t\treturn i >= str.length;\n\t};\n\tthis.eatWhiteSpace = function(line, index) {\n\t\tfor (var i = index; i < line.length; i++) {\n\t\t  if (!this.isWhiteSpace(line[i]))\n\t\t\t\treturn i-index;\n\t\t}\n\t\treturn i-index;\n\t};\n\n\t// This just gets the basic pitch letter, ignoring leading spaces, and normalizing it to a capital\n\tthis.getKeyPitch = function(str) {\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tswitch (str[i]) {\n\t\t\tcase 'A':return {len: i+1, token: 'A'};\n\t\t\tcase 'B':return {len: i+1, token: 'B'};\n\t\t\tcase 'C':return {len: i+1, token: 'C'};\n\t\t\tcase 'D':return {len: i+1, token: 'D'};\n\t\t\tcase 'E':return {len: i+1, token: 'E'};\n\t\t\tcase 'F':return {len: i+1, token: 'F'};\n\t\t\tcase 'G':return {len: i+1, token: 'G'};\n//\t\t\tcase 'a':return {len: i+1, token: 'A'};\n//\t\t\tcase 'b':return {len: i+1, token: 'B'};\n//\t\t\tcase 'c':return {len: i+1, token: 'C'};\n//\t\t\tcase 'd':return {len: i+1, token: 'D'};\n//\t\t\tcase 'e':return {len: i+1, token: 'E'};\n//\t\t\tcase 'f':return {len: i+1, token: 'F'};\n//\t\t\tcase 'g':return {len: i+1, token: 'G'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\t// This just gets the basic accidental, ignoring leading spaces, and only the ones that appear in a key\n\tthis.getSharpFlat = function(str) {\n\t\tif (str === 'bass')\n\t\t\treturn {len: 0};\n\t\tswitch (str[0]) {\n\t\t\tcase '#':return {len: 1, token: '#'};\n\t\t\tcase 'b':return {len: 1, token: 'b'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\tthis.getMode = function(str) {\n\t\tvar skipAlpha = function(str, start) {\n\t\t\t// This returns the index of the next non-alphabetic char, or the entire length of the string if not found.\n\t\t  while (start < str.length && ((str[start] >= 'a' && str[start] <= 'z') || (str[start] >= 'A' && str[start] <= 'Z')))\n\t\t\t\tstart++;\n\t\t\treturn start;\n\t\t};\n\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tvar firstThree = str.substring(i,i+3).toLowerCase();\n\t\tif (firstThree.length > 1 && firstThree[1] === ' ' || firstThree[1] === '^' || firstThree[1] === '_' || firstThree[1] === '=') firstThree = firstThree[0];\t// This will handle the case of 'm'\n\t\tswitch (firstThree) {\n\t\t\tcase 'mix':return {len: skipAlpha(str, i), token: 'Mix'};\n\t\t\tcase 'dor':return {len: skipAlpha(str, i), token: 'Dor'};\n\t\t\tcase 'phr':return {len: skipAlpha(str, i), token: 'Phr'};\n\t\t\tcase 'lyd':return {len: skipAlpha(str, i), token: 'Lyd'};\n\t\t\tcase 'loc':return {len: skipAlpha(str, i), token: 'Loc'};\n\t\t\tcase 'aeo':return {len: skipAlpha(str, i), token: 'm'};\n\t\t\tcase 'maj':return {len: skipAlpha(str, i), token: ''};\n\t\t\tcase 'ion':return {len: skipAlpha(str, i), token: ''};\n\t\t\tcase 'min':return {len: skipAlpha(str, i), token: 'm'};\n\t\t\tcase 'm':return {len: skipAlpha(str, i), token: 'm'};\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\tthis.getClef = function(str, bExplicitOnly) {\n\t\tvar strOrig = str;\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\t// The word 'clef' is optional, but if it appears, a clef MUST appear\n\t\tvar needsClef = false;\n\t\tvar strClef = str.substring(i);\n\t\tif (parseCommon.startsWith(strClef, 'clef=')) {\n\t\t\tneedsClef = true;\n\t\t\tstrClef = strClef.substring(5);\n\t\t\ti += 5;\n\t\t}\n\t\tif (strClef.length === 0 && needsClef)\n\t\t\treturn {len: i+5, warn: \"No clef specified: \" + strOrig};\n\n\t\tvar j = this.skipWhiteSpace(strClef);\n\t\tif (finished(strClef, j))\n\t\t\treturn {len: 0};\n\t\tif (j > 0) {\n\t\t\ti += j;\n\t\t\tstrClef = strClef.substring(j);\n\t\t}\n\t\tvar name = null;\n\t\tif (parseCommon.startsWith(strClef, 'treble'))\n\t\t\tname = 'treble';\n\t\telse if (parseCommon.startsWith(strClef, 'bass3'))\n\t\t\tname = 'bass3';\n\t\telse if (parseCommon.startsWith(strClef, 'bass'))\n\t\t\tname = 'bass';\n\t\telse if (parseCommon.startsWith(strClef, 'tenor'))\n\t\t\tname = 'tenor';\n\t\telse if (parseCommon.startsWith(strClef, 'alto2'))\n\t\t\tname = 'alto2';\n\t\telse if (parseCommon.startsWith(strClef, 'alto1'))\n\t\t\tname = 'alto1';\n\t\telse if (parseCommon.startsWith(strClef, 'alto'))\n\t\t\tname = 'alto';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'none')))\n\t\t\tname = 'none';\n\t\telse if (parseCommon.startsWith(strClef, 'perc'))\n\t\t\tname = 'perc';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'C')))\n\t\t\tname = 'tenor';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'F')))\n\t\t\tname = 'bass';\n\t\telse if (!bExplicitOnly && (needsClef && parseCommon.startsWith(strClef, 'G')))\n\t\t\tname = 'treble';\n\t\telse\n\t\t\treturn {len: i+5, warn: \"Unknown clef specified: \" + strOrig};\n\n\t\tstrClef = strClef.substring(name.length);\n\t\tj = this.isMatch(strClef, '+8');\n\t\tif (j > 0)\n\t\t\tname += \"+8\";\n\t\telse {\n\t\t\tj = this.isMatch(strClef, '-8');\n\t\t\tif (j > 0)\n\t\t\t\tname += \"-8\";\n\t\t}\n\t\treturn {len: i+name.length, token: name, explicit: needsClef};\n\t};\n\n\t// This returns one of the legal bar lines\n\t// This is called alot and there is no obvious tokenable items, so this is broken apart.\n\tthis.getBarLine = function(line, i) {\n\t\tswitch (line[i]) {\n\t\t\tcase ']':\n\t\t\t\t++i;\n\t\t\t\tswitch (line[i]) {\n\t\t\t\t\tcase '|': return {len: 2, token: \"bar_thick_thin\"};\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tif ((line[i] >= '1' && line[i] <= '9') || line[i] === '\"')\n\t\t\t\t\t\t\treturn {len: 2, token: \"bar_invisible\"};\n\t\t\t\t\t\treturn {len: 1, warn: \"Unknown bar symbol\"};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 1, token: \"bar_invisible\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase ':':\n\t\t\t\t++i;\n\t\t\t\tswitch (line[i]) {\n\t\t\t\t\tcase ':': return {len: 2, token: \"bar_dbl_repeat\"};\n\t\t\t\t\tcase '|':\t// :|\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tswitch (line[i]) {\n\t\t\t\t\t\t\tcase ']':\t// :|]\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tswitch (line[i]) {\n\t\t\t\t\t\t\t\t\tcase '|':\t// :|]|\n\t\t\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\t\t\tif (line[i] === ':')  return {len: 5, token: \"bar_dbl_repeat\"};\n\t\t\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '|':\t// :||\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tif (line[i] === ':')  return {len: 4, token: \"bar_dbl_repeat\"};\n\t\t\t\t\t\t\t\treturn {len: 3, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn {len: 2, token: \"bar_right_repeat\"};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 1, warn: \"Unknown bar symbol\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '[':\t// [\n\t\t\t\t++i;\n\t\t\t\tif (line[i] === '|') {\t// [|\n\t\t\t\t\t++i;\n\t\t\t\t\tswitch (line[i]) {\n\t\t\t\t\t\tcase ':': return {len: 3, token: \"bar_left_repeat\"};\n\t\t\t\t\t\tcase ']': return {len: 3, token: \"bar_invisible\"};\n\t\t\t\t\t\tdefault: return {len: 2, token: \"bar_thick_thin\"};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ((line[i] >= '1' && line[i] <= '9') || line[i] === '\"')\n\t\t\t\t\t\treturn {len: 1, token: \"bar_invisible\"};\n\t\t\t\t\treturn {len: 0};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '|':\t// |\n\t\t\t\t++i;\n\t\t\t\tswitch (line[i]) {\n\t\t\t\t\tcase ']': return {len: 2, token: \"bar_thin_thick\"};\n\t\t\t\t\tcase '|': // ||\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tif (line[i] === ':') return {len: 3, token: \"bar_left_repeat\"};\n\t\t\t\t\t\treturn {len: 2, token: \"bar_thin_thin\"};\n\t\t\t\t\tcase ':':\t// |:\n\t\t\t\t\t\tvar colons = 0;\n\t\t\t\t\t\twhile (line[i+colons] === ':') colons++;\n\t\t\t\t\t\treturn { len: 1+colons, token: \"bar_left_repeat\"};\n\t\t\t\t\tdefault: return {len: 1, token: \"bar_thin\"};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn {len: 0};\n\t};\n\n\t// this returns all the characters in the string that match one of the characters in the legalChars string\n\tthis.getTokenOf = function(str, legalChars) {\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tif (legalChars.indexOf(str[i]) < 0)\n\t\t\t\treturn {len: i, token: str.substring(0, i)};\n\t\t}\n\t\treturn {len: i, token: str};\n\t};\n\n\tthis.getToken = function(str, start, end) {\n\t\t// This returns the next set of chars that doesn't contain spaces\n\t\tvar i = start;\n\t\twhile (i < end && !this.isWhiteSpace(str[i]))\n\t\t\ti++;\n\t\treturn str.substring(start, i);\n\t};\n\n\t// This just sees if the next token is the word passed in, with possible leading spaces\n\tthis.isMatch = function(str, match) {\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn 0;\n\t\tif (parseCommon.startsWith(str.substring(i), match))\n\t\t\treturn i+match.length;\n\t\treturn 0;\n\t};\n\n\tthis.getPitchFromTokens = function(tokens) {\n\t\tvar ret = { };\n\t\tvar pitches = {A: 5, B: 6, C: 0, D: 1, E: 2, F: 3, G: 4, a: 12, b: 13, c: 7, d: 8, e: 9, f: 10, g: 11};\n\t\tret.position = pitches[tokens[0].token];\n\t\tif (ret.position === undefined)\n\t\t\treturn { warn: \"Pitch expected. Found: \" + tokens[0].token };\n\t\ttokens.shift();\n\t\twhile (tokens.length) {\n\t\t\tswitch (tokens[0].token) {\n\t\t\t\tcase ',': ret.position -= 7; tokens.shift(); break;\n\t\t\t\tcase '\\'': ret.position += 7; tokens.shift(); break;\n\t\t\t\tdefault: return ret;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\tthis.getKeyAccidentals2 = function(tokens) {\n\t\tvar accs;\n\t\t// find and strip off all accidentals in the token list\n\t\twhile (tokens.length > 0) {\n\t\t\tvar acc;\n\t\t\tif (tokens[0].token === '^') {\n\t\t\t\tacc = 'sharp';\n\t\t\t\ttokens.shift();\n\t\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\tcase '^': acc = 'dblsharp'; tokens.shift(); break;\n\t\t\t\t\tcase '/': acc = 'quartersharp'; tokens.shift(); break;\n\t\t\t\t}\n\t\t\t} else if (tokens[0].token === '=') {\n\t\t\t\tacc = 'natural';\n\t\t\t\ttokens.shift();\n\t\t\t} else if (tokens[0].token === '_') {\n\t\t\t\tacc = 'flat';\n\t\t\t\ttokens.shift();\n\t\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\t\tswitch (tokens[0].token) {\n\t\t\t\t\tcase '_': acc = 'dblflat'; tokens.shift(); break;\n\t\t\t\t\tcase '/': acc = 'quarterflat'; tokens.shift(); break;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Not an accidental, we'll assume that a later parse will recognize it.\n\t\t\t\treturn { accs: accs };\n\t\t\t}\n\t\t\tif (tokens.length === 0) return {accs: accs, warn: 'Expected note name after ' + acc};\n\t\t\tswitch (tokens[0].token[0])\n\t\t\t{\n\t\t\t\tcase 'a':\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'e':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'g':\n\t\t\t\tcase 'A':\n\t\t\t\tcase 'B':\n\t\t\t\tcase 'C':\n\t\t\t\tcase 'D':\n\t\t\t\tcase 'E':\n\t\t\t\tcase 'F':\n\t\t\t\tcase 'G':\n\t\t\t\t\tif (accs === undefined)\n\t\t\t\t\t\taccs = [];\n\t\t\t\t\taccs.push({ acc: acc, note: tokens[0].token[0] });\n\t\t\t\t\tif (tokens[0].token.length === 1)\n\t\t\t\t\t\ttokens.shift();\n\t\t\t\t\telse\n\t\t\t\t\t\ttokens[0].token = tokens[0].token.substring(1);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {accs: accs, warn: 'Expected note name after ' + acc + ' Found: ' + tokens[0].token };\n\t\t\t}\n\t\t}\n\t\treturn { accs: accs };\n\t};\n\n\t// This gets an accidental marking for the key signature. It has the accidental then the pitch letter.\n\tthis.getKeyAccidental = function(str) {\n\t\tvar accTranslation = {\n\t\t\t'^': 'sharp',\n\t\t\t'^^': 'dblsharp',\n\t\t\t'=': 'natural',\n\t\t\t'_': 'flat',\n\t\t\t'__': 'dblflat',\n\t\t\t'_/': 'quarterflat',\n\t\t\t'^/': 'quartersharp'\n\t\t};\n\t\tvar i = this.skipWhiteSpace(str);\n\t\tif (finished(str, i))\n\t\t\treturn {len: 0};\n\t\tvar acc = null;\n\t\tswitch (str[i])\n\t\t{\n\t\t\tcase '^':\n\t\t\tcase '_':\n\t\t\tcase '=':\n\t\t\t\tacc = str[i];\n\t\t\t\tbreak;\n\t\t\tdefault:return {len: 0};\n\t\t}\n\t\ti++;\n\t\tif (finished(str, i))\n\t\t\treturn {len: 1, warn: 'Expected note name after accidental'};\n\t\tswitch (str[i])\n\t\t{\n\t\t\tcase 'a':\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'e':\n\t\t\tcase 'f':\n\t\t\tcase 'g':\n\t\t\tcase 'A':\n\t\t\tcase 'B':\n\t\t\tcase 'C':\n\t\t\tcase 'D':\n\t\t\tcase 'E':\n\t\t\tcase 'F':\n\t\t\tcase 'G':\n\t\t\t\treturn {len: i+1, token: {acc: accTranslation[acc], note: str[i]}};\n\t\t\tcase '^':\n\t\t\tcase '_':\n\t\t\tcase '/':\n\t\t\t\tacc += str[i];\n\t\t\t\ti++;\n\t\t\t\tif (finished(str, i))\n\t\t\t\t\treturn {len: 2, warn: 'Expected note name after accidental'};\n\t\t\t\tswitch (str[i])\n\t\t\t\t{\n\t\t\t\t\tcase 'a':\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\tcase 'd':\n\t\t\t\t\tcase 'e':\n\t\t\t\t\tcase 'f':\n\t\t\t\t\tcase 'g':\n\t\t\t\t\tcase 'A':\n\t\t\t\t\tcase 'B':\n\t\t\t\t\tcase 'C':\n\t\t\t\t\tcase 'D':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\tcase 'F':\n\t\t\t\t\tcase 'G':\n\t\t\t\t\t\treturn {len: i+1, token: {acc: accTranslation[acc], note: str[i]}};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {len: 2, warn: 'Expected note name after accidental'};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn {len: 1, warn: 'Expected note name after accidental'};\n\t\t}\n\t};\n\n\tthis.isWhiteSpace = function(ch) {\n\t\treturn ch === ' ' || ch === '\\t' || ch === '\\x12';\n\t};\n\n\tthis.getMeat = function(line, start, end) {\n\t\t// This removes any comments starting with '%' and trims the ends of the string so that there are no leading or trailing spaces.\n\t\t// it returns just the start and end characters that contain the meat.\n\t\tvar comment = line.indexOf('%', start);\n\t\tif (comment >= 0 && comment < end)\n\t\t\tend = comment;\n\t\twhile (start < end && (line[start] === ' ' || line[start] === '\\t' || line[start] === '\\x12'))\n\t\t\tstart++;\n\t\twhile (start < end && (line[end-1] === ' ' || line[end-1] === '\\t' || line[end-1] === '\\x12'))\n\t\t\tend--;\n\t\treturn {start: start, end: end};\n\t};\n\n\tvar isLetter = function(ch) {\n\t\treturn (ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z');\n\t};\n\n\tvar isNumber = function(ch) {\n\t\treturn (ch >= '0' && ch <= '9');\n\t};\n\n\tthis.tokenize = function(line, start, end, alphaUntilWhiteSpace) {\n\t\t// this returns all the tokens inside the passed string. A token is a punctuation mark, a string of digits, a string of letters.\n\t\t//  Quoted strings are one token.\n\t\t//  If there is a minus sign next to a number, then it is included in the number.\n\t\t// If there is a period immediately after a number, with a number immediately following, then a float is returned.\n\t\t// The type of token is returned: quote, alpha, number, punct\n\t\t// If alphaUntilWhiteSpace is true, then the behavior of the alpha token changes.\n\n\t\tvar ret = this.getMeat(line, start, end);\n\t\tstart = ret.start;\n\t\tend = ret.end;\n\t\tvar tokens = [];\n\t\tvar i;\n\t\twhile (start < end) {\n\t\t\tif (line[start] === '\"') {\n\t\t\t\ti = start+1;\n\t\t\t\twhile (i < end && line[i] !== '\"') i++;\n\t\t\t\ttokens.push({ type: 'quote', token: line.substring(start+1, i), start: start+1, end: i});\n\t\t\t\ti++;\n\t\t\t} else if (isLetter(line[start])) {\n\t\t\t\ti = start+1;\n\t\t\t\tif (alphaUntilWhiteSpace)\n\t\t\t\t\twhile (i < end && !this.isWhiteSpace(line[i])) i++;\n\t\t\t\telse\n\t\t\t\t\twhile (i < end && isLetter(line[i])) i++;\n\t\t\t\ttokens.push({ type: 'alpha', token: line.substring(start, i), continueId: isNumber(line[i]), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (line[start] === '.' && isNumber(line[i+1])) {\n\t\t\t\ti = start+1;\n\t\t\t\tvar int2 = null;\n\t\t\t\tvar float2 = null;\n\t\t\t\twhile (i < end && isNumber(line[i])) i++;\n\n\t\t\t\tfloat2 = parseFloat(line.substring(start, i));\n\t\t\t\ttokens.push({ type: 'number', token: line.substring(start, i), intt: int2, floatt: float2, continueId: isLetter(line[i]), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (isNumber(line[start]) || (line[start] === '-' && isNumber(line[i+1]))) {\n\t\t\t\ti = start+1;\n\t\t\t\tvar intt = null;\n\t\t\t\tvar floatt = null;\n\t\t\t\twhile (i < end && isNumber(line[i])) i++;\n\t\t\t\tif (line[i] === '.' && isNumber(line[i+1])) {\n\t\t\t\t\ti++;\n\t\t\t\t\twhile (i < end && isNumber(line[i])) i++;\n\t\t\t\t} else\n\t\t\t\t\tintt = parseInt(line.substring(start, i));\n\n\t\t\t\tfloatt = parseFloat(line.substring(start, i));\n\t\t\t\ttokens.push({ type: 'number', token: line.substring(start, i), intt: intt, floatt: floatt, continueId: isLetter(line[i]), start: start, end: i});\n\t\t\t\tstart = i + 1;\n\t\t\t} else if (line[start] === ' ' || line[start] === '\\t') {\n\t\t\t\ti = start+1;\n\t\t\t} else {\n\t\t\t\ttokens.push({ type: 'punct', token: line[start], start: start, end: start+1});\n\t\t\t\ti = start+1;\n\t\t\t}\n\t\t\tstart = i;\n\t\t}\n\t\treturn tokens;\n\t};\n\n\tthis.getVoiceToken = function(line, start, end) {\n\t\t// This finds the next token. A token is delimited by a space or an equal sign. If it starts with a quote, then the portion between the quotes is returned.\n\t\tvar i = start;\n\t\twhile (i < end && this.isWhiteSpace(line[i]) || line[i] === '=')\n\t\t\ti++;\n\n\t\tif (line[i] === '\"') {\n\t\t\tvar close = line.indexOf('\"', i+1);\n\t\t\tif (close === -1 || close >= end)\n\t\t\t\treturn {len: 1, err: \"Missing close quote\"};\n\t\t\treturn {len: close-start+1, token: this.translateString(line.substring(i+1, close))};\n\t\t} else {\n\t\t\tvar ii = i;\n\t\t\twhile (ii < end && !this.isWhiteSpace(line[ii]) && line[ii] !== '=')\n\t\t\t\tii++;\n\t\t\treturn {len: ii-start+1, token: line.substring(i, ii)};\n\t\t}\n\t};\n\n\tvar charMap = {\n\t\t\"`a\": 'à', \"'a\": \"á\", \"^a\": \"â\", \"~a\": \"ã\", \"\\\"a\": \"ä\", \"oa\": \"å\", \"aa\": \"å\", \"=a\": \"ā\", \"ua\": \"ă\", \";a\": \"ą\",\n\t\t\"`e\": 'è', \"'e\": \"é\", \"^e\": \"ê\", \"\\\"e\": \"ë\", \"=e\": \"ē\", \"ue\": \"ĕ\", \";e\": \"ę\", \".e\": \"ė\",\n\t\t\"`i\": 'ì', \"'i\": \"í\", \"^i\": \"î\", \"\\\"i\": \"ï\", \"=i\": \"ī\", \"ui\": \"ĭ\", \";i\": \"į\",\n\t\t\"`o\": 'ò', \"'o\": \"ó\", \"^o\": \"ô\", \"~o\": \"õ\", \"\\\"o\": \"ö\", \"=o\": \"ō\", \"uo\": \"ŏ\", \"/o\": \"ø\",\n\t\t\"`u\": 'ù', \"'u\": \"ú\", \"^u\": \"û\", \"~u\": \"ũ\", \"\\\"u\": \"ü\", \"ou\": \"ů\", \"=u\": \"ū\", \"uu\": \"ŭ\", \";u\": \"ų\",\n\t\t\"`A\": 'À', \"'A\": \"Á\", \"^A\": \"Â\", \"~A\": \"Ã\", \"\\\"A\": \"Ä\", \"oA\": \"Å\", \"AA\": \"Å\", \"=A\": \"Ā\", \"uA\": \"Ă\", \";A\": \"Ą\",\n\t\t\"`E\": 'È', \"'E\": \"É\", \"^E\": \"Ê\", \"\\\"E\": \"Ë\", \"=E\": \"Ē\", \"uE\": \"Ĕ\", \";E\": \"Ę\", \".E\": \"Ė\",\n\t\t\"`I\": 'Ì', \"'I\": \"Í\", \"^I\": \"Î\", \"~I\": \"Ĩ\", \"\\\"I\": \"Ï\", \"=I\": \"Ī\", \"uI\": \"Ĭ\", \";I\": \"Į\", \".I\": \"İ\",\n\t\t\"`O\": 'Ò', \"'O\": \"Ó\", \"^O\": \"Ô\", \"~O\": \"Õ\", \"\\\"O\": \"Ö\", \"=O\": \"Ō\", \"uO\": \"Ŏ\", \"/O\": \"Ø\",\n\t\t\"`U\": 'Ù', \"'U\": \"Ú\", \"^U\": \"Û\", \"~U\": \"Ũ\", \"\\\"U\": \"Ü\", \"oU\": \"Ů\", \"=U\": \"Ū\", \"uU\": \"Ŭ\", \";U\": \"Ų\",\n\t\t\"ae\": \"æ\", \"AE\": \"Æ\", \"oe\": \"œ\", \"OE\": \"Œ\", \"ss\": \"ß\",\n\t\t\"'c\": \"ć\", \"^c\": \"ĉ\", \"uc\": \"č\", \"cc\": \"ç\", \".c\": \"ċ\", \"cC\": \"Ç\", \"'C\": \"Ć\", \"^C\": \"Ĉ\", \"uC\": \"Č\", \".C\": \"Ċ\",\n\t\t\"~N\": \"Ñ\", \"~n\": \"ñ\",\n\t\t\"=s\": \"š\", \"vs\": \"š\",\n\t\t\"DH\": \"Ð\", \"dh\": \"ð\",\n\t\t\"HO\": \"Ő\", \"Ho\": \"ő\", \"HU\": \"Ű\", \"Hu\": \"ű\",\n\t\t\"'Y\": \"Ý\", \"'y\": \"ý\", \"^Y\": \"Ŷ\", \"^y\": \"ŷ\", \"\\\"Y\": \"Ÿ\", \"\\\"y\": \"ÿ\",\n\t\t\"vS\": \"Š\", \"vZ\": \"Ž\", \"vz\": 'ž'\n\n// More chars: Ĳ ĳ Ď ď Đ đ Ĝ ĝ Ğ ğ Ġ ġ Ģ ģ Ĥ ĥ Ħ ħ Ĵ ĵ Ķ ķ ĸ Ĺ ĺ Ļ ļ Ľ ľ Ŀ ŀ Ł ł Ń ń Ņ ņ Ň ň ŉ Ŋ ŋ Ŕ ŕ Ŗ ŗ Ř ř Ś ś Ŝ ŝ Ş ş Š Ţ ţ Ť ť Ŧ ŧ Ŵ ŵ Ź ź Ż ż Ž\n\t};\n\tvar charMap1 = {\n\t\t\"#\": \"♯\",\n\t\t\"b\": \"♭\",\n\t\t\"=\": \"♮\"\n\t};\n\tvar charMap2 = {\n\t\t\"201\": \"♯\",\n\t\t\"202\": \"♭\",\n\t\t\"203\": \"♮\",\n\t\t\"241\": \"¡\",\n\t\t\"242\": \"¢\", \"252\": \"a\", \"262\": \"2\", \"272\": \"o\", \"302\": \"Â\", \"312\": \"Ê\", \"322\": \"Ò\", \"332\": \"Ú\", \"342\": \"â\", \"352\": \"ê\", \"362\": \"ò\", \"372\": \"ú\",\n\t\t\"243\": \"£\", \"253\": \"«\", \"263\": \"3\", \"273\": \"»\", \"303\": \"Ã\", \"313\": \"Ë\", \"323\": \"Ó\", \"333\": \"Û\", \"343\": \"ã\", \"353\": \"ë\", \"363\": \"ó\", \"373\": \"û\",\n\t\t\"244\": \"¤\", \"254\": \"¬\", \"264\": \"  ́\", \"274\": \"1⁄4\", \"304\": \"Ä\", \"314\": \"Ì\", \"324\": \"Ô\", \"334\": \"Ü\", \"344\": \"ä\", \"354\": \"ì\", \"364\": \"ô\", \"374\": \"ü\",\n\t\t\"245\": \"¥\", \"255\": \"-\", \"265\": \"μ\", \"275\": \"1⁄2\", \"305\": \"Å\", \"315\": \"Í\", \"325\": \"Õ\", \"335\": \"Ý\",  \"345\": \"å\", \"355\": \"í\", \"365\": \"õ\", \"375\": \"ý\",\n\t\t\"246\": \"¦\", \"256\": \"®\", \"266\": \"¶\", \"276\": \"3⁄4\", \"306\": \"Æ\", \"316\": \"Î\", \"326\": \"Ö\", \"336\": \"Þ\", \"346\": \"æ\", \"356\": \"î\", \"366\": \"ö\", \"376\": \"þ\",\n\t\t\"247\": \"§\", \"257\": \" ̄\", \"267\": \"·\", \"277\": \"¿\", \"307\": \"Ç\", \"317\": \"Ï\", \"327\": \"×\", \"337\": \"ß\", \"347\": \"ç\", \"357\": \"ï\", \"367\": \"÷\", \"377\": \"ÿ\",\n\t\t\"250\": \" ̈\", \"260\": \"°\", \"270\": \" ̧\", \"300\": \"À\", \"310\": \"È\", \"320\": \"Ð\", \"330\": \"Ø\", \"340\": \"à\", \"350\": \"è\", \"360\": \"ð\", \"370\": \"ø\",\n\t\t\"251\": \"©\", \"261\": \"±\", \"271\": \"1\", \"301\": \"Á\", \"311\": \"É\", \"321\": \"Ñ\", \"331\": \"Ù\", \"341\": \"á\", \"351\": \"é\", \"361\": \"ñ\", \"371\": \"ù\" };\n\tthis.translateString = function(str) {\n\t\tvar arr = str.split('\\\\');\n\t\tif (arr.length === 1) return str;\n\t\tvar out = null;\n\t\tarr.forEach(function(s) {\n\t\t\tif (out === null)\n\t\t\t\tout = s;\n\t\t\telse {\n\t\t\t\tvar c = charMap[s.substring(0, 2)];\n\t\t\t\tif (c !== undefined)\n\t\t\t\t\tout += c + s.substring(2);\n\t\t\t\telse {\n\t\t\t\t\tc = charMap2[s.substring(0, 3)];\n\t\t\t\t\tif (c !== undefined)\n\t\t\t\t\t\tout += c + s.substring(3);\n\t\t\t\t\telse {\n\t\t\t\t\t\tc = charMap1[s.substring(0, 1)];\n\t\t\t\t\t\tif (c !== undefined)\n\t\t\t\t\t\t\tout += c + s.substring(1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tout += \"\\\\\" + s;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn out;\n\t};\n\tthis.getNumber = function(line, index) {\n\t\tvar num = 0;\n\t\twhile (index < line.length) {\n\t\t\tswitch (line[index]) {\n\t\t\t\tcase '0':num = num*10;index++;break;\n\t\t\t\tcase '1':num = num*10+1;index++;break;\n\t\t\t\tcase '2':num = num*10+2;index++;break;\n\t\t\t\tcase '3':num = num*10+3;index++;break;\n\t\t\t\tcase '4':num = num*10+4;index++;break;\n\t\t\t\tcase '5':num = num*10+5;index++;break;\n\t\t\t\tcase '6':num = num*10+6;index++;break;\n\t\t\t\tcase '7':num = num*10+7;index++;break;\n\t\t\t\tcase '8':num = num*10+8;index++;break;\n\t\t\t\tcase '9':num = num*10+9;index++;break;\n\t\t\t\tdefault:\n\t\t\t\t\treturn {num: num, index: index};\n\t\t\t}\n\t\t}\n\t\treturn {num: num, index: index};\n\t};\n\n\tthis.getFraction = function(line, index) {\n\t\tvar num = 1;\n\t\tvar den = 1;\n\t\tif (line[index] !== '/') {\n\t\t\tvar ret = this.getNumber(line, index);\n\t\t\tnum = ret.num;\n\t\t\tindex = ret.index;\n\t\t}\n\t\tif (line[index] === '/') {\n\t\t\tindex++;\n\t\t\tif (line[index] === '/') {\n\t\t\t\tvar div = 0.5;\n\t\t\t\twhile (line[index++] === '/')\n\t\t\t\t\tdiv = div /2;\n\t\t\t\treturn {value: num * div, index: index-1};\n\t\t\t} else {\n\t\t\t\tvar iSave = index;\n\t\t\t\tvar ret2 = this.getNumber(line, index);\n\t\t\t\tif (ret2.num === 0 && iSave === index)\t// If we didn't use any characters, it is an implied 2\n\t\t\t\t\tret2.num = 2;\n\t\t\t\tif (ret2.num !== 0)\n\t\t\t\t\tden = ret2.num;\n\t\t\t\tindex = ret2.index;\n\t\t\t}\n\t\t}\n\n\t\treturn {value: num/den, index: index};\n\t};\n\n//\n// MAE 10 Jan 2023 - For better handling of tunes that have tune numbers in front of them.\n//\n// Previous version would take:\n// 21. Woman of the House, The\n// and return:\n// The 21. Woman of the House\n//\n// This fix results in:\n// 21. The Woman of the House\n//\n// Also added additional checks and handlers for lower case \", the\" and \", a\" since I found several tune collections with those tune name constructs\n//\n// Find an optional title number at the start of a tune title\nfunction getTitleNumber(str){\n\n  const regex = /^(\\d+)\\./;\n\n  // Use the exec method to search for the pattern in the string\n  const match = regex.exec(str);\n\n  // Check if a match is found\n  if (match) {\n\n\t// The matched number is captured in the first group (index 1)\n\tconst foundNumber = match[1];\n\treturn foundNumber;\n\n  } else {\n\n\t// Return null if no match is found\n\treturn null;\n\n  }\n\n}\n\nvar thePatterns = [\n\t{ match: /,\\s*[Tt]he$/, replace: \"The \" },\n\t{ match: /,\\s*[Aa]$/, replace: \"A \" },\n\t{ match: /,\\s*[Aa]n$/, replace: \"An \" },\n]\n\nthis.theReverser = function (str) {\n\n    for (var i = 0; i < thePatterns.length; i++) {\n\t\tvar thisPattern = thePatterns[i]\n\t\tvar match = str.match(thisPattern.match)\n\t\tif (match) {\n\t\t\tvar theTitleNumber = getTitleNumber(str);\n\t\t\tif (theTitleNumber){\n\n\t\t\t  //console.log(\"theReverser The titlenumber:\"+theTitleNumber);\n\n\t\t\t  str = str.replace(theTitleNumber+\".\",\"\");\n\t\t\t  str = str.trim();\n\t\t\t}\n\t\t\tvar len = match[0].length\n\t\t\tvar result = thisPattern.replace + str.substring(0, str.length - len);\n\n\t\t\tif (theTitleNumber){\n\t\t\t  result = theTitleNumber+\". \"+result;\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\t}\n\n    return str;\n\n  };\n\n\tthis.stripComment = function(str) {\n\t\tvar i = str.indexOf('%');\n\t\tif (i >= 0)\n\t\t\treturn parseCommon.strip(str.substring(0, i));\n\t\treturn parseCommon.strip(str);\n\t};\n\n\tthis.getInt = function(str) {\n\t\t// This parses the beginning of the string for a number and returns { value: num, digits: num }\n\t\t// If digits is 0, then the string didn't point to a number.\n\t\tvar x = parseInt(str);\n\t\tif (isNaN(x))\n\t\t\treturn {digits: 0};\n\t\tvar s = \"\" + x;\n\t\tvar i = str.indexOf(s);\t// This is to account for leading spaces\n\t\treturn {value: x, digits: i+s.length};\n\t};\n\n\tthis.getFloat = function(str) {\n\t\t// This parses the beginning of the string for a number and returns { value: num, digits: num }\n\t\t// If digits is 0, then the string didn't point to a number.\n\t\tvar x = parseFloat(str);\n\t\tif (isNaN(x))\n\t\t\treturn {digits: 0};\n\t\tvar s = \"\" + x;\n\t\tvar i = str.indexOf(s);\t// This is to account for leading spaces\n\t\treturn {value: x, digits: i+s.length};\n\t};\n\n\tthis.getMeasurement = function(tokens) {\n\t\tif (tokens.length === 0) return { used: 0 };\n\t\tvar used = 1;\n\t\tvar num = '';\n\t\tif (tokens[0].token === '-') {\n\t\t\ttokens.shift();\n\t\t\tnum = '-';\n\t\t\tused++;\n\t\t}\n\t\telse if (tokens[0].type !== 'number') return { used: 0 };\n\t\tnum += tokens.shift().token;\n\t\tif (tokens.length === 0) return { used: 1, value: parseInt(num) };\n\t\tvar x = tokens.shift();\n\t\tif (x.token === '.') {\n\t\t\tused++;\n\t\t\tif (tokens.length === 0) return { used: used, value: parseInt(num) };\n\t\t\tif (tokens[0].type === 'number') {\n\t\t\t\tx = tokens.shift();\n\t\t\t\tnum = num + '.' + x.token;\n\t\t\t\tused++;\n\t\t\t\tif (tokens.length === 0) return { used: used, value: parseFloat(num) };\n\t\t\t}\n\t\t\tx = tokens.shift();\n\t\t}\n\t\tswitch (x.token) {\n\t\t\tcase 'pt': return { used: used+1, value: parseFloat(num) };\n\t\t\tcase 'px': return { used: used+1, value: parseFloat(num) };\n\t\t\tcase 'cm': return { used: used+1, value: parseFloat(num)/2.54*72 };\n\t\t\tcase 'in': return { used: used+1, value: parseFloat(num)*72 };\n\t\t\tdefault: tokens.unshift(x); return { used: used, value: parseFloat(num) };\n\t\t}\n\t};\n\tvar substInChord = function(str) {\n\t\tstr = str.replace(/\\\\n/g, \"\\n\");\n\t\tstr = str.replace(/\\\\\"/g, '\"');\n\t\treturn str;\n\t};\n\tthis.getBrackettedSubstring = function(line, i, maxErrorChars, _matchChar)\n\t{\n\t\t// This extracts the sub string by looking at the first character and searching for that\n\t\t// character later in the line (or search for the optional _matchChar).\n\t\t// For instance, if the first character is a quote it will look for\n\t\t// the end quote. If the end of the line is reached, then only up to the default number\n\t\t// of characters are returned, so that a missing end quote won't eat up the entire line.\n\t\t// It returns the substring and the number of characters consumed.\n\t\t// The number of characters consumed is normally two more than the size of the substring,\n\t\t// but in the error case it might not be.\n\t\tvar matchChar = _matchChar || line[i];\n\t\tvar pos = i+1;\n\t\tvar esc = false;\n\t\twhile ((pos < line.length) && (esc || line[pos] !== matchChar)) {\n\t\t\tesc = line[pos] === '\\\\';\n\t\t\t++pos;\n\t\t}\n\t\tif (line[pos] === matchChar)\n\t\t\treturn [pos-i+1,substInChord(line.substring(i+1, pos)), true];\n\t\telse\t// we hit the end of line, so we'll just pick an arbitrary num of chars so the line doesn't disappear.\n\t\t{\n\t\t\tpos = i+maxErrorChars;\n\t\t\tif (pos > line.length-1)\n\t\t\t\tpos = line.length-1;\n\t\t\treturn [pos-i+1, substInChord(line.substring(i+1, pos)), false];\n\t\t}\n\t};\n};\n\nTokenizer.prototype.peekLine = function() {\n\treturn this.lines[this.lineIndex]\n}\n\nTokenizer.prototype.nextLine = function() {\n\tif (this.lineIndex > 0) {\n\t\tthis.multilineVars.iChar += this.lines[this.lineIndex-1].length + 1;\n\t}\n\tif (this.lineIndex < this.lines.length) {\n\t\tvar result = this.lines[this.lineIndex]\n\t\tthis.lineIndex++\n\t\treturn result\n\t}\n\treturn null\n}\n\nexport default Tokenizer;\n", "//    wrap_lines.js: does line wrap on an already parsed tune.\n\nfunction wrapLines(tune, lineBreaks, barNumbers) {\n\tif (!lineBreaks || tune.lines.length === 0)\n\t\treturn;\n\n\t// tune.lines contains nested arrays: there is an array of lines (that's the part this function rewrites),\n\t// there is an array of staffs per line (for instance, piano will have 2, orchestra will have many)\n\t// there is an array of voices per staff (for instance, 4-part harmony might have bass and tenor on a single staff)\n\tvar lines = tune.deline({lineBreaks: false});\n\tvar linesBreakElements = findLineBreaks(lines, lineBreaks);\n\t//console.log(JSON.stringify(linesBreakElements))\n\ttune.lines = addLineBreaks(lines, linesBreakElements, barNumbers);\n\ttune.lineBreaks = linesBreakElements;\n}\n\nfunction addLineBreaks(lines, linesBreakElements, barNumbers) {\n\t// linesBreakElements is an array of all of the elements that break for a new line\n\t// The objects in the array look like:\n\t// {\"ogLine\":0,\"line\":0,\"staff\":0,\"voice\":0,\"start\":0, \"end\":21}\n\t// ogLine is the original line that it came from,\n\t// line is the target line.\n\t// then copy all the elements from start to end for the staff and voice specified.\n\t// If the item doesn't contain \"staff\" then it is a non music line and should just be copied.\n\tvar outputLines = [];\n\tvar lastKeySig = []; // This is per staff - if the key changed then this will be populated.\n\tvar lastStem = [];\n\tvar currentBarNumber = 1;\n\tfor (var i = 0; i < linesBreakElements.length; i++) {\n\t\tvar action = linesBreakElements[i];\n\t\tif (lines[action.ogLine].staff) {\n\t\t\tvar inputStaff = lines[action.ogLine].staff[action.staff];\n\t\t\tif (!outputLines[action.line]) {\n\t\t\t\toutputLines[action.line] = {staff: []}\n\t\t\t}\n\t\t\tif (!outputLines[action.line].staff[action.staff]) {\n\t\t\t\toutputLines[action.line].staff[action.staff] = {voices: []};\n\t\t\t\tif (barNumbers !== undefined && action.staff === 0 && action.line > 0) {\n\t\t\t\t\toutputLines[action.line].staff[action.staff].barNumber = currentBarNumber;\n\t\t\t\t}\n\t\t\t\tvar keys = Object.keys(inputStaff)\n\t\t\t\tfor (var k = 0; k < keys.length; k++) {\n\t\t\t\t\tvar skip = keys[k] === \"voices\";\n\t\t\t\t\tif (keys[k] === \"meter\" && action.line !== 0)\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\tif (!skip)\n\t\t\t\t\t\toutputLines[action.line].staff[action.staff][keys[k]] = inputStaff[keys[k]];\n\t\t\t\t}\n\t\t\t\tif (lastKeySig[action.staff])\n\t\t\t\t\toutputLines[action.line].staff[action.staff].key = lastKeySig[action.staff];\n\n\t\t\t}\n\t\t\tif (!outputLines[action.line].staff[action.staff].voices[action.voice]) {\n\t\t\t\toutputLines[action.line].staff[action.staff].voices[action.voice] = [];\n\t\t\t}\n\t\t\toutputLines[action.line].staff[action.staff].voices[action.voice] =\n\t\t\t\tlines[action.ogLine].staff[action.staff].voices[action.voice].slice(action.start, action.end+1);\n\t\t\tif (lastStem[action.staff*10+action.voice])\n\t\t\t\toutputLines[action.line].staff[action.staff].voices[action.voice].unshift({el_type: \"stem\", direction: lastStem[action.staff*10+action.voice].direction})\n\t\t\tvar currVoice = outputLines[action.line].staff[action.staff].voices[action.voice];\n\t\t\tfor (var kk = currVoice.length-1; kk >= 0; kk--) {\n\t\t\t\tif (currVoice[kk].el_type === \"key\") {\n\t\t\t\t\tlastKeySig[action.staff] = {\n\t\t\t\t\t\troot: currVoice[kk].root,\n\t\t\t\t\t\tacc: currVoice[kk].acc,\n\t\t\t\t\t\tmode: currVoice[kk].mode,\n\t\t\t\t\t\taccidentals: currVoice[kk].accidentals.filter(function (acc) { return acc.acc !== 'natural' })\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (kk = currVoice.length-1; kk >= 0; kk--) {\n\t\t\t\tif (currVoice[kk].el_type === \"stem\") {\n\t\t\t\t\tlastStem[action.staff*10+action.voice] = {\n\t\t\t\t\t\tdirection: currVoice[kk].direction,\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (barNumbers !== undefined && action.staff === 0 && action.voice === 0) {\n\t\t\t\tfor (kk = 0; kk < currVoice.length; kk++) {\n\t\t\t\t\tif (currVoice[kk].el_type === 'bar') {\n\t\t\t\t\t\tcurrentBarNumber++\n\t\t\t\t\t\tif (kk === currVoice.length-1)\n\t\t\t\t\t\t\tdelete currVoice[kk].barNumber\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcurrVoice[kk].barNumber = currentBarNumber\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\toutputLines[action.line] = lines[action.ogLine];\n\t\t}\n\t}\n\t// There could be some missing info - if the tune passed in was incomplete or had different lengths for different voices or was missing a voice altogether - just fill in the gaps.\n\tfor (var ii = 0; ii < outputLines.length; ii++) {\n\t\tif (outputLines[ii].staff) {\n\t\t\toutputLines[ii].staff = outputLines[ii].staff.filter(function (el) {\n\t\t\t\treturn el != null;\n\t\t\t});\n\t\t}\n\t}\n\treturn outputLines;\n}\n\n\nfunction findLineBreaks(lines, lineBreakArray) {\n\t// lineBreakArray is an array of all of the sections of the tune - often there will just be one\n\t// section unless there is a subtitle or other non-music lines. Each of the elements of\n\t// Each element of lineBreakArray is an array of the zero-based last measure of the line.\n\tvar lineBreakIndexes = [];\n\tvar lbai = 0;\n\tvar lineCounter = 0;\n\tvar outputLine = 0;\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tvar line = lines[i];\n\t\tif (line.staff) {\n\t\t\tvar lineStart = lineCounter;\n\t\t\tvar lineBreaks = lineBreakArray[lbai];\n\t\t\tlbai++;\n\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\tvar staff = line.staff[j];\n\t\t\t\tfor (var k = 0; k < staff.voices.length; k++) {\n\t\t\t\t\toutputLine = lineStart;\n\t\t\t\t\tvar measureNumber = 0;\n\t\t\t\t\tvar lbi = 0;\n\t\t\t\t\tvar voice = staff.voices[k];\n\t\t\t\t\tvar start = 0;\n\t\t\t\t\tfor (var e = 0; e < voice.length; e++) {\n\t\t\t\t\t\tvar el = voice[e];\n\n\t\t\t\t\t\tif (el.el_type === 'bar') {\n\t\t\t\t\t\t\tif (lineBreaks[lbi] === measureNumber) {\n\t\t\t\t\t\t\t\tlineBreakIndexes.push({ ogLine: i, line: outputLine, staff: j, voice: k, start: start, end: e})\n\t\t\t\t\t\t\t\tstart = e + 1;\n\t\t\t\t\t\t\t\toutputLine++;\n\t\t\t\t\t\t\t\tlineCounter = Math.max(lineCounter, outputLine)\n\t\t\t\t\t\t\t\tlbi++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmeasureNumber++;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlineBreakIndexes.push({ ogLine: i, line: outputLine, staff: j, voice: k, start: start, end: voice.length})\n\t\t\t\t\toutputLine++;\n\t\t\t\t\tlineCounter = Math.max(lineCounter, outputLine)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlineBreakIndexes.push({ ogLine: i, line: outputLine })\n\t\t\toutputLine++;\n\t\t\tlineCounter = Math.max(lineCounter, outputLine)\n\t\t}\n\t}\n\treturn lineBreakIndexes;\n}\n\n\nfunction freeFormLineBreaks(widths, lineBreakPoint) {\n\tvar lineBreaks = [];\n\tvar totals = [];\n\tvar totalThisLine = 0;\n\t// run through each measure and see if the accumulation is less than the ideal.\n\t// if it passes the ideal, then see whether the last or this one is closer to the ideal.\n\tfor (var i = 0; i < widths.length; i++) {\n\t\tvar width = widths[i];\n\t\tvar attemptedWidth = totalThisLine + width;\n\t\tif (attemptedWidth < lineBreakPoint)\n\t\t\ttotalThisLine = attemptedWidth;\n\t\telse {\n\t\t\t// This just passed the ideal, so see whether the previous or the current number of measures is closer.\n\t\t\tvar oldDistance = lineBreakPoint - totalThisLine;\n\t\t\tvar newDistance = attemptedWidth - lineBreakPoint;\n\t\t\tif (oldDistance < newDistance && totalThisLine > 0) {\n\t\t\t\tlineBreaks.push(i - 1);\n\t\t\t\ttotals.push(Math.round(totalThisLine - width));\n\t\t\t\ttotalThisLine = width;\n\t\t\t} else {\n\t\t\t\tif (i < widths.length-1) {\n\t\t\t\t\tlineBreaks.push(i);\n\t\t\t\t\ttotals.push(Math.round(totalThisLine));\n\t\t\t\t\ttotalThisLine = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\ttotals.push(Math.round(totalThisLine));\n\treturn { lineBreaks: lineBreaks, totals: totals };\n}\n\nfunction clone(arr) {\n\tvar newArr = [];\n\tfor (var i = 0; i < arr.length; i++)\n\t\tnewArr.push(arr[i]);\n\treturn newArr;\n}\n\nfunction oneTry(measureWidths, idealWidths, accumulator, lineAccumulator, lineWidths, lastVariance, highestVariance, currLine, lineBreaks, startIndex, otherTries) {\n\tfor (var i = startIndex; i < measureWidths.length; i++) {\n\t\tvar measureWidth = measureWidths[i];\n\t\taccumulator += measureWidth;\n\t\tlineAccumulator += measureWidth;\n\t\tvar thisVariance = Math.abs(accumulator - idealWidths[currLine]);\n\t\tvar varianceIsClose = Math.abs(thisVariance - lastVariance) < idealWidths[0] / 10; // see if the difference is less than 10%, if so, run the test both ways.\n\t\tif (varianceIsClose) {\n\t\t\tif (thisVariance < lastVariance) {\n\t\t\t\t// Also attempt one less measure on the current line - sometimes that works out better.\n\t\t\t\tvar newWidths = clone(lineWidths);\n\t\t\t\tvar newBreaks = clone(lineBreaks);\n\t\t\t\tnewBreaks.push(i-1);\n\t\t\t\tnewWidths.push(lineAccumulator - measureWidth);\n\t\t\t\totherTries.push({\n\t\t\t\t\taccumulator: accumulator,\n\t\t\t\t\tlineAccumulator: measureWidth,\n\t\t\t\t\tlineWidths: newWidths,\n\t\t\t\t\tlastVariance: Math.abs(accumulator - idealWidths[currLine+1]),\n\t\t\t\t\thighestVariance: Math.max(highestVariance, lastVariance),\n\t\t\t\t\tcurrLine: currLine+1,\n\t\t\t\t\tlineBreaks: newBreaks,\n\t\t\t\t\tstartIndex: i+1});\n\t\t\t} else if (thisVariance > lastVariance && i < measureWidths.length-1) {\n\t\t\t\t// Also attempt one extra measure on this line.\n\t\t\t\tnewWidths = clone(lineWidths);\n\t\t\t\tnewBreaks = clone(lineBreaks);\n\t\t\t\t// newBreaks[newBreaks.length-1] = i;\n\t\t\t\t// newWidths[newWidths.length-1] = lineAccumulator;\n\t\t\t\totherTries.push({\n\t\t\t\t\taccumulator: accumulator,\n\t\t\t\t\tlineAccumulator: lineAccumulator,\n\t\t\t\t\tlineWidths: newWidths,\n\t\t\t\t\tlastVariance: thisVariance,\n\t\t\t\t\thighestVariance: Math.max(highestVariance, thisVariance),\n\t\t\t\t\tcurrLine: currLine,\n\t\t\t\t\tlineBreaks: newBreaks,\n\t\t\t\t\tstartIndex: i+1});\n\t\t\t}\n\t\t}\n\t\tif (thisVariance > lastVariance) {\n\t\t\tlineBreaks.push(i - 1);\n\t\t\tcurrLine++;\n\t\t\thighestVariance = Math.max(highestVariance, lastVariance);\n\t\t\tlastVariance = Math.abs(accumulator - idealWidths[currLine]);\n\t\t\tlineWidths.push(lineAccumulator - measureWidth);\n\t\t\tlineAccumulator = measureWidth;\n\t\t} else {\n\t\t\tlastVariance = thisVariance;\n\t\t}\n\t}\n\tlineWidths.push(lineAccumulator);\n}\n\nfunction optimizeLineWidths(widths, lineBreakPoint, lineBreaks, explanation) {\n\t//\tfigure out how many lines\n\tvar numLines = Math.ceil(widths.total / lineBreakPoint); // + 1 TODO-PER: this used to be plus one - not sure why\n\n\t//\tget the ideal width for a line (cumulative width / num lines) - approx the same as lineBreakPoint except for rounding\n\tvar idealWidth = Math.floor(widths.total / numLines);\n\n\t//\tget each ideal line width (1*ideal, 2*ideal, 3*ideal, etc)\n\tvar idealWidths = [];\n\tfor (var i = 0; i < numLines; i++)\n\t\tidealWidths.push(idealWidth*(i+1));\n\n\t//\tfrom first measure, step through accum. Widths until the abs of the ideal is greater than the last one.\n\t// This can sometimes look funny in edge cases, so when the length is within 10%, try one more or one less to see which is better.\n\t// This is better than trying all the possibilities because that would get to be a huge number for even a medium size piece.\n\t// This method seems to never generate more than about 16 tries and it is usually 4 or less.\n\tvar otherTries = [];\n\totherTries.push({\n\t\taccumulator: 0,\n\t\tlineAccumulator: 0,\n\t\tlineWidths: [],\n\t\tlastVariance: 999999,\n\t\thighestVariance: 0,\n\t\tcurrLine: 0,\n\t\tlineBreaks: [], // These are the zero-based last measure on each line\n\t\tstartIndex: 0});\n\tvar index = 0;\n\twhile (index < otherTries.length) {\n\t\toneTry(widths.measureWidths,\n\t\t\tidealWidths,\n\t\t\totherTries[index].accumulator,\n\t\t\totherTries[index].lineAccumulator,\n\t\t\totherTries[index].lineWidths,\n\t\t\totherTries[index].lastVariance,\n\t\t\totherTries[index].highestVariance,\n\t\t\totherTries[index].currLine,\n\t\t\totherTries[index].lineBreaks,\n\t\t\totherTries[index].startIndex,\n\t\t\totherTries);\n\t\tindex++;\n\t}\n\tfor (i = 0; i < otherTries.length; i++) {\n\t\tvar otherTry = otherTries[i];\n\t\totherTry.variances = [];\n\t\totherTry.aveVariance = 0;\n\t\tfor (var j = 0; j < otherTry.lineWidths.length; j++) {\n\t\t\tvar lineWidth = otherTry.lineWidths[j];\n\t\t\totherTry.variances.push(lineWidth - idealWidths[0]);\n\t\t\totherTry.aveVariance += Math.abs(lineWidth - idealWidths[0]);\n\t\t}\n\t\totherTry.aveVariance =  otherTry.aveVariance / otherTry.lineWidths.length;\n\t\texplanation.attempts.push({ type: \"optimizeLineWidths\", lineBreaks: otherTry.lineBreaks, variances: otherTry.variances, aveVariance: otherTry.aveVariance, widths: widths.measureWidths });\n\t}\n\tvar smallest = 9999999;\n\tvar smallestIndex = -1;\n\tfor (i = 0; i < otherTries.length; i++) {\n\t\totherTry = otherTries[i];\n\t\tif (otherTry.aveVariance < smallest) {\n\t\t\tsmallest = otherTry.aveVariance;\n\t\t\tsmallestIndex = i;\n\t\t}\n\t}\n\treturn { failed: false, lineBreaks: otherTries[smallestIndex].lineBreaks, variance: otherTries[smallestIndex].highestVariance };\n}\n\nfunction fixedMeasureLineBreaks(widths, lineBreakPoint, preferredMeasuresPerLine) {\n\tvar lineBreaks = [];\n\tvar totals = [];\n\tvar thisWidth = 0;\n\tvar failed = false;\n\tfor (var i = 0; i < widths.length; i++) {\n\t\tthisWidth += widths[i];\n\t\tif (thisWidth > lineBreakPoint) {\n\t\t\tfailed = true;\n\t\t}\n\t\tif (i % preferredMeasuresPerLine === (preferredMeasuresPerLine-1)) {\n\t\t\tif (i !== widths.length-1) // Don't bother putting a line break for the last line - it's already a break.\n\t\t\t\tlineBreaks.push(i);\n\t\t\ttotals.push(Math.round(thisWidth));\n\t\t\tthisWidth = 0;\n\t\t}\n\t}\n\treturn { failed: failed, totals: totals, lineBreaks: lineBreaks };\n}\n\nfunction getRevisedTuneParams(lineBreaks, staffWidth, params) {\n\n\tvar revisedParams = {\n\t\tlineBreaks: lineBreaks,\n\t\tstaffwidth: staffWidth\n\t};\n\tfor (var key in params) {\n\t\tif (params.hasOwnProperty(key) && key !== 'wrap' && key !== 'staffwidth') {\n\t\t\trevisedParams[key] = params[key];\n\t\t}\n\t}\n\n\treturn { revisedParams: revisedParams };\n}\n\nfunction calcLineWraps(tune, widths, params) {\n\t// For calculating how much can go on the line, it depends on the width of the line. It is a convenience to just divide it here\n\t// by the minimum spacing instead of multiplying the min spacing later.\n\t// The scaling works differently: this is done by changing the scaling of the outer SVG, so the scaling needs to be compensated\n\t// for here, because the actual width will be different from the calculated numbers.\n\n\t// If the desired width is less than the margin, just punt and return the original tune\n\t//console.log(widths)\n\tif (widths.length === 0 || params.staffwidth < widths[0].left) {\n\t\treturn {\n\t\t\treParse: false,\n\t\t\texplanation: \"Staff width is narrower than the margin\",\n\t\t\trevisedParams: params\n\t\t};\n\t}\n\tvar scale = params.scale ? Math.max(params.scale, 0.1) : 1;\n\tvar minSpacing = params.wrap.minSpacing ? Math.max(parseFloat(params.wrap.minSpacing), 1) : 1;\n\tvar minSpacingLimit = params.wrap.minSpacingLimit ? Math.max(parseFloat(params.wrap.minSpacingLimit), 1) : minSpacing - 0.1;\n\tvar maxSpacing = params.wrap.maxSpacing ? Math.max(parseFloat(params.wrap.maxSpacing), 1) : undefined;\n\tif (params.wrap.lastLineLimit && !maxSpacing)\n\t\tmaxSpacing = Math.max(parseFloat(params.wrap.lastLineLimit), 1);\n\t// var targetHeight = params.wrap.targetHeight ? Math.max(parseInt(params.wrap.targetHeight, 10), 100) : undefined;\n\tvar preferredMeasuresPerLine = params.wrap.preferredMeasuresPerLine ? Math.max(parseInt(params.wrap.preferredMeasuresPerLine, 10), 0) : undefined;\n\n\tvar accumulatedLineBreaks = [];\n\tvar explanations = [];\n\tfor (var s = 0; s < widths.length; s++) {\n\t\tvar section = widths[s];\n\t\tvar usableWidth = params.staffwidth - section.left;\n\t\tvar lineBreakPoint = usableWidth / minSpacing / scale;\n\t\tvar minLineSize = usableWidth / maxSpacing / scale;\n\t\tvar allowableVariance = usableWidth / minSpacingLimit / scale;\n\t\tvar explanation = {\n\t\t\twidths: section,\n\t\t\tlineBreakPoint: lineBreakPoint,\n\t\t\tminLineSize: minLineSize,\n\t\t\tattempts: [],\n\t\t\tstaffWidth: params.staffwidth,\n\t\t\tminWidth: Math.round(allowableVariance)\n\t\t};\n\n\t\t// If there is a preferred number of measures per line, test that first. If none of the lines is too long, then we're finished.\n\t\tvar lineBreaks = null;\n\t\tif (preferredMeasuresPerLine) {\n\t\t\tvar f = fixedMeasureLineBreaks(section.measureWidths, lineBreakPoint, preferredMeasuresPerLine);\n\t\t\texplanation.attempts.push({\n\t\t\t\ttype: \"Fixed Measures Per Line\",\n\t\t\t\tpreferredMeasuresPerLine: preferredMeasuresPerLine,\n\t\t\t\tlineBreaks: f.lineBreaks,\n\t\t\t\tfailed: f.failed,\n\t\t\t\ttotals: f.totals\n\t\t\t});\n\t\t\tif (!f.failed)\n\t\t\t\tlineBreaks = f.lineBreaks;\n\t\t}\n\n\t\t// If we don't have lineBreaks yet, use the free form method of line breaks.\n\t\t// This will be called either if Preferred Measures is not used, or if the music is just weird - like a single measure is way too crowded.\n\t\tif (!lineBreaks) {\n\t\t\tvar ff = freeFormLineBreaks(section.measureWidths, lineBreakPoint);\n\t\t\texplanation.attempts.push({type: \"Free Form\", lineBreaks: ff.lineBreaks, totals: ff.totals});\n\t\t\tlineBreaks = ff.lineBreaks;\n\n\t\t\t// We now have an acceptable number of lines, but the measures may not be optimally distributed. See if there is a better distribution.\n\t\t\tif (lineBreaks.length > 0 && section.measureWidths.length < 25) {\n\t\t\t\t// Only do this if everything doesn't fit on one line.\n\t\t\t\t// This is an intensive operation and it is optional so just do it for shorter music.\n\t\t\t\tff = optimizeLineWidths(section, lineBreakPoint, lineBreaks, explanation);\n\t\t\t\texplanation.attempts.push({\n\t\t\t\t\ttype: \"Optimize\",\n\t\t\t\t\tfailed: ff.failed,\n\t\t\t\t\treason: ff.reason,\n\t\t\t\t\tlineBreaks: ff.lineBreaks,\n\t\t\t\t\ttotals: ff.totals\n\t\t\t\t});\n\t\t\t\tif (!ff.failed)\n\t\t\t\t\tlineBreaks = ff.lineBreaks;\n\t\t\t}\n\t\t}\n\t\taccumulatedLineBreaks.push(lineBreaks);\n\t\texplanations.push(explanation);\n\t}\n\t// If the vertical space exceeds targetHeight, remove a line and try again. If that is too crowded, then don't use it.\n\tvar staffWidth = params.staffwidth;\n\tvar ret = getRevisedTuneParams(accumulatedLineBreaks, staffWidth, params);\n\tret.explanation = explanations;\n\tret.reParse = true;\n\treturn ret;\n}\n\nexport default {\n\twrapLines,\n\tcalcLineWraps\n};\n", "var spacing = {};\n\nspacing.FONTEM = 360;\nspacing.FONTSIZE = 30;\nspacing.STEP = spacing.FONTSIZE * 93 / 720;\nspacing.SPACE = 10;\nspacing.TOPNOTE = 15;\nspacing.STAVEHEIGHT = 100;\nspacing.INDENT = 50;\n\nexport default spacing;\n", "export default function delineTune(inputLines, options) {\n\tif (!options) options = {};\n\tvar lineBreaks = !!options.lineBreaks;\n\tvar outputLines = [];\n\tvar inMusicLine = false;\n\tvar currentMeter = [];\n\tvar currentKey = [];\n\tvar currentClef = [];\n\tvar currentVocalFont = [];\n\tvar currentGChordFont = [];\n\tvar currentTripletFont = [];\n\tvar currentAnnotationFont = [];\n\tfor (var i = 0; i < inputLines.length; i++) {\n\t\tvar inputLine = inputLines[i];\n\t\tif (inputLine.staff) {\n\t\t\tif (inMusicLine && !inputLine.vskip) {\n\t\t\t\tvar outputLine = outputLines[outputLines.length-1];\n\t\t\t\t//findMismatchKeys(inputLine, outputLine, [\"staff\", \"staffGroup\"], \"line\", i)\n\t\t\t\tfor (var s = 0; s < outputLine.staff.length; s++) {\n\t\t\t\t\tvar inputStaff = inputLine.staff[s];\n\t\t\t\t\tvar outputStaff = outputLine.staff[s];\n\t\t\t\t\tif (inputStaff) {\n\t\t\t\t\t\tif (!objEqual(inputStaff.meter, currentMeter[s])) {\n\t\t\t\t\t\t\t// The meter changed for this line, otherwise it wouldn't have been set\n\t\t\t\t\t\t\taddMeterToVoices(inputStaff.meter, inputStaff.voices)\n\t\t\t\t\t\t\tcurrentMeter[s] = inputStaff.meter;\n\t\t\t\t\t\t\tdelete inputStaff.meter;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.key, currentKey[s])) {\n\t\t\t\t\t\t\taddKeyToVoices(inputStaff.key, inputStaff.voices);\n\t\t\t\t\t\t\tcurrentKey[s] = inputStaff.key;\n\t\t\t\t\t\t\tdelete inputStaff.key;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (inputStaff.title)\n\t\t\t\t\t\t\toutputStaff.abbrevTitle = inputStaff.title;\n\t\t\t\t\t\tif (!objEqual(inputStaff.clef, currentClef[s])) {\n\t\t\t\t\t\t\taddClefToVoices(inputStaff.clef, inputStaff.voices);\n\t\t\t\t\t\t\tcurrentClef[s] = inputStaff.clef;\n\t\t\t\t\t\t\tdelete inputStaff.clef;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.vocalfont, currentVocalFont[s])) {\n\t\t\t\t\t\t\taddFontToVoices(inputStaff.vocalfont, inputStaff.voices, 'vocalfont')\n\t\t\t\t\t\t\tcurrentVocalFont[s] = inputStaff.vocalfont;\n\t\t\t\t\t\t\tdelete inputStaff.vocalfont;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.gchordfont, currentGChordFont[s])) {\n\t\t\t\t\t\t\taddFontToVoices(inputStaff.gchordfont, inputStaff.voices, 'gchordfont')\n\t\t\t\t\t\t\tcurrentGChordFont[s] = inputStaff.gchordfont;\n\t\t\t\t\t\t\tdelete inputStaff.gchordfont;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.tripletfont, currentTripletFont[s])) {\n\t\t\t\t\t\t\taddFontToVoices(inputStaff.tripletfont, inputStaff.voices, 'tripletfont')\n\t\t\t\t\t\t\tcurrentTripletFont[s] = inputStaff.tripletfont;\n\t\t\t\t\t\t\tdelete inputStaff.tripletfont;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!objEqual(inputStaff.annotationfont, currentAnnotationFont[s])) {\n\t\t\t\t\t\t\taddFontToVoices(inputStaff.annotationfont, inputStaff.voices, 'annotationfont')\n\t\t\t\t\t\t\tcurrentAnnotationFont[s] = inputStaff.annotationfont;\n\t\t\t\t\t\t\tdelete inputStaff.annotationfont;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//findMismatchKeys(inputStaff, outputStaff, [\"voices\", \"title\", \"abbrevTitle\", \"barNumber\", \"meter\", \"key\", \"clef\", \"vocalfont\", \"gchordfont\", \"tripletfont\", \"annotationfont\"], \"staff\", i + ' ' + s)\n\t\t\t\t\tif (inputStaff) {\n\t\t\t\t\t\tfor (var v = 0; v < outputStaff.voices.length; v++) {\n\t\t\t\t\t\t\tvar outputVoice = outputStaff.voices[v];\n\t\t\t\t\t\t\tvar inputVoice = inputStaff.voices[v];\n\t\t\t\t\t\t\tif (lineBreaks)\n\t\t\t\t\t\t\t\toutputVoice.push({el_type: \"break\"});\n\t\t\t\t\t\t\tif (inputVoice)\n\t\t\t\t\t\t\t\toutputStaff.voices[v] = outputVoice.concat(inputVoice)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var ii = 0; ii < inputLine.staff.length; ii++) {\n\t\t\t\t\tcurrentKey[ii] = inputLine.staff[ii].key;\n\t\t\t\t\tcurrentMeter[ii] = inputLine.staff[ii].meter;\n\t\t\t\t\tcurrentClef[ii] = inputLine.staff[ii].clef;\n\t\t\t\t}\n\t\t\t\t// copy this because we are going to change it and we don't want to change the original.\n\t\t\t\toutputLines.push(cloneLine(inputLine));\n\t\t\t}\n\t\t\tinMusicLine = true;\n\t\t} else {\n\t\t\tinMusicLine = false;\n\t\t\toutputLines.push(inputLine);\n\t\t}\n\t}\n\treturn outputLines;\n}\n// function findMismatchKeys(input, output, ignore, context, context2) {\n// \tif (!input) {\n// \t\treturn;\n// \t}\n// \tvar outputKeys = Object.keys(output);\n// \tvar inputKeys = Object.keys(input);\n// \tfor (var ii = 0; ii < ignore.length; ii++) {\n// \t\tif (outputKeys.indexOf(ignore[ii]) >= 0) {\n// \t\t\toutputKeys.splice(outputKeys.indexOf(ignore[ii]), 1);\n// \t\t}\n// \t\tif (inputKeys.indexOf(ignore[ii]) >= 0) {\n// \t\t\tinputKeys.splice(inputKeys.indexOf(ignore[ii]), 1);\n// \t\t}\n// \t}\n// \tif (inputKeys.join(\",\") !== outputKeys.join(\",\")) {\n// \t\tconsole.log(\"keys mismatch \"+context + ' ' + context2, input, output);\n// \t}\n// \tfor (var k = 0; k < inputKeys.length; k++) {\n// \t\tvar key = inputKeys[k];\n// \t\tif (ignore.indexOf(key) < 0) {\n// \t\t\tvar inputValue = JSON.stringify(input[key], replacer);\n// \t\t\tvar outputValue = JSON.stringify(output[key], replacer);\n// \t\t\tif (inputValue !== outputValue)\n// \t\t\t\tconsole.log(\"value mismatch \"+context + ' ' + context2 + ' ' + key, inputValue, outputValue)\n// \t\t}\n// \t}\n// }\nfunction replacer(key, value) {\n\t// Filtering out properties\n\tif (key === 'abselem') {\n\t\treturn 'abselem';\n\t}\n\treturn value;\n}\n\nfunction addMeterToVoices(meter, voices) {\n\tmeter.el_type = \"meter\";\n\tmeter.startChar = -1;\n\tmeter.endChar = -1;\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvoices[i].unshift(meter);\n\t}\n}\n\nfunction addKeyToVoices(key, voices) {\n\tkey.el_type = \"key\";\n\tkey.startChar = -1;\n\tkey.endChar = -1;\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvoices[i].unshift(key);\n\t}\n}\n\nfunction addClefToVoices(clef, voices) {\n\tclef.el_type = \"clef\";\n\tclef.startChar = -1;\n\tclef.endChar = -1;\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvoices[i].unshift(clef);\n\t}\n}\n\nfunction addFontToVoices(font, voices, type) {\n\tfont.el_type = \"font\";\n\tfont.type = type;\n\tfont.startChar = -1;\n\tfont.endChar = -1;\n\tfor (var i = 0; i < voices.length; i++) {\n\t\tvoices[i].unshift(font);\n\t}\n}\n\nfunction objEqual(input, output) {\n\tif (!input)\n\t\treturn true; // the default is whatever the old output is.\n\tvar inputValue = JSON.stringify(input, replacer);\n\tvar outputValue = JSON.stringify(output, replacer);\n\treturn inputValue === outputValue;\n}\n\nfunction cloneLine(line) {\n\tvar output = {};\n\tvar keys = Object.keys(line);\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tif (keys[i] !== \"staff\")\n\t\t\toutput[keys[i]] = line[keys[i]];\n\t\telse {\n\t\t\toutput.staff = [];\n\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\tvar staff = {};\n\t\t\t\tvar keys2 = Object.keys(line.staff[j]);\n\t\t\t\tfor (var k = 0; k < keys2.length; k++) {\n\t\t\t\t\tif (keys2[k] !== \"voices\")\n\t\t\t\t\t\tstaff[keys2[k]] = line.staff[j][keys2[k]];\n\t\t\t\t\telse {\n\t\t\t\t\t\tstaff.voices = [];\n\t\t\t\t\t\tfor (var v = 0; v < line.staff[j].voices.length; v++) {\n\t\t\t\t\t\t\tstaff.voices.push([].concat(line.staff[j].voices[v]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toutput.staff.push(staff)\n\t\t\t}\n\t\t}\n\t}\n\treturn output;\n}\n", "//    abc_tune.js: a computer usable internal structure representing one tune.\n\nimport parseCommon from '../parse/abc_common.js';\nimport spacing     from '../write/helpers/spacing.js';\n//import sequence    from '../synth/abc_midi_sequencer';\n//import flatten     from '../synth/abc_midi_flattener';\nimport delineTune  from \"./deline-tune.js\";\n\n/**\n * This is the data for a single ABC tune. It is created and populated by the window.ABCJS.parse.Parse class.\n * Also known as the ABCJS Abstract Syntax Tree\n * @alternateClassName ABCJS.Tune\n */\nexport default function Tune() {\n\tthis.reset = function () {\n\t\tthis.version = \"1.1.0\";\n\t\tthis.media = \"screen\";\n\t\tthis.metaText = {};\n\t\tthis.metaTextInfo = {};\n\t\tthis.formatting = {};\n\t\tthis.lines = [];\n\t\tthis.staffNum = 0;\n\t\tthis.voiceNum = 0;\n\t\tthis.lineNum = 0;\n\t\tthis.runningFonts = {};\n\t\tdelete this.visualTranspose;\n\t};\n\tthis.reset();\n\n\tfunction copy(dest, src, prop, attrs) {\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\tdest[prop][attrs[i]] = src[prop][attrs[i]];\n\t}\n\n\tthis.copyTopInfo = function(src) {\n\t\tvar attrs = ['tempo', 'title', 'header', 'rhythm', 'origin', 'composer', 'author', 'partOrder'];\n\t\tcopy(this, src, \"metaText\", attrs);\n\t\tcopy(this, src, \"metaTextInfo\", attrs);\n\t};\n\n\tthis.copyBottomInfo = function(src) {\n\t\tvar attrs = ['unalignedWords',\n\t\t\t'book',\n\t\t\t'source',\n\t\t\t'discography',\n\t\t\t'notes',\n\t\t\t'transcription',\n\t\t\t'history',\n\t\t\t'abc-copyright',\n\t\t\t'abc-creator',\n\t\t\t'abc-edited-by',\n\t\t\t'footer']\n\t\tcopy(this, src, \"metaText\", attrs);\n\t\tcopy(this, src, \"metaTextInfo\", attrs);\n\t};\n\n\t// The structure consists of a hash with the following two items:\n\t// metaText: a hash of {key, value}, where key is one of: title, author, rhythm, source, transcription, unalignedWords, etc...\n\t// tempo: { noteLength: number (e.g. .125), bpm: number }\n\t// lines: an array of elements, or one of the following:\n\t//\n\t// STAFF: array of elements\n\t// SUBTITLE: string\n\t//\n\t// TODO: actually, the start and end char should modify each part of the note type\n\t// The elements all have a type field and a start and end char\n\t// field. The rest of the fields depend on the type and are listed below:\n\t// REST: duration=1,2,4,8; chord: string\n\t// NOTE: accidental=none,dbl_flat,flat,natural,sharp,dbl_sharp\n\t//\t\tpitch: \"C\" is 0. The numbers refer to the pitch letter.\n\t//\t\tduration: .5 (sixteenth), .75 (dotted sixteenth), 1 (eighth), 1.5 (dotted eighth)\n\t//\t\t\t2 (quarter), 3 (dotted quarter), 4 (half), 6 (dotted half) 8 (whole)\n\t//\t\tchord: { name:chord, position: one of 'default', 'above', 'below' }\n\t//\t\tend_beam = true or undefined if this is the last note in a beam.\n\t//\t\tlyric: array of { syllable: xxx, divider: one of \" -_\" }\n\t//\t\tstartTie = true|undefined\n\t//\t\tendTie = true|undefined\n\t//\t\tstartTriplet = num <- that is the number to print\n\t//\t\tendTriplet = true|undefined (the last note of the triplet)\n\t// TODO: actually, decoration should be an array.\n\t//\t\tdecoration: upbow, downbow, accent\n\t// BAR: type=bar_thin, bar_thin_thick, bar_thin_thin, bar_thick_thin, bar_right_repeat, bar_left_repeat, bar_double_repeat\n\t//\tnumber: 1 or 2: if it is the start of a first or second ending\n\t// CLEF: type=treble,bass\n\t// KEY-SIG:\n\t//\t\taccidentals[]: { acc:sharp|dblsharp|natural|flat|dblflat,  note:a|b|c|d|e|f|g }\n\t// METER: type: common_time,cut_time,specified\n\t//\t\tif specified, { num: 99, den: 99 }\n\n\tthis.getBeatLength = function() {\n\t\t// This returns a fraction: for instance 1/4 for a quarter\n\t\t// There are two types of meters: compound and regular. Compound meter has 3 beats counted as one.\n\t\tvar meter = this.getMeterFraction();\n\t\tvar multiplier = 1;\n\t\tif (meter.num === 6 || meter.num === 9 || meter.num === 12)\n\t\t\tmultiplier = 3;\n\t\telse if (meter.num === 3 && meter.den === 8)\n\t\t\tmultiplier = 3;\n\n\t\treturn multiplier / meter.den;\n\t};\n\n\tfunction computePickupLength(lines, barLength) {\n\t\tvar pickupLength = 0;\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tif (lines[i].staff) {\n\t\t\t\tfor (var j = 0; j < lines[i].staff.length; j++) {\n\t\t\t\t\tfor (var v = 0; v < lines[i].staff[j].voices.length; v++) {\n\t\t\t\t\t\tvar voice = lines[i].staff[j].voices[v];\n\t\t\t\t\t\tvar tripletMultiplier = 1;\n\t\t\t\t\t\tfor (var el = 0; el < voice.length; el++) {\n\t\t\t\t\t\t\tvar isSpacer = voice[el].rest && voice[el].rest.type === \"spacer\";\n\t\t\t\t\t\t\tif (voice[el].startTriplet)\n\t\t\t\t\t\t\t\ttripletMultiplier = voice[el].tripletMultiplier;\n\t\t\t\t\t\t\tif (voice[el].duration && !isSpacer && voice[el].el_type !== \"tempo\")\n\t\t\t\t\t\t\t\tpickupLength += voice[el].duration * tripletMultiplier;\n\t\t\t\t\t\t\tif (voice[el].endTriplet)\n\t\t\t\t\t\t\t\ttripletMultiplier = 1;\n\t\t\t\t\t\t\tif (pickupLength >= barLength)\n\t\t\t\t\t\t\t\tpickupLength -= barLength;\n\t\t\t\t\t\t\tif (voice[el].el_type === 'bar')\n\t\t\t\t\t\t\t\treturn pickupLength;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn pickupLength;\n\t}\n\tthis.getPickupLength = function() {\n\t\tvar barLength = this.getBarLength();\n\t\tvar pickupLength = computePickupLength(this.lines, barLength);\n\n\t\t// If computed pickup length is very close to 0 or the bar length, we assume\n\t\t// that we actually have a full bar and hence no pickup.\n\t\treturn (pickupLength < 1e-8 || barLength-pickupLength < 1e-8) ? 0 : pickupLength;\n\t};\n\n\tthis.getBarLength = function() {\n\t\tvar meter = this.getMeterFraction();\n\t\treturn meter.num / meter.den;\n\t};\n\n\tthis.getTotalTime = function() {\n\t\treturn this.totalTime;\n\t};\n\n\tthis.getTotalBeats = function() {\n\t\treturn this.totalBeats;\n\t};\n\n\tthis.millisecondsPerMeasure = function(bpmOverride) {\n\t\tvar bpm;\n\t\tif (bpmOverride) {\n\t\t\tbpm = bpmOverride;\n\t\t} else {\n\t\t\tvar tempo = this.metaText ? this.metaText.tempo : null;\n\t\t\tbpm = this.getBpm(tempo);\n\t\t}\n\t\tif (bpm <= 0)\n\t\t\tbpm = 1; // I don't think this can happen, but we don't want a possibility of dividing by zero.\n\n\t\tvar beatsPerMeasure = this.getBeatsPerMeasure();\n\n\t\tvar minutesPerMeasure = beatsPerMeasure / bpm;\n\t\treturn minutesPerMeasure * 60000;\n\t};\n\n\tthis.getBeatsPerMeasure = function() {\n\t\tvar beatLen = this.getBeatLength();\n\t\tvar barLen = this.getBarLength();\n\t\treturn barLen / beatLen;\n\t};\n\n\tthis.getMeter = function() {\n\t\tfor (var i = 0; i < this.lines.length; i++) {\n\t\t\tvar line = this.lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar meter = line.staff[j].meter;\n\t\t\t\t\tif (meter) {\n\t\t\t\t\t\treturn meter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { type: \"common_time\" };\n\t};\n\n\tthis.getMeterFraction = function() {\n\t\tvar meter = this.getMeter();\n\t\tvar num = 4;\n\t\tvar den = 4;\n\t\tif (meter) {\n\t\t\tif (meter.type === 'specified') {\n\t\t\t\tnum = parseInt(meter.value[0].num, 10);\n\t\t\t\tden = parseInt(meter.value[0].den,10);\n\t\t\t} else if (meter.type === 'cut_time') {\n\t\t\t\tnum = 2;\n\t\t\t\tden = 2;\n\t\t\t} else if (meter.type === 'common_time') {\n\t\t\t\tnum = 4;\n\t\t\t\tden = 4;\n\t\t\t}\n\t\t}\n\t\tthis.meter = { num: num, den: den };\n\t\treturn this.meter; // TODO-PER: is this saved value used anywhere? A get function shouldn't change state.\n\t};\n\n\tthis.getKeySignature = function() {\n\t\tfor (var i = 0; i < this.lines.length; i++) {\n\t\t\tvar line = this.lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tif (line.staff[j].key)\n\t\t\t\t\t\treturn line.staff[j].key;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {  };\n\t};\n\n\tthis.getElementFromChar = function(char) {\n\t\tfor (var i = 0; i < this.lines.length; i++) {\n\t\t\tvar line = this.lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar staff = line.staff[j];\n\t\t\t\t\tfor (var k = 0; k < staff.voices.length; k++) {\n\t\t\t\t\t\tvar voice = staff.voices[k];\n\t\t\t\t\t\tfor (var ii = 0; ii < voice.length; ii++) {\n\t\t\t\t\t\t\tvar elem = voice[ii];\n\t\t\t\t\t\t\tif (elem.startChar && elem.endChar &&\n\t\t\t\t\t\t\t\telem.startChar <= char && elem.endChar > char)\n\t\t\t\t\t\t\t\treturn elem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tfunction addVerticalInfo(timingEvents) {\n\t\t// Add vertical info to the bar events: put the next event's top, and the event after the next measure's top.\n\t\tvar lastBarTop;\n\t\tvar lastBarBottom;\n\t\tvar lastEventTop;\n\t\tvar lastEventBottom;\n\t\tfor (var e = timingEvents.length - 1; e >= 0; e--) {\n\t\t\tvar ev = timingEvents[e];\n\t\t\tif (ev.type === 'bar') {\n\t\t\t\tev.top = lastEventTop;\n\t\t\t\tev.nextTop = lastBarTop;\n\t\t\t\tlastBarTop = lastEventTop;\n\n\t\t\t\tev.bottom = lastEventBottom;\n\t\t\t\tev.nextBottom = lastBarBottom;\n\t\t\t\tlastBarBottom = lastEventBottom;\n\t\t\t} else if (ev.type === 'event') {\n\t\t\t\tlastEventTop = ev.top;\n\t\t\t\tlastEventBottom = ev.top + ev.height;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeSortedArray(hash) {\n\t\tvar arr = [];\n\t\tfor (var k in hash) {\n\t\t\tif (hash.hasOwnProperty(k))\n\t\t\t\tarr.push(hash[k]);\n\t\t}\n\t\tarr = arr.sort(function (a, b) {\n\t\t\tvar diff = a.milliseconds - b.milliseconds;\n\t\t\t// if the events have the same time, make sure a bar comes before a note\n\t\t\tif (diff !== 0) {\n\t\t\t\treturn diff;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn a.type === \"bar\" ? -1 : 1;\n\t\t\t}\n\t\t});\n\t\treturn arr;\n\t}\n\n\tthis.addElementToEvents = function(eventHash, element, voiceTimeMilliseconds, top, height, line, measureNumber, timeDivider, isTiedState, nextIsBar) {\n\t\tif (element.hint)\n\t\t\treturn { isTiedState: undefined, duration: 0 };\n\t\tvar realDuration = element.durationClass ? element.durationClass : element.duration;\n\t\tif (element.abcelem.rest && element.abcelem.rest.type === \"spacer\")\n\t\t\trealDuration = 0;\n\t\tif (realDuration > 0) {\n\t\t\tvar es = [];\n\t\t\t// If there is an invisible rest, then there are not elements, so don't push a null one.\n\t\t\tfor (var i = 0; i < element.elemset.length; i++) {\n\t\t\t\tif (element.elemset[i] !== null)\n\t\t\t\t\tes.push(element.elemset[i]);\n\t\t\t}\n\t\t\tvar isTiedToNext = element.startTie;\n\t\t\tif (isTiedState !== undefined) {\n\t\t\t\teventHash[\"event\" + isTiedState].elements.push(es); // Add the tied note to the first note that it is tied to\n\t\t\t\tif (nextIsBar) {\n\t\t\t\t\tif (!eventHash[\"event\" + voiceTimeMilliseconds]) {\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds] = {\n\t\t\t\t\t\t\ttype: \"event\",\n\t\t\t\t\t\t\tmilliseconds: voiceTimeMilliseconds,\n\t\t\t\t\t\t\tline: line,\n\t\t\t\t\t\t\tmeasureNumber: measureNumber,\n\t\t\t\t\t\t\ttop: top,\n\t\t\t\t\t\t\theight: height,\n\t\t\t\t\t\t\tleft: null,\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\telements: [],\n\t\t\t\t\t\t\tstartChar: null,\n\t\t\t\t\t\t\tendChar: null,\n\t\t\t\t\t\t\tstartCharArray: [],\n\t\t\t\t\t\t\tendCharArray: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].measureStart = true;\n\t\t\t\t\tnextIsBar = false;\n\t\t\t\t}\n\t\t\t\tif (!isTiedToNext)\n\t\t\t\t\tisTiedState = undefined;\n\t\t\t} else {\n\t\t\t\t// the last note wasn't tied.\n\t\t\t\tif (!eventHash[\"event\" + voiceTimeMilliseconds]) {\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds] = {\n\t\t\t\t\t\ttype: \"event\",\n\t\t\t\t\t\tmilliseconds: voiceTimeMilliseconds,\n\t\t\t\t\t\tline: line,\n\t\t\t\t\t\tmeasureNumber: measureNumber,\n\t\t\t\t\t\ttop: top,\n\t\t\t\t\t\theight: height,\n\t\t\t\t\t\tleft: element.x,\n\t\t\t\t\t\twidth: element.w,\n\t\t\t\t\t\telements: [es],\n\t\t\t\t\t\tstartChar: element.abcelem.startChar,\n\t\t\t\t\t\tendChar: element.abcelem.endChar,\n\t\t\t\t\t\tstartCharArray: [element.abcelem.startChar],\n\t\t\t\t\t\tendCharArray: [element.abcelem.endChar],\n\t\t\t\t\t\tmidiPitches: element.abcelem.midiPitches ? parseCommon.cloneArray(element.abcelem.midiPitches) : []\n\t\t\t\t\t};\n\t\t\t\t\tif (element.abcelem.midiGraceNotePitches)\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiGraceNotePitches = parseCommon.cloneArray(element.abcelem.midiGraceNotePitches);\n\t\t\t\t} else {\n\t\t\t\t\t// If there is more than one voice then two notes can fall at the same time. Usually they would be lined up in the same place, but if it is a whole rest, then it is placed funny. In any case, the left most element wins.\n\t\t\t\t\tif (eventHash[\"event\" + voiceTimeMilliseconds].left)\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].left = Math.min(eventHash[\"event\" + voiceTimeMilliseconds].left, element.x);\n\t\t\t\t\telse\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].left = element.x;\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].elements.push(es);\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].startCharArray.push(element.abcelem.startChar);\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].endCharArray.push(element.abcelem.endChar);\n\t\t\t\t\tif (eventHash[\"event\" + voiceTimeMilliseconds].startChar === null)\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].startChar =element.abcelem.startChar;\n\t\t\t\t\tif (eventHash[\"event\" + voiceTimeMilliseconds].endChar === null)\n\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].endChar =element.abcelem.endChar;\n\t\t\t\t\tif (element.abcelem.midiPitches && element.abcelem.midiPitches.length) {\n\t\t\t\t\t\tif (!eventHash[\"event\" + voiceTimeMilliseconds].midiPitches)\n\t\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiPitches = [];\n\t\t\t\t\t\tfor (var i = 0; i < element.abcelem.midiPitches.length; i++)\n\t\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiPitches.push(element.abcelem.midiPitches[i]);\n\t\t\t\t\t}\n\t\t\t\t\tif (element.abcelem.midiGraceNotePitches && element.abcelem.midiGraceNotePitches.length) {\n\t\t\t\t\t\tif (!eventHash[\"event\" + voiceTimeMilliseconds].midiGraceNotePitches)\n\t\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiGraceNotePitches = [];\n\t\t\t\t\t\tfor (var j = 0; j < element.abcelem.midiGraceNotePitches.length; j++)\n\t\t\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].midiGraceNotePitches.push(element.abcelem.midiGraceNotePitches[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nextIsBar) {\n\t\t\t\t\teventHash[\"event\" + voiceTimeMilliseconds].measureStart = true;\n\t\t\t\t\tnextIsBar = false;\n\t\t\t\t}\n\t\t\t\tif (isTiedToNext)\n\t\t\t\t\tisTiedState = voiceTimeMilliseconds;\n\t\t\t}\n\t\t}\n\t\treturn { isTiedState: isTiedState, duration: realDuration / timeDivider, nextIsBar: nextIsBar || element.type === 'bar' };\n\t};\n\n\tthis.makeVoicesArray = function() {\n\t\t// First make a new array that is arranged by voice so that the repeats that span different lines are handled correctly.\n\t\tvar voicesArr = [];\n\t\tvar measureNumber = [];\n\t\tvar tempos = {};\n\t\tfor (var line = 0; line < this.engraver.staffgroups.length; line++) {\n\t\t\tvar group = this.engraver.staffgroups[line];\n\t\t\tif (group && group.staffs && group.staffs.length > 0) {\n\t\t\t\tvar firstStaff = group.staffs[0];\n\t\t\t\tvar middleC = firstStaff.absoluteY;\n\t\t\t\tvar top = middleC - firstStaff.top * spacing.STEP;\n\t\t\t\tvar lastStaff = group.staffs[group.staffs.length - 1];\n\t\t\t\tmiddleC = lastStaff.absoluteY;\n\t\t\t\tvar bottom = middleC - lastStaff.bottom * spacing.STEP;\n\t\t\t\tvar height = bottom - top;\n\n\t\t\t\tvar voices = group.voices;\n\t\t\t\tfor (var v = 0; v < voices.length; v++) {\n\t\t\t\t\tif (voices[v].staff && voices[v].staff.isTabStaff)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tvar noteFound = false;\n\t\t\t\t\tif (!voicesArr[v])\n\t\t\t\t\t\tvoicesArr[v] = [];\n\t\t\t\t\tif (measureNumber[v] === undefined)\n\t\t\t\t\t\tmeasureNumber[v] = 0;\n\t\t\t\t\tvar elements = voices[v].children;\n\t\t\t\t\tfor (var elem = 0; elem < elements.length; elem++) {\n\t\t\t\t\t\tif (elements[elem].type === \"tempo\")\n\t\t\t\t\t\t\ttempos[measureNumber[v]] = this.getBpm(elements[elem].abcelem);\n\t\t\t\t\t\tvoicesArr[v].push({top: top, height: height, line: group.line, measureNumber: measureNumber[v], elem: elements[elem]});\n\t\t\t\t\t\tif (elements[elem].type === 'bar' && noteFound) // Count the measures by counting the bar lines, but skip a bar line that appears at the left of the music, before any notes.\n\t\t\t\t\t\t\tmeasureNumber[v]++;\n\t\t\t\t\t\tif (elements[elem].type === 'note' || elements[elem].type === 'rest')\n\t\t\t\t\t\t\tnoteFound = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.tempoLocations = tempos; // This should be passed back, but the function is accessible publicly so that would break the interface.\n\t\treturn voicesArr;\n\t};\n\n\tthis.setupEvents = function(startingDelay, timeDivider, startingBpm, warp) {\n\t\tif (!warp) warp = 1;\n\t\tvar timingEvents = [];\n\n\t\tvar eventHash = {};\n\t\t// The time is the number of seconds from the beginning of the piece.\n\t\t// The units we are scanning are in notation units (i.e. 0.25 is a quarter note)\n\t\tvar time = startingDelay;\n\t\tvar isTiedState;\n\t\tvar nextIsBar = true;\n\t\tvar voices = this.makeVoicesArray();\n\t\tvar maxVoiceTimeMilliseconds = 0;\n\t\tfor (var v = 0; v < voices.length; v++) {\n\t\t\tvar voiceTime = time;\n\t\t\tvar voiceTimeMilliseconds = Math.round(voiceTime * 1000);\n\t\t\tvar startingRepeatElem = 0;\n\t\t\tvar endingRepeatElem = -1;\n\t\t\tvar elements = voices[v];\n\t\t\tvar bpm = startingBpm;\n\t\t\ttimeDivider = this.getBeatLength() * bpm / 60;\n\t\t\tvar tempoDone = -1;\n\t\t\tfor (var elem = 0; elem < elements.length; elem++) {\n\t\t\t\tvar thisMeasure = elements[elem].measureNumber;\n\t\t\t\tif (tempoDone !== thisMeasure && this.tempoLocations[thisMeasure]) {\n\t\t\t\t\tbpm = this.tempoLocations[thisMeasure];\n\t\t\t\t\ttimeDivider = warp * this.getBeatLength() * bpm / 60;\n\t\t\t\t\ttempoDone = thisMeasure;\n\t\t\t\t}\n\t\t\t\tvar element = elements[elem].elem;\n\t\t\t\tvar ret = this.addElementToEvents(eventHash, element, voiceTimeMilliseconds, elements[elem].top, elements[elem].height, elements[elem].line, elements[elem].measureNumber, timeDivider, isTiedState, nextIsBar);\n\t\t\t\tisTiedState = ret.isTiedState;\n\t\t\t\tnextIsBar = ret.nextIsBar;\n\t\t\t\tvoiceTime += ret.duration;\n\t\t\t\tvar lastHash;\n\t\t\t\tif (element.duration > 0 && eventHash[\"event\" + voiceTimeMilliseconds]) // This won't exist if this is the end of a tie.\n\t\t\t\t\tlastHash = \"event\" + voiceTimeMilliseconds;\n\t\t\t\tvoiceTimeMilliseconds = Math.round(voiceTime * 1000);\n\t\t\t\tif (element.type === 'bar') {\n\t\t\t\t\tvar barType = element.abcelem.type;\n\t\t\t\t\tvar endRepeat = (barType === \"bar_right_repeat\" || barType === \"bar_dbl_repeat\");\n\t\t\t\t\tvar startEnding = (element.abcelem.startEnding === '1');\n\t\t\t\t\tvar startRepeat = (barType === \"bar_left_repeat\" || barType === \"bar_dbl_repeat\" || barType === \"bar_right_repeat\");\n\t\t\t\t\tif (endRepeat) {\n\t\t\t\t\t\t// Force the end of the previous note to the position of the measure - the cursor won't go past the end repeat\n\t\t\t\t\t\tif (elem > 0) {\n\t\t\t\t\t\t\teventHash[lastHash].endX = element.x;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endingRepeatElem === -1)\n\t\t\t\t\t\t\tendingRepeatElem = elem;\n\t\t\t\t\t\tvar lastVoiceTimeMilliseconds = 0;\n\t\t\t\t\t\ttempoDone = -1;\n\t\t\t\t\t\tfor (var el2 = startingRepeatElem; el2 < endingRepeatElem; el2++) {\n\t\t\t\t\t\t\tthisMeasure = elements[el2].measureNumber;\n\t\t\t\t\t\t\tif (tempoDone !== thisMeasure && this.tempoLocations[thisMeasure]) {\n\t\t\t\t\t\t\t\tbpm = this.tempoLocations[thisMeasure];\n\t\t\t\t\t\t\t\ttimeDivider = warp * this.getBeatLength() * bpm / 60;\n\t\t\t\t\t\t\t\ttempoDone = thisMeasure;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar element2 = elements[el2].elem;\n\t\t\t\t\t\t\tret = this.addElementToEvents(eventHash, element2, voiceTimeMilliseconds, elements[el2].top, elements[el2].height, elements[el2].line, elements[el2].measureNumber, timeDivider, isTiedState, nextIsBar);\n\t\t\t\t\t\t\tisTiedState = ret.isTiedState;\n\t\t\t\t\t\t\tnextIsBar = ret.nextIsBar;\n\t\t\t\t\t\t\tvoiceTime += ret.duration;\n\t\t\t\t\t\t\tlastVoiceTimeMilliseconds = voiceTimeMilliseconds;\n\t\t\t\t\t\t\tvoiceTimeMilliseconds = Math.round(voiceTime * 1000);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (eventHash[\"event\" + lastVoiceTimeMilliseconds]) // This won't exist if it is the beginning of the next line. That's ok because we will just count the end of the last line as the end.\n\t\t\t\t\t\t\teventHash[\"event\" + lastVoiceTimeMilliseconds].endX = elements[endingRepeatElem].elem.x;\n\t\t\t\t\t\tnextIsBar = true;\n\t\t\t\t\t\tendingRepeatElem = -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (startEnding)\n\t\t\t\t\t\tendingRepeatElem = elem;\n\t\t\t\t\tif (startRepeat)\n\t\t\t\t\t\tstartingRepeatElem = elem;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmaxVoiceTimeMilliseconds = Math.max(maxVoiceTimeMilliseconds, voiceTimeMilliseconds)\n\t\t}\n\t\t// now we have all the events, but if there are multiple voices then there may be events out of order or duplicated, so normalize it.\n\t\ttimingEvents = makeSortedArray(eventHash);\n\t\taddVerticalInfo(timingEvents);\n\t\taddEndPoints(this.lines, timingEvents)\n\t\ttimingEvents.push({ type: \"end\", milliseconds: maxVoiceTimeMilliseconds });\n\t\tthis.addUsefulCallbackInfo(timingEvents, bpm*warp);\n\t\treturn timingEvents;\n\t};\n\n\tthis.addUsefulCallbackInfo = function(timingEvents, bpm) {\n\t\tvar millisecondsPerMeasure = this.millisecondsPerMeasure(bpm);\n\t\tfor (var i = 0; i < timingEvents.length; i++) {\n\t\t\tvar ev = timingEvents[i];\n\t\t\tev.millisecondsPerMeasure = millisecondsPerMeasure;\n\t\t}\n\t};\n\n\tfunction skipTies(elements, index) {\n\t\twhile (index < elements.length && elements[index].left === null)\n\t\t\tindex++;\n\t\treturn elements[index];\n\t}\n\tfunction addEndPoints(lines, elements) {\n\t\tif (elements.length < 1)\n\t\t\treturn;\n\t\tfor (var i = 0; i < elements.length-1; i++) {\n\t\t\tvar el = elements[i];\n\t\t\tvar next = skipTies(elements, i+1);\n\t\t\tif (el.left !== null) {\n\t\t\t\t// If there is no left element that is because this is a tie so it should be skipped.\n\t\t\t\tvar endX = (next && el.top === next.top) ? next.left : lines[el.line].staffGroup.w;\n\t\t\t\t// If this is already set, it is because the notes aren't sequential here, like the next thing is a repeat bar line.\n\t\t\t\t// In that case, the right-most position is passed in. There could still be an intervening note in another voice, so always look for the closest position.\n\t\t\t\t// If there is a repeat that stays on the same line, the endX set above won't be right because the next note will be before. In that case, use the endX that was calculated.\n\t\t\t\tif  (el.endX !== undefined) {\n\t\t\t\t\tif (endX > el.left)\n\t\t\t\t\t\tel.endX = Math.min(el.endX, endX);\n\t\t\t\t} else\n\t\t\t\t\tel.endX = endX;\n\t\t\t}\n\t\t}\n\t\tvar lastEl = elements[elements.length-1];\n\t\tlastEl.endX = lines[lastEl.line].staffGroup.w;\n\t}\n\n\tthis.getBpm = function(tempo) {\n\t\tvar bpm;\n\t\tif (tempo) {\n\t\t\tbpm = tempo.bpm;\n\t\t\tvar beatLength = this.getBeatLength();\n\t\t\tvar statedBeatLength = tempo.duration && tempo.duration.length > 0 ? tempo.duration[0] : beatLength;\n\t\t\tbpm = bpm * statedBeatLength / beatLength;\n\t\t}\n\t\tif (!bpm) {\n\t\t\tbpm = 180;\n\t\t\t// Compensate for compound meter, where the beat isn't a beat.\n\t\t\tvar meter = this.getMeterFraction();\n\t\t\tif (meter && meter.num !== 3 && (meter.num % 3 === 0)) {\n\t\t\t\tbpm = 120;\n\t\t\t}\n\t\t}\n\t\treturn bpm;\n\t};\n\n\tthis.setTiming = function (bpm, measuresOfDelay) {\n\t\tmeasuresOfDelay = measuresOfDelay || 0;\n\t\tif (!this.engraver || !this.engraver.staffgroups) {\n\t\t\tconsole.log(\"setTiming cannot be called before the tune is drawn.\");\n\t\t\tthis.noteTimings = [];\n\t\t\treturn this.noteTimings;\n\t\t}\n\n\t\tvar tempo = this.metaText ? this.metaText.tempo : null;\n\t\tvar naturalBpm = this.getBpm(tempo);\n\t\tvar warp = 1;\n\t\tif (bpm) {\n\t\t\tif (tempo)\n\t\t\t\twarp = bpm / naturalBpm;\n\t\t} else\n\t\t\tbpm = naturalBpm;\n\n\t\t// Calculate the basic midi data. We only care about the qpm variable here.\n\t\t//this.setUpAudio({qpm: bpm});\n\n\t\tvar beatLength = this.getBeatLength();\n\t\tvar beatsPerSecond = bpm / 60;\n\n\t\tvar measureLength = this.getBarLength();\n\n\t\tvar startingDelay = measureLength / beatLength * measuresOfDelay / beatsPerSecond;\n\t\tif (startingDelay)\n\t\t\tstartingDelay -= this.getPickupLength() / beatLength / beatsPerSecond;\n\t\tvar timeDivider = beatLength * beatsPerSecond;\n\n\t\tthis.noteTimings = this.setupEvents(startingDelay, timeDivider, bpm, warp);\n\t\tif (this.noteTimings.length > 0) {\n\t\t\tthis.totalTime = this.noteTimings[this.noteTimings.length - 1].milliseconds / 1000;\n\t\t\tthis.totalBeats = this.totalTime * beatsPerSecond;\n\t\t} else {\n\t\t\tthis.totalTime = undefined;\n\t\t\tthis.totalBeats = undefined;\n\t\t}\n\t\treturn this.noteTimings;\n\t};\n\n\tthis.setUpAudio = function(options) {\n\t\tconsole.log('NEUTERED');\n\t\t//if (!options) options = {};\n\t\t//var seq = sequence(this, options);\n\t\t//return flatten(seq, options, this.formatting.percmap, this.formatting.midi);\n\t};\n\tthis.deline = function(options) {\n\t\treturn delineTune(this.lines, options);\n\t}\n};\n", "import parseKeyVoice  from '../parse/abc_parse_key_voice.js';\nimport parseCommon    from '../parse/abc_common.js';\nimport parseDirective from './abc_parse_directive.js';\n\nvar TuneBuilder = function(tune) {\n\tvar self = this;\n\n\tthis.setVisualTranspose = function(visualTranspose) {\n\t\tif (visualTranspose)\n\t\t\ttune.visualTranspose = visualTranspose;\n\t};\n\n\tthis.resolveOverlays = function() {\n\t\tvar madeChanges = false;\n\t\tvar durationsPerLines = [];\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tvar line = tune.lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar staff = line.staff[j];\n\t\t\t\t\tvar overlayVoice = [];\n\t\t\t\t\tfor (var k = 0; k < staff.voices.length; k++) {\n\t\t\t\t\t\tvar voice = staff.voices[k];\n\t\t\t\t\t\toverlayVoice.push({ hasOverlay: false, voice: [], snip: []});\n\t\t\t\t\t\tdurationsPerLines[i] = 0;\n\t\t\t\t\t\tvar durationThisBar = 0;\n\t\t\t\t\t\tvar inOverlay = false;\n\t\t\t\t\t\tvar overlayDuration = 0;\n\t\t\t\t\t\tvar snipStart = -1;\n\t\t\t\t\t\tfor (var kk = 0; kk < voice.length; kk++) {\n\t\t\t\t\t\t\tvar event = voice[kk];\n\t\t\t\t\t\t\tif (event.el_type === \"overlay\" && !inOverlay) {\n\t\t\t\t\t\t\t\tmadeChanges = true;\n\t\t\t\t\t\t\t\tinOverlay = true;\n\t\t\t\t\t\t\t\tsnipStart = kk;\n\t\t\t\t\t\t\t\toverlayVoice[k].hasOverlay = true;\n\t\t\t\t\t\t\t\tif (overlayDuration === 0)\n\t\t\t\t\t\t\t\t\toverlayDuration = durationsPerLines[i];\n\t\t\t\t\t\t\t\t// If this isn't the first line, we also need invisible rests on the previous lines.\n\t\t\t\t\t\t\t\t// So, if the next voice doesn't appear in a previous line, create it\n\t\t\t\t\t\t\t\tfor (var ii = 0; ii < i; ii++) {\n\t\t\t\t\t\t\t\t\tif (durationsPerLines[ii] && tune.lines[ii].staff && staff.voices.length >= tune.lines[ii].staff[0].voices.length) {\n\t\t\t\t\t\t\t\t\t\ttune.lines[ii].staff[0].voices.push([{\n\t\t\t\t\t\t\t\t\t\t\tel_type: \"note\",\n\t\t\t\t\t\t\t\t\t\t\tduration: durationsPerLines[ii],\n\t\t\t\t\t\t\t\t\t\t\trest: {type: \"invisible\"},\n\t\t\t\t\t\t\t\t\t\t\tstartChar: event.startChar,\n\t\t\t\t\t\t\t\t\t\t\tendChar: event.endChar\n\t\t\t\t\t\t\t\t\t\t}]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (event.el_type === \"bar\") {\n\t\t\t\t\t\t\t\tif (inOverlay) {\n\t\t\t\t\t\t\t\t\t// delete the overlay events from this array without messing up this loop.\n\t\t\t\t\t\t\t\t\tinOverlay = false;\n\t\t\t\t\t\t\t\t\toverlayVoice[k].snip.push({ start: snipStart, len: kk - snipStart});\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event); // Also end the overlay with the barline.\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// This keeps the voices lined up: if the overlay isn't in the first measure then we need a bunch of invisible rests.\n\t\t\t\t\t\t\t\t\tif (durationThisBar > 0)\n\t\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push({ el_type: \"note\", duration: durationThisBar, rest: {type: \"invisible\"}, startChar: event.startChar, endChar: event.endChar });\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdurationThisBar = 0;\n\t\t\t\t\t\t\t} else if (event.el_type === \"note\") {\n\t\t\t\t\t\t\t\tif (inOverlay) {\n\t\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdurationThisBar += event.duration;\n\t\t\t\t\t\t\t\t\tdurationsPerLines[i] += event.duration;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (event.el_type === \"scale\" || event.el_type === \"stem\" || event.el_type === \"overlay\" || event.el_type === \"style\" || event.el_type === \"transpose\" || event.el_type === \"color\") {\n\t\t\t\t\t\t\t\t// These types of events are duplicated on the overlay layer.\n\t\t\t\t\t\t\t\toverlayVoice[k].voice.push(event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (overlayVoice[k].hasOverlay && overlayVoice[k].snip.length === 0) {\n\t\t\t\t\t\t\t// there was no closing bar, so we didn't set the snip amount.\n\t\t\t\t\t\t\toverlayVoice[k].snip.push({ start: snipStart, len: voice.length - snipStart});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (k = 0; k < overlayVoice.length; k++) {\n\t\t\t\t\t\tvar ov = overlayVoice[k];\n\t\t\t\t\t\tif (ov.hasOverlay) {\n\t\t\t\t\t\t\tov.voice.splice(0, 0, {el_type: \"stem\", direction: \"down\"})\n\t\t\t\t\t\t\tstaff.voices.push(ov.voice);\n\t\t\t\t\t\t\tfor (var kkk = ov.snip.length-1; kkk >= 0; kkk--) {\n\t\t\t\t\t\t\t\tvar snip = ov.snip[kkk];\n\t\t\t\t\t\t\t\tstaff.voices[k].splice(snip.start, snip.len);\n\t\t\t\t\t\t\t\tstaff.voices[k].splice(snip.start+1, 0, { el_type: \"stem\", direction: \"auto\" });\n\t\t\t\t\t\t\t\tvar indexOfLastBar = findLastBar(staff.voices[k], snip.start);\n\t\t\t\t\t\t\t\tstaff.voices[k].splice(indexOfLastBar, 0, { el_type: \"stem\", direction: \"up\" });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// remove ending marks from the overlay voice so they are not repeated\n\t\t\t\t\t\t\tfor (kkk = 0; kkk < staff.voices[staff.voices.length-1].length; kkk++) {\n\t\t\t\t\t\t\t\tstaff.voices[staff.voices.length-1][kkk] = parseCommon.clone(staff.voices[staff.voices.length-1][kkk]);\n\t\t\t\t\t\t\t\tvar el = staff.voices[staff.voices.length-1][kkk];\n\t\t\t\t\t\t\t\tif (el.el_type === 'bar' && el.startEnding) {\n\t\t\t\t\t\t\t\t\tdelete el.startEnding;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (el.el_type === 'bar' && el.endEnding)\n\t\t\t\t\t\t\t\t\tdelete el.endEnding;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn madeChanges;\n\t};\n\n\tfunction findLastBar(voice, start) {\n\t\tfor (var i = start-1; i > 0 && voice[i].el_type !== \"bar\"; i--) {\n\n\t\t}\n\t\treturn i;\n\t}\n\tfunction fixTitles(lines) {\n\t\t// We might have name and subname defined. We now know what line everything is on, so we can determine which to use.\n\t\tvar firstMusicLine = true;\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tvar line = lines[i];\n\t\t\tif (line.staff) {\n\t\t\t\tfor (var j = 0; j < line.staff.length; j++) {\n\t\t\t\t\tvar staff = line.staff[j];\n\t\t\t\t\tif (staff.title) {\n\t\t\t\t\t\tvar hasATitle = false;\n\t\t\t\t\t\tfor (var k = 0; k < staff.title.length; k++) {\n\t\t\t\t\t\t\tif (staff.title[k]) {\n\t\t\t\t\t\t\t\tstaff.title[k] = (firstMusicLine) ? staff.title[k].name : staff.title[k].subname;\n\t\t\t\t\t\t\t\tif (staff.title[k])\n\t\t\t\t\t\t\t\t\thasATitle = true;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tstaff.title[k] = '';\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\tstaff.title[k] = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!hasATitle)\n\t\t\t\t\t\t\tdelete staff.title;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfirstMusicLine = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.cleanUp = function(barsperstaff, staffnonote, currSlur) {\n\t\tthis.closeLine();\t// Close the last line.\n\t\tdelete tune.runningFonts;\n\n\t\tsimplifyMetaText(tune)\n\t\t//addRichTextToAnnotationsAndLyrics(tune)\n\n\t\t// If the tempo was created with a string like \"Allegro\", then the duration of a beat needs to be set at the last moment, when it is most likely known.\n\t\tif (tune.metaText.tempo && tune.metaText.tempo.bpm && !tune.metaText.tempo.duration)\n\t\t\ttune.metaText.tempo.duration = [ tune.getBeatLength() ];\n\n\t\t// Remove any blank lines\n\t\tvar anyDeleted = false;\n\t\tvar i, s, v;\n\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff !== undefined) {\n\t\t\t\tvar hasAny = false;\n\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++) {\n\t\t\t\t\tif (tune.lines[i].staff[s] === undefined) {\n\t\t\t\t\t\tanyDeleted = true;\n\t\t\t\t\t\ttune.lines[i].staff[s] = null;\n\t\t\t\t\t\t//tune.lines[i].staff[s] = { voices: []};\t// TODO-PER: There was a part missing in the abc music. How should we recover?\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (v = 0; v < tune.lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tif (tune.lines[i].staff[s].voices[v] === undefined)\n\t\t\t\t\t\t\t\ttune.lines[i].staff[s].voices[v] = [];\t// TODO-PER: There was a part missing in the abc music. How should we recover?\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tif (this.containsNotes(tune.lines[i].staff[s].voices[v])) hasAny = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!hasAny) {\n\t\t\t\t\ttune.lines[i] = null;\n\t\t\t\t\tanyDeleted = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (anyDeleted) {\n\t\t\ttune.lines = tune.lines.filter(function (line) { return !!line });\n\t\t\ttune.lines.forEach(function(line) {\n\t\t\t\tif (line.staff)\n\t\t\t\t\tline.staff = line.staff.filter(function (line) { return !!line });\n\t\t\t});\n\t\t}\n\n\t\t// if we exceeded the number of bars allowed on a line, then force a new line\n\t\tif (barsperstaff) {\n\t\t\twhile (wrapMusicLines(tune.lines, barsperstaff)) {\n\t\t\t\t// This will keep wrapping until the end of the piece.\n\t\t\t}\n\t\t}\n\n\t\t// If we were passed staffnonote, then we want to get rid of all staffs that contain only rests.\n\t\tif (staffnonote) {\n\t\t\tanyDeleted = false;\n\t\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\t\tif (tune.lines[i].staff !== undefined) {\n\t\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++) {\n\t\t\t\t\t\tvar keepThis = false;\n\t\t\t\t\t\tfor (v = 0; v < tune.lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tif (this.containsNotesStrict(tune.lines[i].staff[s].voices[v])) {\n\t\t\t\t\t\t\t\tkeepThis = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!keepThis) {\n\t\t\t\t\t\t\tanyDeleted = true;\n\t\t\t\t\t\t\ttune.lines[i].staff[s] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (anyDeleted) {\n\t\t\t\ttune.lines.forEach(function(line) {\n\t\t\t\t\tif (line.staff)\n\t\t\t\t\t\tline.staff = line.staff.filter(function (staff) { return !!staff });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfixTitles(tune.lines);\n\n\t\t// Remove the temporary working variables\n\t\tfor (i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff) {\n\t\t\t\tfor (s = 0; s < tune.lines[i].staff.length; s++)\n\t\t\t\t\tdelete tune.lines[i].staff[s].workingClef;\n\t\t\t}\n\t\t}\n\n\t\t// If there are overlays, create new voices for them.\n\t\twhile (this.resolveOverlays()) {\n\t\t\t// keep resolving overlays as long as any are found.\n\t\t}\n\n\t\tfunction cleanUpSlursInLine(line, staffNum, voiceNum) {\n\t\t\tif (!currSlur[staffNum])\n\t\t\t\tcurrSlur[staffNum] = [];\n\t\t\tif (!currSlur[staffNum][voiceNum])\n\t\t\t\tcurrSlur[staffNum][voiceNum] = [];\n\t\t\tvar x;\n//\t\t\tvar lyr = null;\t// TODO-PER: debugging.\n\n\t\t\tvar addEndSlur = function(obj, num, chordPos) {\n\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\t\t// There isn't an exact match for note position, but we'll take any other open slur.\n\t\t\t\t\tfor (x = 0; x < currSlur[staffNum][voiceNum].length; x++) {\n\t\t\t\t\t\tif (currSlur[staffNum][voiceNum][x] !== undefined) {\n\t\t\t\t\t\t\tchordPos = x;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\t\t\tvar offNum = chordPos*100+1;\n\t\t\t\t\t\tobj.endSlur.forEach(function(x) { if (offNum === x) --offNum; });\n\t\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos] = [offNum];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar slurNum;\n\t\t\t\tfor (var i = 0; i < num; i++) {\n\t\t\t\t\tslurNum = currSlur[staffNum][voiceNum][chordPos].pop();\n\t\t\t\t\tobj.endSlur.push(slurNum);\n//\t\t\t\t\tlyr.syllable += '<' + slurNum;\t// TODO-PER: debugging\n\t\t\t\t}\n\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos].length === 0)\n\t\t\t\t\tdelete currSlur[staffNum][voiceNum][chordPos];\n\t\t\t\treturn slurNum;\n\t\t\t};\n\n\t\t\tvar addStartSlur = function(obj, num, chordPos, usedNums) {\n\t\t\t\tobj.startSlur = [];\n\t\t\t\tif (currSlur[staffNum][voiceNum][chordPos] === undefined) {\n\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos] = [];\n\t\t\t\t}\n\t\t\t\tvar nextNum = chordPos*100+1;\n\t\t\t\tfor (var i = 0; i < num; i++) {\n\t\t\t\t\tif (usedNums) {\n\t\t\t\t\t\tusedNums.forEach(function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\t\tusedNums.forEach(function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\t\tusedNums.forEach(function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\t}\n\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos].forEach(function(x) { if (nextNum === x) ++nextNum; });\n\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos].forEach(function(x) { if (nextNum === x) ++nextNum; });\n\n\t\t\t\t\tcurrSlur[staffNum][voiceNum][chordPos].push(nextNum);\n\t\t\t\t\tobj.startSlur.push({ label: nextNum });\n\t\t\t\t\tif (obj.dottedSlur) {\n\t\t\t\t\t\tobj.startSlur[obj.startSlur.length-1].style = 'dotted';\n\t\t\t\t\t\tdelete obj.dottedSlur;\n\t\t\t\t\t}\n//\t\t\t\t\tlyr.syllable += ' ' + nextNum + '>';\t// TODO-PER:debugging\n\t\t\t\t\tnextNum++;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var i = 0; i < line.length; i++) {\n\t\t\t\tvar el = line[i];\n//\t\t\t\tif (el.lyric === undefined)\t// TODO-PER: debugging\n//\t\t\t\t\tel.lyric = [{ divider: '-' }];\t// TODO-PER: debugging\n//\t\t\t\tlyr = el.lyric[0];\t// TODO-PER: debugging\n//\t\t\t\tlyr.syllable = '';\t// TODO-PER: debugging\n\t\t\t\tif (el.el_type === 'note') {\n\t\t\t\t\tif (el.gracenotes) {\n\t\t\t\t\t\tfor (var g = 0; g < el.gracenotes.length; g++) {\n\t\t\t\t\t\t\tif (el.gracenotes[g].endSlur) {\n\t\t\t\t\t\t\t\tvar gg = el.gracenotes[g].endSlur;\n\t\t\t\t\t\t\t\tel.gracenotes[g].endSlur = [];\n\t\t\t\t\t\t\t\tfor (var ggg = 0; ggg < gg; ggg++)\n\t\t\t\t\t\t\t\t\taddEndSlur(el.gracenotes[g], 1, 20);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (el.gracenotes[g].startSlur) {\n\t\t\t\t\t\t\t\tx = el.gracenotes[g].startSlur;\n\t\t\t\t\t\t\t\taddStartSlur(el.gracenotes[g], x, 20);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (el.endSlur) {\n\t\t\t\t\t\tx = el.endSlur;\n\t\t\t\t\t\tel.endSlur = [];\n\t\t\t\t\t\taddEndSlur(el, x, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (el.startSlur) {\n\t\t\t\t\t\tx = el.startSlur;\n\t\t\t\t\t\taddStartSlur(el, x, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (el.pitches) {\n\t\t\t\t\t\tvar usedNums = [];\n\t\t\t\t\t\tfor (var p = 0; p < el.pitches.length; p++) {\n\t\t\t\t\t\t\tif (el.pitches[p].endSlur) {\n\t\t\t\t\t\t\t\tvar k = el.pitches[p].endSlur;\n\t\t\t\t\t\t\t\tel.pitches[p].endSlur = [];\n\t\t\t\t\t\t\t\tfor (var j = 0; j < k; j++) {\n\t\t\t\t\t\t\t\t\tvar slurNum = addEndSlur(el.pitches[p], 1, p+1);\n\t\t\t\t\t\t\t\t\tusedNums.push(slurNum);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (p = 0; p < el.pitches.length; p++) {\n\t\t\t\t\t\t\tif (el.pitches[p].startSlur) {\n\t\t\t\t\t\t\t\tx = el.pitches[p].startSlur;\n\t\t\t\t\t\t\t\taddStartSlur(el.pitches[p], x, p+1, usedNums);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Correct for the weird gracenote case where ({g}a) should match.\n\t\t\t\t\t\t// The end slur was already assigned to the note, and needs to be moved to the first note of the graces.\n\t\t\t\t\t\tif (el.gracenotes && el.pitches[0].endSlur && el.pitches[0].endSlur[0] === 100 && el.pitches[0].startSlur) {\n\t\t\t\t\t\t\tif (el.gracenotes[0].endSlur)\n\t\t\t\t\t\t\t\tel.gracenotes[0].endSlur.push(el.pitches[0].startSlur[0].label);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tel.gracenotes[0].endSlur = [el.pitches[0].startSlur[0].label];\n\t\t\t\t\t\t\tif (el.pitches[0].endSlur.length === 1)\n\t\t\t\t\t\t\t\tdelete el.pitches[0].endSlur;\n\t\t\t\t\t\t\telse if (el.pitches[0].endSlur[0] === 100)\n\t\t\t\t\t\t\t\tel.pitches[0].endSlur.shift();\n\t\t\t\t\t\t\telse if (el.pitches[0].endSlur[el.pitches[0].endSlur.length-1] === 100)\n\t\t\t\t\t\t\t\tel.pitches[0].endSlur.pop();\n\t\t\t\t\t\t\tif (currSlur[staffNum][voiceNum][1].length === 1)\n\t\t\t\t\t\t\t\tdelete currSlur[staffNum][voiceNum][1];\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tcurrSlur[staffNum][voiceNum][1].pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO-PER: This could be done faster as we go instead of as the last step.\n\t\tfunction fixClefPlacement(el) {\n\t\t\tparseKeyVoice.fixClef(el);\n\t\t}\n\n\t\tfunction wrapMusicLines(lines, barsperstaff) {\n\t\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\t\tif (lines[i].staff !== undefined) {\n\t\t\t\t\tfor (s = 0; s < lines[i].staff.length; s++) {\n\t\t\t\t\t\tvar permanentItems = [];\n\t\t\t\t\t\tfor (v = 0; v < lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\t\t\tvar voice = lines[i].staff[s].voices[v];\n\t\t\t\t\t\t\tvar barNumThisLine = 0;\n\t\t\t\t\t\t\tfor (var n = 0; n < voice.length; n++) {\n\t\t\t\t\t\t\t\tif (voice[n].el_type === 'bar') {\n\t\t\t\t\t\t\t\t\tbarNumThisLine++;\n\t\t\t\t\t\t\t\t\tif (barNumThisLine >= barsperstaff) {\n\t\t\t\t\t\t\t\t\t\t// push everything else to the next line, if there is anything else,\n\t\t\t\t\t\t\t\t\t\t// and there is a next line. If there isn't a next line, create one.\n\t\t\t\t\t\t\t\t\t\tif (n < voice.length - 1) {\n\t\t\t\t\t\t\t\t\t\t\tvar nextLine = getNextMusicLine(lines, i);\n\t\t\t\t\t\t\t\t\t\t\tif (!nextLine) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar cp = JSON.parse(JSON.stringify(lines[i]));\n\t\t\t\t\t\t\t\t\t\t\t\tlines.push(parseCommon.clone(cp));\n\t\t\t\t\t\t\t\t\t\t\t\tnextLine = lines[lines.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\tfor (var ss = 0; ss < nextLine.staff.length; ss++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var vv = 0; vv < nextLine.staff[ss].voices.length; vv++)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextLine.staff[ss].voices[vv] = [];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tvar startElement = n + 1;\n\t\t\t\t\t\t\t\t\t\t\tvar section = lines[i].staff[s].voices[v].slice(startElement);\n\t\t\t\t\t\t\t\t\t\t\tlines[i].staff[s].voices[v] = lines[i].staff[s].voices[v].slice(0, startElement);\n\t\t\t\t\t\t\t\t\t\t\tnextLine.staff[s].voices[v] = permanentItems.concat(section.concat(nextLine.staff[s].voices[v]));\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (!voice[n].duration) {\n\t\t\t\t\t\t\t\t\tpermanentItems.push(voice[n]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getNextMusicLine(lines, currentLine) {\n\t\t\tcurrentLine++;\n\t\t\twhile (lines.length > currentLine) {\n\t\t\t\tif (lines[currentLine].staff)\n\t\t\t\t\treturn lines[currentLine];\n\t\t\t\tcurrentLine++;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (tune.lineNum = 0; tune.lineNum < tune.lines.length; tune.lineNum++) {\n\t\t\tvar staff = tune.lines[tune.lineNum].staff;\n\t\t\tif (staff) {\n\t\t\t\tfor (tune.staffNum = 0; tune.staffNum < staff.length; tune.staffNum++) {\n\t\t\t\t\tif (staff[tune.staffNum].clef)\n\t\t\t\t\t\tfixClefPlacement(staff[tune.staffNum].clef);\n\t\t\t\t\tfor (tune.voiceNum = 0; tune.voiceNum < staff[tune.staffNum].voices.length; tune.voiceNum++) {\n\t\t\t\t\t\tvar voice = staff[tune.staffNum].voices[tune.voiceNum];\n\t\t\t\t\t\tcleanUpSlursInLine(voice, tune.staffNum, tune.voiceNum);\n\t\t\t\t\t\tfor (var j = 0; j < voice.length; j++) {\n\t\t\t\t\t\t\tif (voice[j].el_type === 'clef')\n\t\t\t\t\t\t\t\tfixClefPlacement(voice[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (voice.length > 0 && voice[voice.length-1].barNumber) {\n\t\t\t\t\t\t\t// Don't hang a bar number on the last bar line: it should go on the next line.\n\t\t\t\t\t\t\tvar nextLine = getNextMusicLine(tune.lines, tune.lineNum);\n\t\t\t\t\t\t\tif (nextLine)\n\t\t\t\t\t\t\t\tnextLine.staff[0].barNumber = voice[voice.length-1].barNumber;\n\t\t\t\t\t\t\tdelete voice[voice.length-1].barNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove temporary variables that the outside doesn't need to know about\n\t\tdelete tune.staffNum;\n\t\tdelete tune.voiceNum;\n\t\tdelete tune.lineNum;\n\t\tdelete tune.potentialStartBeam;\n\t\tdelete tune.potentialEndBeam;\n\t\tdelete tune.vskipPending;\n\n\t\treturn currSlur;\n\t};\n\n\ttune.reset();\n\n\tthis.getLastNote = function() {\n\t\tif (tune.lines[tune.lineNum] && tune.lines[tune.lineNum].staff && tune.lines[tune.lineNum].staff[tune.staffNum] &&\n\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum]) {\n\t\t\tfor (var i = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum].length-1; i >= 0; i--) {\n\t\t\t\tvar el = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum][i];\n\t\t\t\tif (el.el_type === 'note') {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tthis.addTieToLastNote = function(dottedTie) {\n\t\t// TODO-PER: if this is a chord, which note?\n\t\tvar el = this.getLastNote();\n\t\tif (el && el.pitches && el.pitches.length > 0) {\n\t\t\tel.pitches[0].startTie = {};\n\t\t\tif (dottedTie)\n\t\t\t\tel.pitches[0].startTie.style = 'dotted';\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.getDuration = function(el) {\n\t\tif (el.duration) return el.duration;\n\t\t//if (el.pitches && el.pitches.length > 0) return el.pitches[0].duration;\n\t\treturn 0;\n\t};\n\n\tthis.closeLine = function() {\n\t\tif (tune.potentialStartBeam && tune.potentialEndBeam) {\n\t\t\ttune.potentialStartBeam.startBeam = true;\n\t\t\ttune.potentialEndBeam.endBeam = true;\n\t\t}\n\t\tdelete tune.potentialStartBeam;\n\t\tdelete tune.potentialEndBeam;\n\t};\n\n\tthis.appendElement = function(type, startChar, endChar, hashParams)\n\t{\n\t\tvar This = tune;\n\t\tvar pushNote = function(hp) {\n\t\t\tvar currStaff = This.lines[This.lineNum].staff[This.staffNum];\n\t\t\tif (!currStaff) {\n\t\t\t\t// TODO-PER: This prevents a crash, but it drops the element. Need to figure out how to start a new line, or delay adding this.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (hp.pitches !== undefined) {\n\t\t\t\tvar mid = currStaff.workingClef.verticalPos;\n\t\t\t\thp.pitches.forEach(function(p) { p.verticalPos = p.pitch - mid; });\n\t\t\t}\n\t\t\tif (hp.gracenotes !== undefined) {\n\t\t\t\tvar mid2 = currStaff.workingClef.verticalPos;\n\t\t\t\thp.gracenotes.forEach(function(p) { p.verticalPos = p.pitch - mid2; });\n\t\t\t}\n\t\t\tcurrStaff.voices[This.voiceNum].push(hp);\n\t\t};\n\t\thashParams.el_type = type;\n\t\tif (startChar !== null)\n\t\t\thashParams.startChar = startChar;\n\t\tif (endChar !== null)\n\t\t\thashParams.endChar = endChar;\n\t\tvar endBeamHere = function() {\n\t\t\tThis.potentialStartBeam.startBeam = true;\n\t\t\thashParams.endBeam = true;\n\t\t\tdelete This.potentialStartBeam;\n\t\t\tdelete This.potentialEndBeam;\n\t\t};\n\t\tvar endBeamLast = function() {\n\t\t\tif (This.potentialStartBeam !== undefined && This.potentialEndBeam !== undefined) {\t// Do we have a set of notes to beam?\n\t\t\t\tThis.potentialStartBeam.startBeam = true;\n\t\t\t\tThis.potentialEndBeam.endBeam = true;\n\t\t\t}\n\t\t\tdelete This.potentialStartBeam;\n\t\t\tdelete This.potentialEndBeam;\n\t\t};\n\t\tif (type === 'note') { // && (hashParams.rest !== undefined || hashParams.end_beam === undefined)) {\n\t\t\t// Now, add the startBeam and endBeam where it is needed.\n\t\t\t// end_beam is already set on the places where there is a forced end_beam. We'll remove that here after using that info.\n\t\t\t// this.potentialStartBeam either points to null or the start beam.\n\t\t\t// this.potentialEndBeam either points to null or the start beam.\n\t\t\t// If we have a beam break (note is longer than a quarter, or an end_beam is on this element), then set the beam if we have one.\n\t\t\t// reset the variables for the next notes.\n\t\t\tvar dur = self.getDuration(hashParams);\n\t\t\tif (dur >= 0.25) {\t// The beam ends on the note before this.\n\t\t\t\tendBeamLast();\n\t\t\t} else if (hashParams.force_end_beam_last && This.potentialStartBeam !== undefined) {\n\t\t\t\tendBeamLast();\n\t\t\t} else if (hashParams.end_beam && This.potentialStartBeam !== undefined) {\t// the beam is forced to end on this note, probably because of a space in the ABC\n\t\t\t\tif (hashParams.rest === undefined)\n\t\t\t\t\tendBeamHere();\n\t\t\t\telse\n\t\t\t\t\tendBeamLast();\n\t\t\t} else if (hashParams.rest === undefined) {\t// this a short note and we aren't about to end the beam\n\t\t\t\tif (This.potentialStartBeam === undefined) {\t// We aren't collecting notes for a beam, so start here.\n\t\t\t\t\tif (!hashParams.end_beam) {\n\t\t\t\t\t\tThis.potentialStartBeam = hashParams;\n\t\t\t\t\t\tdelete This.potentialEndBeam;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tThis.potentialEndBeam = hashParams;\t// Continue the beaming, look for the end next note.\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//  end_beam goes on rests and notes which precede rests _except_ when a rest (or set of adjacent rests) has normal notes on both sides (no spaces)\n//\t\t\tif (hashParams.rest !== undefined)\n//\t\t\t{\n//\t\t\t\thashParams.end_beam = true;\n//\t\t\t\tvar el2 = this.getLastNote();\n//\t\t\t\tif (el2) el2.end_beam = true;\n//\t\t\t\t// TODO-PER: implement exception mentioned in the comment.\n//\t\t\t}\n\t\t} else {\t// It's not a note, so there definitely isn't beaming after it.\n\t\t\tendBeamLast();\n\t\t}\n\t\tdelete hashParams.end_beam;\t// We don't want this temporary variable hanging around.\n\t\tdelete hashParams.force_end_beam_last;\t// We don't want this temporary variable hanging around.\n\t\tpushNote(hashParams);\n\t};\n\n\tthis.appendStartingElement = function(type, startChar, endChar, hashParams2)\n\t{\n\t\t// If we're in the middle of beaming, then end the beam.\n\t\tthis.closeLine();\n\n\t\t// We only ever want implied naturals the first time.\n\t\tvar impliedNaturals;\n\t\tif (type === 'key') {\n\t\t\timpliedNaturals = hashParams2.impliedNaturals;\n\t\t\tdelete hashParams2.impliedNaturals;\n\t\t\tdelete hashParams2.explicitAccidentals;\n\t\t}\n\n\t\t// Clone the object because it will be sticking around for the next line and we don't want the extra fields in it.\n\t\tvar hashParams = parseCommon.clone(hashParams2);\n\n\t\tif (tune.lines[tune.lineNum] && tune.lines[tune.lineNum].staff) { // be sure that we are on a music type line before doing the following.\n\t\t\t// If tune is the first item in tune staff, then we might have to initialize the staff, first.\n\t\t\tif (tune.lines[tune.lineNum].staff.length <= tune.staffNum) {\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum] = {};\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].clef = parseCommon.clone(tune.lines[tune.lineNum].staff[0].clef);\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].key = parseCommon.clone(tune.lines[tune.lineNum].staff[0].key);\n\t\t\t\tif (tune.lines[tune.lineNum].staff[0].meter)\n\t\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].meter = parseCommon.clone(tune.lines[tune.lineNum].staff[0].meter);\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].workingClef = parseCommon.clone(tune.lines[tune.lineNum].staff[0].workingClef);\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].voices = [[]];\n\t\t\t}\n\t\t\t// If tune is a clef type, then we replace the working clef on the line. This is kept separate from\n\t\t\t// the clef in case there is an inline clef field. We need to know what the current position for\n\t\t\t// the note is.\n\t\t\tif (type === 'clef') {\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum].workingClef = hashParams;\n\t\t\t}\n\n\t\t\t// These elements should not be added twice, so if the element exists on tune line without a note or bar before it, just replace the staff version.\n\t\t\tvar voice = tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum];\n\t\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\t\tif (voice[i].el_type === 'note' || voice[i].el_type === 'bar') {\n\t\t\t\t\thashParams.el_type = type;\n\t\t\t\t\thashParams.startChar = startChar;\n\t\t\t\t\thashParams.endChar = endChar;\n\t\t\t\t\tif (impliedNaturals)\n\t\t\t\t\t\thashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n\t\t\t\t\tvoice.push(hashParams);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (voice[i].el_type === type) {\n\t\t\t\t\thashParams.el_type = type;\n\t\t\t\t\thashParams.startChar = startChar;\n\t\t\t\t\thashParams.endChar = endChar;\n\t\t\t\t\tif (impliedNaturals)\n\t\t\t\t\t\thashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n\t\t\t\t\tvoice[i] = hashParams;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// We didn't see either that type or a note, so replace the element to the staff.\n\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum][type] = hashParams2;\n\t\t}\n\t};\n\n\tthis.pushLine = function(hash) {\n\t\tif (tune.vskipPending) {\n\t\t\thash.vskip = tune.vskipPending;\n\t\t\tdelete tune.vskipPending;\n\t\t}\n\t\ttune.lines.push(hash);\n\t};\n\n\tthis.addSubtitle = function(str, info) {\n\t\tthis.pushLine({subtitle: { text: str, startChar: info.startChar, endChar: info.endChar}});\n\t};\n\n\tthis.addSpacing = function(num) {\n\t\ttune.vskipPending = num;\n\t};\n\n\tthis.addNewPage = function(num) {\n\t\tthis.pushLine({newpage: num});\n\t};\n\n\tthis.addSeparator = function(spaceAbove, spaceBelow, lineLength, info) {\n\t\tthis.pushLine({separator: {spaceAbove: Math.round(spaceAbove), spaceBelow: Math.round(spaceBelow), lineLength: Math.round(lineLength), startChar: info.startChar, endChar: info.endChar}});\n\t};\n\n\tthis.addText = function(str, info) {\n\t\tthis.pushLine({text: { text: str, startChar: info.startChar, endChar: info.endChar}});\n\t};\n\n\tthis.addCentered = function(str) {\n\t\tthis.pushLine({text: [{text: str, center: true }]});\n\t};\n\n\tthis.containsNotes = function(voice) {\n\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\tif (voice[i].el_type === 'note' || voice[i].el_type === 'bar')\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.containsNotesStrict = function(voice) {\n\t\tfor (var i = 0; i < voice.length; i++) {\n\t\t\tif (voice[i].el_type === 'note' && (voice[i].rest === undefined || voice[i].chord !== undefined))\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t//\tanyVoiceContainsNotes: function(line) {\n//\t\tfor (var i = 0; i < line.staff.voices.length; i++) {\n//\t\t\tif (this.containsNotes(line.staff.voices[i]))\n//\t\t\t\treturn true;\n//\t\t}\n//\t\treturn false;\n//\t},\n\tthis.changeVoiceScale = function(scale) {\n\t\tself.appendElement('scale', null, null, { size: scale} );\n\t};\n\tthis.changeVoiceColor = function(color) {\n\t\tself.appendElement('color', null, null, { color: color} );\n\t};\n\n\tthis.startNewLine = function(params) {\n\t\t// If the pointed to line doesn't exist, just create that. If the line does exist, but doesn't have any music on it, just use it.\n\t\t// If it does exist and has music, then increment the line number. If the new element doesn't exist, create it.\n\t\tvar This = tune;\n\t\tthis.closeLine();\t// Close the previous line.\n\t\tvar createVoice = function(params) {\n\t\t\tvar thisStaff = This.lines[This.lineNum].staff[This.staffNum];\n\t\t\tthisStaff.voices[This.voiceNum] = [];\n\t\t\tif (!thisStaff.title)\n\t\t\t\tthisStaff.title = [];\n\t\t\tthisStaff.title[This.voiceNum] = { name: params.name, subname: params.subname };\n\t\t\tif (params.style)\n\t\t\t\tself.appendElement('style', null, null, {head: params.style});\n\t\t\tif (params.stem)\n\t\t\t\tself.appendElement('stem', null, null, {direction: params.stem});\n\t\t\telse if (This.voiceNum > 0) {\n\t\t\t\tif (thisStaff.voices[0]!== undefined) {\n\t\t\t\t\tvar found = false;\n\t\t\t\t\tfor (var i = 0; i < thisStaff.voices[0].length; i++) {\n\t\t\t\t\t\tif (thisStaff.voices[0].el_type === 'stem')\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\tvar stem = { el_type: 'stem', direction: 'up' };\n\t\t\t\t\t\tthisStaff.voices[0].splice(0,0,stem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself.appendElement('stem', null, null, {direction: 'down'});\n\t\t\t}\n\t\t\tif (params.scale)\n\t\t\t\tself.appendElement('scale', null, null, { size: params.scale} );\n\t\t\tif (params.color)\n\t\t\t\tself.appendElement('color', null, null, { color: params.color} );\n\t\t};\n\t\tvar createStaff = function(params) {\n\t\t\tif (params.key && params.key.impliedNaturals) {\n\t\t\t\tparams.key.accidentals = params.key.accidentals.concat(params.key.impliedNaturals);\n\t\t\t\tdelete params.key.impliedNaturals;\n\t\t\t}\n\n\t\t\tThis.lines[This.lineNum].staff[This.staffNum] = {voices: [ ], clef: params.clef, key: params.key, workingClef: params.clef };\n\t\t\tif (params.stafflines !== undefined) {\n\t\t\t\tThis.lines[This.lineNum].staff[This.staffNum].clef.stafflines = params.stafflines;\n\t\t\t\tThis.lines[This.lineNum].staff[This.staffNum].workingClef.stafflines = params.stafflines;\n\t\t\t}\n\t\t\tif (params.staffscale) {\n\t\t\t\tThis.lines[This.lineNum].staff[This.staffNum].staffscale = params.staffscale;\n\t\t\t}\n\t\t\tif (params.annotationfont) self.setLineFont(\"annotationfont\", params.annotationfont);\n\t\t\tif (params.gchordfont) self.setLineFont(\"gchordfont\", params.gchordfont);\n\t\t\tif (params.tripletfont) self.setLineFont(\"tripletfont\", params.tripletfont);\n\t\t\tif (params.vocalfont) self.setLineFont(\"vocalfont\", params.vocalfont);\n\t\t\tif (params.bracket) This.lines[This.lineNum].staff[This.staffNum].bracket = params.bracket;\n\t\t\tif (params.brace) This.lines[This.lineNum].staff[This.staffNum].brace = params.brace;\n\t\t\tif (params.connectBarLines) This.lines[This.lineNum].staff[This.staffNum].connectBarLines = params.connectBarLines;\n\t\t\tif (params.barNumber) This.lines[This.lineNum].staff[This.staffNum].barNumber = params.barNumber;\n\t\t\tcreateVoice(params);\n\t\t\t// Some stuff just happens for the first voice\n\t\t\tif (params.part)\n\t\t\t\tself.appendElement('part', params.part.startChar, params.part.endChar, {title: params.part.title});\n\t\t\tif (params.meter !== undefined) This.lines[This.lineNum].staff[This.staffNum].meter = params.meter;\n\t\t\tif (This.vskipPending) {\n\t\t\t\tThis.lines[This.lineNum].vskip = This.vskipPending;\n\t\t\t\tdelete This.vskipPending;\n\t\t\t}\n\t\t};\n\t\tvar createLine = function(params) {\n\t\t\tThis.lines[This.lineNum] = {staff: []};\n\t\t\tcreateStaff(params);\n\t\t};\n\t\tif (tune.lines[tune.lineNum] === undefined) createLine(params);\n\t\telse if (tune.lines[tune.lineNum].staff === undefined) {\n\t\t\ttune.lineNum++;\n\t\t\tthis.startNewLine(params);\n\t\t} else if (tune.lines[tune.lineNum].staff[tune.staffNum] === undefined) createStaff(params);\n\t\telse if (tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum] === undefined) createVoice(params);\n\t\telse if (!this.containsNotes(tune.lines[tune.lineNum].staff[tune.staffNum].voices[tune.voiceNum])) {\n\t\t\t// We don't need a new line but we might need to update parts of it.\n\t\t\tif (params.part)\n\t\t\t\tself.appendElement('part', params.part.startChar, params.part.endChar, {title: params.part.title});\n\t\t} else {\n\t\t\ttune.lineNum++;\n\t\t\tthis.startNewLine(params);\n\t\t}\n\t};\n\n\tthis.setRunningFont = function(type, font) {\n\t\t// This is called at tune start to set the current default fonts so we know whether to record a change.\n\t\ttune.runningFonts[type] = font;\n\t};\n\n\tthis.setLineFont = function(type, font) {\n\t\t// If we haven't encountered the font type yet then we are using the default font so it doesn't\n\t\t// need to be noted. If we have encountered it, then only record it if it is different from the last time.\n\t\tif (tune.runningFonts[type]) {\n\t\t\tvar isDifferent = false;\n\t\t\tvar keys = Object.keys(font);\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tif (tune.runningFonts[type][keys[i]] !== font[keys[i]])\n\t\t\t\t\tisDifferent = true;\n\t\t\t}\n\t\t\tif (isDifferent) {\n\t\t\t\ttune.lines[tune.lineNum].staff[tune.staffNum][type] = font;\n\t\t\t}\n\t\t}\n\t\ttune.runningFonts[type] = font;\n\t}\n\n\tthis.setBarNumberImmediate = function(barNumber) {\n\t\t// If tune is called right at the beginning of a line, then correct the measure number that is already written.\n\t\t// If tune is called at the beginning of a measure, then correct the measure number that was just created.\n\t\t// If tune is called in the middle of a measure, then subtract one from it, because it will be incremented before applied.\n\t\tvar currentVoice = this.getCurrentVoice();\n\t\tif (currentVoice && currentVoice.length > 0) {\n\t\t\tvar lastElement = currentVoice[currentVoice.length-1];\n\t\t\tif (lastElement.el_type === 'bar') {\n\t\t\t\tif (lastElement.barNumber !== undefined) // the measure number might not be written for tune bar, don't override that.\n\t\t\t\t\tlastElement.barNumber = barNumber;\n\t\t\t} else\n\t\t\t\treturn barNumber-1;\n\t\t}\n\t\treturn barNumber;\n\t};\n\n\tthis.hasBeginMusic = function() {\n\t\t// return true if there exists at least one line that contains \"staff\"\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tthis.isFirstLine = function(index) {\n\t\tfor (var i = index-1; i >= 0; i--) {\n\t\t\tif (tune.lines[i].staff !== undefined) return false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tthis.getCurrentVoice = function() {\n\t\tvar currLine = tune.lines[tune.lineNum];\n\t\tif (!currLine)\n\t\t\treturn null;\n\t\tvar currStaff = currLine.staff[tune.staffNum];\n\t\tif (!currStaff)\n\t\t\treturn null;\n\t\tif (currStaff.voices[tune.voiceNum] !== undefined)\n\t\t\treturn currStaff.voices[tune.voiceNum];\n\t\telse return null;\n\t};\n\n\tthis.setCurrentVoice = function(staffNum, voiceNum) {\n\t\ttune.staffNum = staffNum;\n\t\ttune.voiceNum = voiceNum;\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tif (tune.lines[i].staff) {\n\t\t\t\tif (tune.lines[i].staff[staffNum] === undefined || tune.lines[i].staff[staffNum].voices[voiceNum] === undefined ||\n\t\t\t\t\t!this.containsNotes(tune.lines[i].staff[staffNum].voices[voiceNum] )) {\n\t\t\t\t\ttune.lineNum =  i;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttune.lineNum =  i;\n\t};\n\n\tthis.addMetaText = function(key, value, info) {\n\t\tif (tune.metaText[key] === undefined) {\n\t\t\ttune.metaText[key] = value;\n\t\t\ttune.metaTextInfo[key] = info;\n\t\t} else {\n\t\t\tif (typeof tune.metaText[key] === 'string' && typeof value === 'string')\n\t\t\t\ttune.metaText[key] += \"\\n\" + value;\n\t\t\telse {\n\t\t\t\tif (tune.metaText[key] === 'string')\n\t\t\t\t\ttune.metaText[key] = [{text: tune.metaText[key]}]\n\t\t\t\tif (typeof value === 'string')\n\t\t\t\t\tvalue = [{text: value}]\n\t\t\t\ttune.metaText[key] =tune.metaText[key].concat(value)\n\t\t\t}\n\t\t\ttune.metaTextInfo[key].endChar = info.endChar;\n\t\t}\n\t};\n\n\tthis.addMetaTextArray = function(key, value, info) {\n\t\tif (tune.metaText[key] === undefined) {\n\t\t\ttune.metaText[key] = [value];\n\t\t\ttune.metaTextInfo[key] = info;\n\t\t} else {\n\t\t\ttune.metaText[key].push(value);\n\t\t\ttune.metaTextInfo[key].endChar = info.endChar;\n\t\t}\n\t};\n\tthis.addMetaTextObj = function(key, value, info) {\n\t\ttune.metaText[key] = value;\n\t\ttune.metaTextInfo[key] = info;\n\t};\n};\n\nfunction isArrayOfStrings(arr) {\n\tif (!arr) return false\n\tif (typeof arr === \"string\") return false\n\tvar str = ''\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (typeof arr[i] !== 'string')\n\t\t\treturn false\n\t}\n\treturn true\n}\n\nfunction simplifyMetaText(tune) {\n\tif (isArrayOfStrings(tune.metaText.notes))\n\t\ttune.metaText.notes = tune.metaText.notes.join(\"\\n\")\n\tif (isArrayOfStrings(tune.metaText.history))\n\t\ttune.metaText.history = tune.metaText.history.join(\"\\n\")\n}\n\nfunction addRichTextToAnnotationsAndLyrics(tune) {\n\tvar lines = tune.lines\n\tfor (var i = 0; i < lines.length; i++) {\n\t\tif (lines[i].staff !== undefined) {\n\t\t\tfor (var s = 0; s < lines[i].staff.length; s++) {\n\t\t\t\tfor (var v = 0; v < lines[i].staff[s].voices.length; v++) {\n\t\t\t\t\tvar voice = lines[i].staff[s].voices[v];\n\t\t\t\t\tfor (var n = 0; n < voice.length; n++) {\n\t\t\t\t\t\tvar element = voice[n]\n\t\t\t\t\t\tif (element.chord) {\n\t\t\t\t\t\t\tfor (var c = 0; c < element.chord.length; c++) {\n\t\t\t\t\t\t\t\telement.chord[c].name = parseDirective.parseFontChangeLine(element.chord[c].name)\n\t\t\t\t\t\t\t\tconsole.log(element.chord[c].name)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (element.lyric) {\n\t\t\t\t\t\t\tfor (var l = 0; l < element.lyric.length; l++) {\n\t\t\t\t\t\t\t\telement.lyric[l].syllable = parseDirective.parseFontChangeLine(element.lyric[l].syllable)\n\t\t\t\t\t\t\t\tconsole.log(element.lyric[l].syllable)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport default TuneBuilder;\n", "//    abc_parse.js: parses a string representing ABC Music Notation into a usable internal structure.\n\nimport parseCommon    from './abc_common.js';\nimport parseDirective from './abc_parse_directive.js';\nimport ParseHeader    from './abc_parse_header.js';\nimport ParseMusic     from './abc_parse_music.js';\nimport Tokenizer      from './abc_tokenizer.js';\nimport wrap           from './wrap_lines.js';\n\nimport Tune           from '../data/abc_tune.js';\nimport TuneBuilder    from '../parse/tune-builder.js';\n\nexport default function() {\n\t\"use strict\";\n\tvar tune = new Tune();\n\tvar tuneBuilder = new TuneBuilder(tune);\n\tvar tokenizer;\n\tvar wordsContinuation = '';\n\tvar symbolContinuation = '';\n\n\tthis.getTune = function() {\n\t\tvar t = {\n\t\t\tformatting: tune.formatting,\n\t\t\tlines: tune.lines,\n\t\t\tmedia: tune.media,\n\t\t\tmetaText: tune.metaText,\n\t\t\tmetaTextInfo: tune.metaTextInfo,\n\t\t\tversion: tune.version,\n\n\t\t\taddElementToEvents: tune.addElementToEvents,\n\t\t\taddUsefulCallbackInfo: tune.addUsefulCallbackInfo,\n\t\t\tgetTotalTime: tune.getTotalTime,\n\t\t\tgetTotalBeats: tune.getTotalBeats,\n\t\t\tgetBarLength: tune.getBarLength,\n\t\t\tgetBeatLength: tune.getBeatLength,\n\t\t\tgetBeatsPerMeasure: tune.getBeatsPerMeasure,\n\t\t\tgetBpm: tune.getBpm,\n\t\t\tgetMeter: tune.getMeter,\n\t\t\tgetMeterFraction: tune.getMeterFraction,\n\t\t\tgetPickupLength: tune.getPickupLength,\n\t\t\tgetKeySignature: tune.getKeySignature,\n\t\t\tgetElementFromChar: tune.getElementFromChar,\n\t\t\tmakeVoicesArray: tune.makeVoicesArray,\n\t\t\tmillisecondsPerMeasure: tune.millisecondsPerMeasure,\n\t\t\tsetupEvents: tune.setupEvents,\n\t\t\tsetTiming: tune.setTiming,\n\t\t\tsetUpAudio: tune.setUpAudio,\n\t\t\tdeline: tune.deline,\n\t\t};\n\t\tif (tune.lineBreaks)\n\t\t\tt.lineBreaks = tune.lineBreaks;\n\t\tif (tune.visualTranspose)\n\t\t\tt.visualTranspose = tune.visualTranspose;\n\t\treturn t;\n\t};\n\n\tfunction addPositioning(el, type, value) {\n\t\tif (!el.positioning) el.positioning = {};\n\t\tel.positioning[type] = value;\n\t}\n\n\tfunction addFont(el, type, value) {\n\t\tif (!el.fonts) el.fonts = {};\n\t\tel.fonts[type] = value;\n\t}\n\n\tvar multilineVars = {\n\t\treset: function() {\n\t\t\tfor (var property in this) {\n\t\t\t\tif (this.hasOwnProperty(property) && typeof this[property] !== \"function\") {\n\t\t\t\t\tdelete this[property];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.iChar = 0;\n\t\t\tthis.key = {accidentals: [], root: 'none', acc: '', mode: '' };\n\t\t\tthis.meter = null; // if no meter is specified, free meter is assumed\n\t\t\tthis.origMeter = null;\t// this is for new voices that are created after we set the meter.\n\t\t\tthis.hasMainTitle = false;\n\t\t\tthis.default_length = 0.125;\n\t\t\tthis.clef = { type: 'treble', verticalPos: 0 };\n\t\t\tthis.octave = 0;\n\t\t\tthis.next_note_duration = 0;\n\t\t\tthis.start_new_line = true;\n\t\t\tthis.is_in_header = true;\n\t\t\tthis.partForNextLine = {};\n\t\t\tthis.tempoForNextLine = [];\n\t\t\tthis.havent_set_length = true;\n\t\t\tthis.voices = {};\n\t\t\tthis.staves = [];\n\t\t\tthis.macros = {};\n\t\t\tthis.currBarNumber = 1;\n\t\t\tthis.barCounter = {};\n\t\t\tthis.ignoredDecorations = [];\n\t\t\tthis.score_is_present = false;\t// Can't have original V: lines when there is the score directive\n\t\t\tthis.inEnding = false;\n\t\t\tthis.inTie = [];\n\t\t\tthis.inTieChord = {};\n\t\t\tthis.vocalPosition = \"auto\";\n\t\t\tthis.dynamicPosition = \"auto\";\n\t\t\tthis.chordPosition = \"auto\";\n\t\t\tthis.ornamentPosition = \"auto\";\n\t\t\tthis.volumePosition = \"auto\";\n\t\t\tthis.openSlurs = [];\n\t\t\tthis.freegchord = false;\n\t\t\tthis.endingHoldOver = {};\n\t\t},\n\t\tdifferentFont: function(type, defaultFonts) {\n\t\t\tif (this[type].decoration !== defaultFonts[type].decoration) return true;\n\t\t\tif (this[type].face !== defaultFonts[type].face) return true;\n\t\t\tif (this[type].size !== defaultFonts[type].size) return true;\n\t\t\tif (this[type].style !== defaultFonts[type].style) return true;\n\t\t\tif (this[type].weight !== defaultFonts[type].weight) return true;\n\t\t\treturn false;\n\t\t},\n\t\taddFormattingOptions: function(el, defaultFonts, elType) {\n\t\t\tif (elType === 'note') {\n\t\t\t\tif (this.vocalPosition !== 'auto') addPositioning(el, 'vocalPosition', this.vocalPosition);\n\t\t\t\tif (this.dynamicPosition !== 'auto') addPositioning(el, 'dynamicPosition', this.dynamicPosition);\n\t\t\t\tif (this.chordPosition !== 'auto') addPositioning(el, 'chordPosition', this.chordPosition);\n\t\t\t\tif (this.ornamentPosition !== 'auto') addPositioning(el, 'ornamentPosition', this.ornamentPosition);\n\t\t\t\tif (this.volumePosition !== 'auto') addPositioning(el, 'volumePosition', this.volumePosition);\n\t\t\t\tif (this.differentFont(\"annotationfont\", defaultFonts)) addFont(el, 'annotationfont', this.annotationfont);\n\t\t\t\tif (this.differentFont(\"gchordfont\", defaultFonts)) addFont(el, 'gchordfont', this.gchordfont);\n\t\t\t\tif (this.differentFont(\"vocalfont\", defaultFonts)) addFont(el, 'vocalfont', this.vocalfont);\n\t\t\t\tif (this.differentFont(\"tripletfont\", defaultFonts)) addFont(el, 'tripletfont', this.tripletfont);\n\t\t\t} else if (elType === 'bar') {\n\t\t\t\tif (this.dynamicPosition !== 'auto') addPositioning(el, 'dynamicPosition', this.dynamicPosition);\n\t\t\t\tif (this.chordPosition !== 'auto') addPositioning(el, 'chordPosition', this.chordPosition);\n\t\t\t\tif (this.ornamentPosition !== 'auto') addPositioning(el, 'ornamentPosition', this.ornamentPosition);\n\t\t\t\tif (this.volumePosition !== 'auto') addPositioning(el, 'volumePosition', this.volumePosition);\n\t\t\t\tif (this.differentFont(\"measurefont\", defaultFonts)) addFont(el, 'measurefont', this.measurefont);\n\t\t\t\tif (this.differentFont(\"repeatfont\", defaultFonts)) addFont(el, 'repeatfont', this.repeatfont);\n\t\t\t}\n\t\t},\n\t\tduplicateStartEndingHoldOvers: function() {\n\t\t\tthis.endingHoldOver = {\n\t\t\t\tinTie: [],\n\t\t\t\tinTieChord: {}\n\t\t\t};\n\t\t\tfor (var i = 0; i < this.inTie.length; i++) {\n\t\t\t\tthis.endingHoldOver.inTie.push([]);\n\t\t\t\tif (this.inTie[i]) { // if a voice is suppressed there might be a gap in the array.\n\t\t\t\t\tfor (var j = 0; j < this.inTie[i].length; j++) {\n\t\t\t\t\t\tthis.endingHoldOver.inTie[i].push(this.inTie[i][j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var key in this.inTieChord) {\n\t\t\t\tif (this.inTieChord.hasOwnProperty(key))\n\t\t\t\t\tthis.endingHoldOver.inTieChord[key] = this.inTieChord[key];\n\t\t\t}\n\t\t},\n\t\trestoreStartEndingHoldOvers: function() {\n\t\t\tif (!this.endingHoldOver.inTie)\n\t\t\t\treturn;\n\t\t\tthis.inTie = [];\n\t\t\tthis.inTieChord = {};\n\t\t\tfor (var i = 0; i < this.endingHoldOver.inTie.length; i++) {\n\t\t\t\tthis.inTie.push([]);\n\t\t\t\tfor (var j = 0; j < this.endingHoldOver.inTie[i].length; j++) {\n\t\t\t\t\tthis.inTie[i].push(this.endingHoldOver.inTie[i][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var key in this.endingHoldOver.inTieChord) {\n\t\t\t\tif (this.endingHoldOver.inTieChord.hasOwnProperty(key))\n\t\t\t\t\tthis.inTieChord[key] = this.endingHoldOver.inTieChord[key];\n\t\t\t}\n\t\t},\n\t};\n\n\tvar addWarning = function(str) {\n\t\tif (!multilineVars.warnings)\n\t\t\tmultilineVars.warnings = [];\n\t\tmultilineVars.warnings.push(str);\n\t};\n\n\tvar addWarningObject = function(warningObject) {\n\t\tif (!multilineVars.warningObjects)\n\t\t\tmultilineVars.warningObjects = [];\n\t\tmultilineVars.warningObjects.push(warningObject);\n\t};\n\n\tvar encode = function(str) {\n\t\tvar ret = str.replace(/\\x12/g, ' ');\n\t\tret = ret.replace(/&/g, '&amp;');\n\t\tret = ret.replace(/</g, '&lt;');\n\t\treturn ret.replace(/>/g, '&gt;');\n\t};\n\n\tvar warn = function(str, line, col_num) {\n\t\tif (!line) line = \" \";\n\t\tvar bad_char = line[col_num];\n\t\tif (bad_char === ' ' || !bad_char)\n\t\t\tbad_char = \"SPACE\";\n\t\tvar clean_line = encode(line.substring(col_num - 64, col_num)) + '<span style=\"text-decoration:underline;font-size:1.3em;font-weight:bold;\">' + bad_char + '</span>' + encode(line.substring(col_num + 1).substring(0,64));\n\t\taddWarning(\"Music Line:\" + tokenizer.lineIndex + \":\" + (col_num+1) + ': ' + str + \":  \" + clean_line);\n\t\taddWarningObject({message:str, line:line, startChar: multilineVars.iChar + col_num, column: col_num});\n\t};\n\n\tvar header;\n\tvar music;\n\n\tthis.getWarnings = function() {\n\t\treturn multilineVars.warnings;\n\t};\n\tthis.getWarningObjects = function() {\n\t\treturn multilineVars.warningObjects;\n\t};\n\n\tvar addWords = function(line, words) {\n\t\tif (words.indexOf('\\x12') >= 0) {\n\t\t\twordsContinuation += words\n\t\t\treturn\n\t\t}\n\t\twords = wordsContinuation + words\n\t\twordsContinuation = ''\n\n\t\tif (!line) { warn(\"Can't add words before the first line of music\", line, 0); return; }\n\t\twords = parseCommon.strip(words);\n\t\tif (words[words.length-1] !== '-')\n\t\t\twords = words + ' ';\t// Just makes it easier to parse below, since every word has a divider after it.\n\t\tvar word_list = [];\n\t\t// first make a list of words from the string we are passed. A word is divided on either a space or dash.\n\t\tvar last_divider = 0;\n\t\tvar replace = false;\n\t\tvar addWord = function(i) {\n\t\t\tvar word = parseCommon.strip(words.substring(last_divider, i));\n\t\t\tword = word.replace(/\\\\([-_*|~])/g, '$1')\n\t\t\tlast_divider = i+1;\n\t\t\tif (word.length > 0) {\n\t\t\t\tif (replace)\n\t\t\t\t\tword = word.replace(/~/g, ' ');\n\t\t\t\tvar div = words[i];\n\t\t\t\tif (div !== '_' && div !== '-')\n\t\t\t\t\tdiv = ' ';\n\t\t\t\tword_list.push({syllable: tokenizer.translateString(word), divider: div});\n\t\t\t\treplace = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tvar escNext = false;\n\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\tswitch (words[i]) {\n\t\t\t\tcase ' ':\n\t\t\t\tcase '\\x12':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\tif (!escNext && !addWord(i) && word_list.length > 0) {\n\t\t\t\t\t\tparseCommon.last(word_list).divider = '-';\n\t\t\t\t\t\tword_list.push({skip: true, to: 'next'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '_':\n\t\t\t\t\tif (!escNext) {\n\t\t\t\t\t\taddWord(i);\n\t\t\t\t\t\tword_list.push({skip: true, to: 'slur'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '*':\n\t\t\t\t\tif (!escNext) {\n\t\t\t\t\t\taddWord(i);\n\t\t\t\t\t\tword_list.push({skip: true, to: 'next'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '|':\n\t\t\t\t\tif (!escNext) {\n\t\t\t\t\t\taddWord(i);\n\t\t\t\t\t\tword_list.push({skip: true, to: 'bar'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '~':\n\t\t\t\t\tif (!escNext) {\n\t\t\t\t\t\treplace = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tescNext = words[i] === '\\\\'\n\t\t}\n\n\t\tvar inSlur = false;\n\t\tline.forEach(function(el) {\n\t\t\tif (word_list.length !== 0) {\n\t\t\t\tif (word_list[0].skip) {\n\t\t\t\t\tswitch (word_list[0].to) {\n\t\t\t\t\t\tcase 'next': if (el.el_type === 'note' && el.pitches !== null && !inSlur) word_list.shift(); break;\n\t\t\t\t\t\tcase 'slur': if (el.el_type === 'note' && el.pitches !== null) word_list.shift(); break;\n\t\t\t\t\t\tcase 'bar': if (el.el_type === 'bar') word_list.shift(); break;\n\t\t\t\t\t}\n\t\t\t\t\tif (el.el_type !== 'bar') {\n\t\t\t\t\t\tif (el.lyric === undefined)\n\t\t\t\t\t\t\tel.lyric = [{syllable: \"\", divider: \" \"}];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel.lyric.push({syllable: \"\", divider: \" \"});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (el.el_type === 'note' && el.rest === undefined && !inSlur) {\n\t\t\t\t\t\tvar lyric = word_list.shift();\n\t\t\t\t\t\tif (lyric.syllable)\n\t\t\t\t\t\t\tlyric.syllable = lyric.syllable.replace(/ +/g,'\\xA0');\n\t\t\t\t\t\tif (el.lyric === undefined)\n\t\t\t\t\t\t\tel.lyric = [ lyric ];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel.lyric.push(lyric);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tvar addSymbols = function(line, words) {\n\t\tif (words.indexOf('\\x12') >= 0) {\n\t\t\tsymbolContinuation += words\n\t\t\treturn\n\t\t}\n\t\twords = symbolContinuation + words\n\t\tsymbolContinuation = ''\n\n\t\t// TODO-PER: Currently copied from w: line. This needs to be read as symbols instead.\n\t\tif (!line) { warn(\"Can't add symbols before the first line of music\", line, 0); return; }\n\t\twords = parseCommon.strip(words);\n\t\tif (words[words.length-1] !== '-')\n\t\t\twords = words + ' ';\t// Just makes it easier to parse below, since every word has a divider after it.\n\t\tvar word_list = [];\n\t\t// first make a list of words from the string we are passed. A word is divided on either a space or dash.\n\t\tvar last_divider = 0;\n\t\tvar replace = false;\n\t\tvar addWord = function(i) {\n\t\t\tvar word = parseCommon.strip(words.substring(last_divider, i));\n\t\t\tlast_divider = i+1;\n\t\t\tif (word.length > 0) {\n\t\t\t\tif (replace)\n\t\t\t\t\tword = word.replace(/~/g, ' ');\n\t\t\t\tvar div = words[i];\n\t\t\t\tif (div !== '_' && div !== '-')\n\t\t\t\t\tdiv = ' ';\n\t\t\t\tword_list.push({syllable: tokenizer.translateString(word), divider: div});\n\t\t\t\treplace = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\tswitch (words[i]) {\n\t\t\t\tcase ' ':\n\t\t\t\tcase '\\x12':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '-':\n\t\t\t\t\tif (!addWord(i) && word_list.length > 0) {\n\t\t\t\t\t\tparseCommon.last(word_list).divider = '-';\n\t\t\t\t\t\tword_list.push({skip: true, to: 'next'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '_':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tword_list.push({skip: true, to: 'slur'});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '*':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tword_list.push({skip: true, to: 'next'});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '|':\n\t\t\t\t\taddWord(i);\n\t\t\t\t\tword_list.push({skip: true, to: 'bar'});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '~':\n\t\t\t\t\treplace = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar inSlur = false;\n\t\tline.forEach(function(el) {\n\t\t\tif (word_list.length !== 0) {\n\t\t\t\tif (word_list[0].skip) {\n\t\t\t\t\tswitch (word_list[0].to) {\n\t\t\t\t\t\tcase 'next': if (el.el_type === 'note' && el.pitches !== null && !inSlur) word_list.shift(); break;\n\t\t\t\t\t\tcase 'slur': if (el.el_type === 'note' && el.pitches !== null) word_list.shift(); break;\n\t\t\t\t\t\tcase 'bar': if (el.el_type === 'bar') word_list.shift(); break;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (el.el_type === 'note' && el.rest === undefined && !inSlur) {\n\t\t\t\t\t\tvar lyric = word_list.shift();\n\t\t\t\t\t\tif (el.lyric === undefined)\n\t\t\t\t\t\t\tel.lyric = [ lyric ];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tel.lyric.push(lyric);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tvar parseLine = function(line) {\n\t\tif (parseCommon.startsWith(line, '%%')) {\n\t\t\tvar err = parseDirective.addDirective(line.substring(2));\n\t\t\tif (err) warn(err, line, 2);\n\t\t\treturn;\n\t\t}\n\n\t\tvar i = line.indexOf('%');\n\t\tif (i >= 0)\n\t\t\tline = line.substring(0, i);\n\t\tline = line.replace(/\\s+$/, '');\n\n\t\tif (line.length === 0)\n\t\t\treturn;\n\n\t\tif (wordsContinuation) {\n\t\t\taddWords(tuneBuilder.getCurrentVoice(), line.substring(2));\n\t\t\treturn\n\t\t}\n\t\tif (symbolContinuation) {\n\t\t\taddSymbols(tuneBuilder.getCurrentVoice(), line.substring(2));\n\t\t\treturn\n\t\t}\n\t\tif (line.length < 2 || line[1] !== ':' || music.lineContinuation) {\n\t\t\tmusic.parseMusic(line);\n\t\t\treturn\n\t\t}\n\n\t\tvar ret = header.parseHeader(line);\n\t\tif (ret.regular)\n\t\t\tmusic.parseMusic(line);\n\t\tif (ret.newline)\n\t\t\tmusic.startNewLine();\n\t\tif (ret.words)\n\t\t\taddWords(tuneBuilder.getCurrentVoice(), line.substring(2));\n\t\tif (ret.symbols)\n\t\t\taddSymbols(tuneBuilder.getCurrentVoice(), line.substring(2));\n\t};\n\n\tfunction appendLastMeasure(voice, nextVoice) {\n\t\tvoice.push({\n\t\t\tel_type: 'hint'\n\t\t});\n\t\tfor (var i = 0; i < nextVoice.length; i++) {\n\t\t\tvar element = nextVoice[i];\n\t\t\tvar hint = parseCommon.clone(element);\n\t\t\tvoice.push(hint);\n\t\t\tif (element.el_type === 'bar')\n\t\t\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction addHintMeasure(staff, nextStaff) {\n\t\tfor (var i = 0; i < staff.length; i++) {\n\t\t\tvar stave = staff[i];\n\t\t\tvar nextStave = nextStaff[i];\n\t\t\tif (nextStave) { // Be sure there is the same number of staves on the next line.\n\t\t\t\tfor (var j = 0; j < nextStave.voices.length; j++) {\n\t\t\t\t\tvar nextVoice = nextStave.voices[j];\n\t\t\t\t\tvar voice = stave.voices[j];\n\t\t\t\t\tif (voice) { // Be sure there are the same number of voices on the previous line.\n\t\t\t\t\t\tappendLastMeasure(voice, nextVoice);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addHintMeasures() {\n\t\tfor (var i = 0; i < tune.lines.length; i++) {\n\t\t\tvar line = tune.lines[i].staff;\n\t\t\tif (line) {\n\t\t\t\tvar j = i+1;\n\t\t\t\twhile (j < tune.lines.length && tune.lines[j].staff === undefined)\n\t\t\t\t\tj++;\n\t\t\t\tif (j < tune.lines.length) {\n\t\t\t\t\tvar nextLine = tune.lines[j].staff;\n\t\t\t\t\taddHintMeasure(line, nextLine);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.parse = function(strTune, switches, startPos) {\n\t\t// the switches are optional and cause a difference in the way the tune is parsed.\n\t\t// switches.header_only : stop parsing when the header is finished\n\t\t// switches.stop_on_warning : stop at the first warning encountered.\n\t\t// switches.print: format for the page instead of the browser.\n\t\t// switches.format: a hash of the desired formatting commands.\n\t\t// switches.hint_measures: put the next measure at the end of the current line.\n\t\t// switches.transpose: change the key signature, chords, and notes by a number of half-steps.\n\t\tif (!switches) switches = {};\n\t\tif (!startPos) startPos = 0;\n\t\ttune.reset();\n\n\t\t// Take care of whatever line endings come our way\n\t\t// Tack on newline temporarily to make the last line continuation work\n\t\tstrTune = strTune.replace(/\\r\\n?/g, '\\n') + '\\n';\n\n\t\t// get rid of latex commands. If a line starts with a backslash, then it is replaced by spaces to keep the character count the same.\n\t\tvar arr = strTune.split(\"\\n\\\\\");\n\t\tif (arr.length > 1) {\n\t\t\tfor (var i2 = 1; i2 < arr.length; i2++) {\n\t\t\t\twhile (arr[i2].length > 0 && arr[i2][0] !== \"\\n\") {\n\t\t\t\t\tarr[i2] = arr[i2].substr(1);\n\t\t\t\t\tarr[i2-1] += ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tstrTune = arr.join(\"  \"); //. the split removed two characters, so this puts them back\n\t\t}\n\t\t// take care of line continuations right away, but keep the same number of characters\n\t\tstrTune = strTune.replace(/\\\\([ \\t]*)(%.*)*\\n/g, function(all, backslash, comment){\n\t\t\tvar padding = comment ? Array(comment.length +1).join(' ') : \"\";\n\t\t\treturn backslash + \"\\x12\" + padding + '\\n';\n\t\t});\n\t\tvar lines = strTune.split('\\n')\n\t\tif (parseCommon.last(lines).length === 0)\t// remove the blank line we added above.\n\t\t\tlines.pop();\n\t\ttokenizer = new Tokenizer(lines, multilineVars);\n\t\theader = new ParseHeader(tokenizer, warn, multilineVars, tune, tuneBuilder);\n\t\tmusic = new ParseMusic(tokenizer, warn, multilineVars, tune, tuneBuilder, header);\n\n\t\tif (switches.print)\n\t\t\ttune.media = 'print';\n\t\tmultilineVars.reset();\n\t\tmultilineVars.iChar = startPos;\n\t\tif (switches.visualTranspose) {\n\t\t\tmultilineVars.globalTranspose = parseInt(switches.visualTranspose);\n\t\t\tif (multilineVars.globalTranspose === 0)\n\t\t\t\tmultilineVars.globalTranspose = undefined;\n\t\t\telse\n\t\t\t\ttuneBuilder.setVisualTranspose(switches.visualTranspose);\n\t\t} else\n\t\t\tmultilineVars.globalTranspose = undefined;\n\t\tif (switches.lineBreaks) {\n\t\t\t// The line break numbers are 0-based and they reflect the last measure of the current line.\n\t\t\tmultilineVars.lineBreaks = switches.lineBreaks;\n\t\t\t//multilineVars.continueall = true;\n\t\t}\n\t\theader.reset(tokenizer, warn, multilineVars, tune);\n\n\t\ttry {\n\t\t\tif (switches.format) {\n\t\t\t\tparseDirective.globalFormatting(switches.format);\n\t\t\t}\n\t\t\tvar line = tokenizer.nextLine();\n\t\t\twhile (line) {\n\t\t\t\tif (switches.header_only && multilineVars.is_in_header === false)\n\t\t\t\t\tthrow \"normal_abort\";\n\t\t\t\tif (switches.stop_on_warning && multilineVars.warnings)\n\t\t\t\t\tthrow \"normal_abort\";\n\n\t\t\t\tvar wasInHeader = multilineVars.is_in_header;\n\t\t\t\tparseLine(line);\n\t\t\t\tif (wasInHeader && !multilineVars.is_in_header) {\n\t\t\t\t\ttuneBuilder.setRunningFont(\"annotationfont\", multilineVars.annotationfont);\n\t\t\t\t\ttuneBuilder.setRunningFont(\"gchordfont\", multilineVars.gchordfont);\n\t\t\t\t\ttuneBuilder.setRunningFont(\"tripletfont\", multilineVars.tripletfont);\n\t\t\t\t\ttuneBuilder.setRunningFont(\"vocalfont\", multilineVars.vocalfont);\n\t\t\t\t}\n\t\t\t\tline = tokenizer.nextLine();\n\t\t\t}\n\n\t\t\tif (wordsContinuation) {\n\t\t\t\taddWords(tuneBuilder.getCurrentVoice(), '');\n\t\t\t}\n\t\t\tif (symbolContinuation) {\n\t\t\t\taddSymbols(tuneBuilder.getCurrentVoice(), '');\n\t\t\t}\n\t\t\tmultilineVars.openSlurs = tuneBuilder.cleanUp(multilineVars.barsperstaff, multilineVars.staffnonote, multilineVars.openSlurs);\n\n\t\t} catch (err) {\n\t\t\tif (err !== \"normal_abort\")\n\t\t\t\tthrow err;\n\t\t}\n\n\t\tvar ph = 11*72;\n\t\tvar pl = 8.5*72;\n\t\tswitch (multilineVars.papersize) {\n\t\t\t//case \"letter\": ph = 11*72; pl = 8.5*72; break;\n\t\t\tcase \"legal\": ph = 14*72; pl = 8.5*72; break;\n\t\t\tcase \"A4\": ph = 11.7*72; pl = 8.3*72; break;\n\t\t}\n\t\tif (multilineVars.landscape) {\n\t\t\tvar x = ph;\n\t\t\tph = pl;\n\t\t\tpl = x;\n\t\t}\n\t\tif (!tune.formatting.pagewidth)\n\t\t\ttune.formatting.pagewidth = pl;\n\t\tif (!tune.formatting.pageheight)\n\t\t\ttune.formatting.pageheight = ph;\n\n\t\tif (switches.hint_measures) {\n\t\t\taddHintMeasures();\n\t\t}\n\n\t\twrap.wrapLines(tune, multilineVars.lineBreaks, multilineVars.barNumbers);\n\t};\n};\n", "\n/**\nparseABC()\nA quick-and-dirty interface with abcjs's parser. Please clean me up.\n**/\n\nimport matches   from 'fn/matches.js';\nimport ABCParser from '../../lib/abcjs/modules/parse/abc_parse.js';\n\nconst parser = new ABCParser();\n\nfunction TODO(message) {\n    throw new Error('Todo: ' + message);\n}\n\nfunction getSequence(id, data) {\n    let sequence = data.sequences.find(matches({ id }));\n    if (sequence) return sequence;\n\n    sequence = { id, events: [], cursor: 0 };\n    data.sequences.push(sequence);\n    data.events.push([0, \"sequence\", id]);\n    return sequence;\n}\n\nfunction findLastOfType(type, events) {\n    let n = events.length;\n    while (n--) {\n        if (events[n][1] === type) return events[n];\n    }\n}\n\nfunction getAbsoluteFromDiatonicPitch(root, degree) {\n    // Not entirely sure how ABC decides where the 'root' of the melody is.\n    // We just add 60, but its arbitrary.\n    return [0,\n        0,  2,  4,  5,  7,  9,  11,\n        12, 14, 16, 17, 19, 21, 23,\n        24, 26, 28, 29, 31, 33, 35,\n        36, 38, 40, 41, 43, 45, 47,\n        48\n    ][degree] + root + 60;\n}\n\nexport default function parseABC(abc) {\n    parser.parse(abc);\n\n    const tune = parser.getTune();\n    const data = tune.lines.reduce((data, line) => {\n        line.staff.reduce((sequences, staff, i) => {\n            const sequence    = getSequence(i, data);\n            const events      = sequence.events;\n//console.log(staff);\n            // If clef has changed push in a clef event\n            if (staff.clef) {\n                const clef      = staff.clef.type;\n                const clefEvent = findLastOfType('clef', events);\n                if (!clefEvent || clefEvent[2] !== clef) {\n                    events.push([0, 'clef', clef]);\n                }\n            }\n\n            // If key has changed push in a key event\n            let keyEvent = findLastOfType('key', events);\n            if (staff.key) {\n                const root = staff.key.mode === '' ?\n                    staff.key.root :\n                    TODO('What happens when ABC decides key.mode is not an empty string?') ;\n\n                const roots = { C: 0, D: 2, E: 4, F: 5, G: 7, A: 9, B: 11 };\n\n                if (!roots[root]) {\n                    TODO('ABC says root is \"' + root + '\", we have not implemented support for that');\n                }\n\n                const rootN = roots[root];\n\n                if (!keyEvent || keyEvent[2] !== root) {\n                    keyEvent = [sequence.cursor, 'key', rootN];\n                    events.push(keyEvent);\n                }\n            }\n\n            // If meter has changed push in a meter event\n            if (staff.meter) {\n                // Not sure why staff.meter.value is an array? Either way it\n                // contains strings for num/den so we need to convert...\n                const denominator = 1 / (+staff.meter.value[0].den / 4);\n                const numerator   = +staff.meter.value[0].num * denominator;\n                const meterEvent = findLastOfType('meter', events);\n                if (!meterEvent || meterEvent[2] !== numerator || meterEvent[3] !== denominator) {\n                    events.push([0, 'meter', numerator, denominator]);\n                }\n            }\n\n            // Push in notes\n            if (staff.voices) {\n                const noteEvent = findLastOfType('note', events);\n                // I am not currently sure why voices is an array\n                staff.voices[0].reduce((events, voice) => {\n                    if (voice.el_type === 'note') {\n                        voice.pitches.reduce((events, abcPitch) => {\n                            // abcPitch numbers are relative to the key root and\n                            // describe diatonic steps, not semitones\n\n                            events.push([sequence.cursor, \"note\", getAbsoluteFromDiatonicPitch(keyEvent[2], abcPitch.pitch), 0.25, voice.duration * 4]);\n                            return events;\n                        }, events);\n\n                        sequence.cursor += voice.duration * 4;\n                    }\n                    else if (voice.el_type === 'bar') {\n                        // If cursor is not at bar start when a bar comes around...\n                        const meterEvent = findLastOfType('meter', events);\n                        if ((sequence.cursor - meterEvent[0]) % meterEvent[2] !== 0) {\n                            // ...advance cursor to next bar start\n                            const wholeBars  = Math.floor((sequence.cursor - meterEvent[0]) / meterEvent[2]);\n                            const beat = (wholeBars + 1) * meterEvent[2];\n                            sequence.cursor = beat;\n                        }\n                    }\n                    else {\nconsole.log('ABC voice ignored:', voice);\n                    }\n\n                    return events;\n                }, events);\n\n                if (staff.voices[1]) {\n                    TODO('What do we do with a second array of voices?');\n                }\n            }\n\n            return sequences;\n        }, data.sequences);\n\n        return data;\n    }, {\n        name:      tune.metaText.title,\n        events:    [],\n        sequences: [],\n        meta:      tune.metaText\n    });\n\n    // Remove cursor property which was just for tracking start beats\n    data.sequences.forEach((sequence) => delete sequence.cursor);\n    return data;\n}\n", "const lengths = {\n    /* Length of data following 'type' */\n    chord: 3, /* chord duration, not used, chords can be either 2 or 3 long */\n    note:  3, /* pitch gain duration */\n    key:   1, /* A-G */\n    meter: 2, /* duration division */\n    rate:  1, /* rate */\n    lyric: 2, /* string, duration */\n};\n\nconst rnote = /^[ABCDEFG][b♭#♯]{0,1}-?\\d$/;\nconst rroot = /^[ABCDEFG][b♭#♯]{0,1}/;\n\n\nexport default function parseSequenceText(source) {\n    const data   = source.trim().split(/\\s+/);\n    const events = [];\n\n    let n = -1;\n    while (data[++n] !== undefined) {\n        let time  = Number(data[n]);\n        let type  = data[++n];\n\n        // Automatically detect type. If type has been omitted, it will match\n        // a value for note pitch or chord. Set type, rewind n.\n        if (rnote.test(type)) {\n            type = 'note';\n            --n;\n        }\n        else if (rroot.test(type)) {\n            type = 'chord';\n            --n;\n        }\n\n        let event = [time, type];\n        let m = lengths[type];\n        if (m === undefined) {\n            throw new TypeError('Unrecognised type \"' + type + '\" in sequence data');\n        }\n\n        if (type === 'chord') {\n            // Detect and parse chord root/extension written as one\n            // parameter \"C7\" or as two \"C\", \"7\"\n            let root      = rroot.exec(data[++n])[0];\n            let extension = data[n].slice(root.length) || data[++n];\n            let duration  = Number(data[++n]);\n            event.push(root, extension, duration);\n        }\n        else {\n            // Push values into event, converting to number where possible\n            while (m--) {\n                let value = Number(data[++n]);\n                event.push(Number.isNaN(value) ? data[n] : value);\n            }\n        }\n\n        events.push(event);\n    }\n\n    return events;\n}\n", "import parseABC          from './parse/parse-abc.js';\nimport parseSequenceText from './parse/parse-sequence-text.js';\n\n\n/* Parse data\n  (TODO: Yeah, API requests need tidied up) */\n\nfunction fromGist(gist) {\n    // Get first file\n    const file = gist.files[Object.keys(gist.files)[0]];\n    return parseSource(file.type, file.content);\n}\n\nfunction fromTheSession(object) {\n    // Get first file\n    const song = object.settings.find(matches({ id: 13324 })) || object.settings[0];\n    return parseSource('abc', song.abc);\n}\n\nexport default function parseSource(type, source) {\n    // source is an object\n    if (typeof source === 'object') {\n        // source is json from api.github.com/gists/\n        return source.files ? fromGist(source) :\n        // source is from thesession.org\n        source.settings ? fromTheSession() :\n        // source is an events array\n        Array.isArray(source) ? { id: 0, events: source } :\n        // source is a sequence object\n        source ;\n    }\n    // Data is ABC\n    else if (type === 'abc' || type === 'text/x-abc') {\n        // Strip space following line breaks\n        const music = parseABC(source.replace(/\\n\\s+/g, '\\n'));\n        return music.sequences[0];\n    }\n    // Data is step sequence text\n    else if (type === 'sequence' || type === 'text/plain') {\n        return { events: parseSequenceText(source) };\n    }\n    // Data is JSON\n    else {\n        const events = JSON.parse(source);\n        return Array.isArray(events) ?\n            { id: 0, events } :\n            events ;\n    }\n}\n", "\nimport cache          from 'fn/cache-by-key.js';\nimport overload       from 'fn/overload.js';\nimport { requestGet } from 'dom/request.js';\nimport parse          from './parse.js';\n\nconst requestData = cache(requestGet);\nconst rpath       = /^\\.*\\/|^https?:\\/\\//;\n\n/**\nrequestData(type, url)\n**/\n\nexport default overload((type, value) => typeof value, {\n    string: function(type, url) {\n        if (window.DEBUG && !rpath.test(url)) {\n            throw new TypeError('URL not supported \"' + url + '\"');\n        }\n\n        return requestData(url)\n        .then((source) => parse(type, source))\n        .catch((error) => console.error(error));\n    },\n\n    default: function(name, internals, type, value) {\n        internals[name] = value;\n    }\n});\n", "\nconst rtimesig = /^(\\d+)\\/(\\d+)$/;\n\nexport function timesigToMeter(string) {\n    const groups = rtimesig.exec(string);\n    const num = parseInt(groups[1], 10);\n    const div = 4 / parseInt(groups[2], 10);\n    // Returns an object that can be assigned to a meter event\n    return { 1: 'meter', 2: num * div, 3: div };\n}\n\nexport function meterToTimesig(meter) {\n    const dur = meter[2];\n    const div = meter[3];\n    const num = dur / div;\n    const den = 4 / div;\n    return num + '/' + den;\n}\n", "\n/**\nrect(node)\n\nReturns a `DOMRect` object describing the draw rectangle of `node`.\n(If `node` is `window` a preudo-DOMRect object is returned).\n**/\n\nfunction windowBox() {\n\treturn {\n\t\tx:      0,\n\t\ty:      0,\n\t\tleft:   0,\n\t\ttop:    0,\n\t\tright:  window.innerWidth,\n\t\tbottom: window.innerHeight,\n\t\twidth:  window.innerWidth,\n\t\theight: window.innerHeight\n\t};\n}\n\nexport default function rect(node) {\n\treturn node === window ?\n\t\twindowBox() :\n        // In Safari SVG shapes dont get a .getClientRects()[0] so fallback to\n        // .getBoundingClientRect()\n\t\tnode.getClientRects()[0] || node.getBoundingClientRect() ;\n}\n", "\nimport create from 'dom/create.js';\nimport rect   from 'dom/rect.js';\n\n/* Beams */\n\nexport const beamThickness = 1.1;\n\nfunction getDataDuration(note) {\n    return parseFloat(note.dataset.duration);\n}\n\nfunction removeBeamPaths(svg) {\n    const childNodes = svg.childNodes;\n    while (childNodes.length > 1) {\n        svg.removeChild(svg.lastChild);\n    }\n}\n\nfunction renderPathData(range, xs, beam) {\n    return `M${xs[beam[0]]}, ${ -range * xs[beam[0]] - 0.5 * beamThickness }\n        L${xs[beam[beam.length - 1]]},${ -range * xs[beam[beam.length - 1]] - 0.5 * beamThickness }\n        L${xs[beam[beam.length - 1]]},${ -range * xs[beam[beam.length - 1]] + 0.5 * beamThickness }\n        L${xs[beam[0]]}, ${ -range * xs[beam[0]] + 0.5 * beamThickness }\n        Z`;\n}\n\nfunction createBeamPaths(svg, durations, xs, i, range, duration) {\n    // Don't render anything shorter than 32nd note beams\n    if (duration < 0.125) return;\n\n    let n = i - 1;\n    let beam;\n\n    while (durations[++n]) {\n        if (durations[n] <= duration) {\n            // Push to existing beam\n            if (beam) { beam.push(n); }\n            // Or start new beam\n            else { beam = [n]; }\n        }\n        // Render beam\n        else if (beam) {\n            svg.appendChild(create('path', {\n                // Remember duration is the duration of the beam above this one\n                class: `beam-path-${ 4 / duration } beam-path`,\n                d: renderPathData(range, xs, beam)\n            }));\n\n            createBeamPaths(svg, durations, xs, beam[0], range, duration / 2);\n            beam = undefined;\n        }\n    }\n\n    // Render beam\n    if (beam) {\n        svg.appendChild(create('path', {\n            class: `beam-path-${ 4 / duration } beam-path`,\n            d: renderPathData(range, xs, beam)\n        }));\n\n        createBeamPaths(svg, durations, xs, beam[0], range, duration / 2);\n        beam = undefined;\n    }\n}\n\nexport function renderBeam(svg) {\n    const ids       = svg.dataset.events.split(/\\s+/);\n    const parent    = svg.parentElement;\n    const notes     = ids.map((id) => parent.querySelector('.note[data-event=\"' + id + '\"]'));\n    const durations = notes.map(getDataDuration);\n    const box       = svg.viewBox.baseVal;\n    const range =\n        box.y < -0.5 ? box.y + 0.5 :\n        box.height - 1;\n\n    const boxes  = notes.map(rect);\n    const firstX = boxes[0].x;\n    const lastX  = boxes[boxes.length - 1].x;\n    const xs     = boxes.map((box) => (box.x - firstX) / (lastX - firstX));\n\n    removeBeamPaths(svg);\n    createBeamPaths(svg, durations, xs, 0, -range, 0.25);\n}\n", "/* Event ids */\n\nconst $id = Symbol('scribe-id');\n\nlet id = 0;\n\nexport function identify(event) {\n    if (event[$id]) return event[$id];\n    event[$id] = (++id + '');\n    return event[$id];\n}\n\nexport function find(events, id) {\n    return events.find((event) => (event[$id] === id));\n}\n", "import get from 'fn/get.js';\nimport overload from 'fn/overload.js';\nimport create from 'dom/create.js';\nimport * as glyphs from \"./glyphs.js\";\nimport { chordGlyphs } from \"./glyphs.js\";\nimport { rflat, rsharp } from './regexp.js';\nimport { identify } from './event.js';\nimport { beamThickness } from './beam.js';\n\nconst abs = Math.abs;\n\nconst chordParts = {\n    'flat':  `<span class=\"chord-flat\">${ glyphs.acciFlat }</span>`,\n    'sharp': `<span class=\"chord-sharp\">${ glyphs.acciSharp }</span>`\n};\n\nconst acciClasses = {\n    '2':  'acci acci-doublesharp',\n    '1':  'acci acci-sharp',\n    '0':  'acci acci-natural',\n    '-1': 'acci acci-flat',\n    '-2': 'acci acci-doubleflat'\n};\n\nconst acciGlyphs = {\n    '2':  glyphs.acciDoubleSharp,\n    '1':  glyphs.acciSharp,\n    '0':  glyphs.acciNatural,\n    '-1': glyphs.acciFlat,\n    '-2': glyphs.acciDoubleFlat\n};\n\nconst restGlyphs = {\n    // Triplet rests\n    '1.33': glyphs.rest2,\n    '0.67': glyphs.rest1,\n    '0.33': glyphs.rest05,\n    '0.17': glyphs.rest025,\n    '0.08': glyphs.rest0125\n};\n\nconst rextensionparts = /^(∆|-|ø|7|\\+)?(alt|sus|maj|min|dim|aug)?(.*)$/;\n\nexport default overload(get('type'), {\n    clef: (symbol) => symbol.stave.getClefHTML ?\n        // For support for piano stave treble and bass clef\n        create('fragment', symbol.stave.getClefHTML()) :\n        create('span', {\n            class: `${ symbol.stave.type }-clef clef`,\n            //data: { eventId: identify(symbol.event) },\n            html: symbol.stave.clef\n            //data: { symbol.event }\n        }),\n\n    chord: (symbol) => {\n        const parts = rextensionparts.exec(symbol.extension);\n\n        return create('abbr', {\n            class: \"chord chord-abbr\",\n            title: \"TODO - name of chord\",\n            // Note that we must detect sharps before flats because HTML entities\n            // contain hash symbols that can be interpreted as sharps\n            html: '<span class=\"chord-root\">' + symbol.root.replace(rsharp, chordParts.sharp).replace(rflat, chordParts.flat) + '</span>'\n                + '<span class=\"chord-ext\">'\n                + (parts[1] ? '<span class=\"chord-ext-' + parts[1] + '\">' + parts[1] + '</span>' : '')\n                + (parts[2] ? '<sub>' + parts[2] + '</sub>' : '')\n                + (parts[3] ? '<sup>' + parts[3].replace(rsharp, chordParts.sharp).replace(rflat, chordParts.flat) + '</sup>' : '')\n                + '</span>'\n                + (symbol.bass ? glyphs.chordBassSlash + '<span class=\"chord-bass\">' + symbol.bass + '</span>' : ''),\n            data: {\n                beat:     symbol.beat + 1,\n                duration: symbol.duration,\n                event:  identify(symbol.event)\n            }\n        });\n    },\n\n    timesig: (symbol) => symbol.stave.getTimeSigHTML ?\n        create('fragment', symbol.stave.getTimeSigHTML(symbol.numerator, symbol.denominator, identify(symbol.event))) :\n        create('span', {\n            class: \"timesig\",\n            html: `<sup>${ glyphs['timeSig' + symbol.numerator] }</sup>\n                <sub>${ glyphs['timeSig' + symbol.denominator] }</sub>`,\n            data: {\n                event: identify(symbol.event)\n            }\n        }),\n\n    lyric: (symbol) => create('span', {\n        class: \"lyric\",\n        part:  \"lyric\",\n        html: symbol.value,\n        data: {\n            beat:     symbol.beat + 1,\n            duration: symbol.duration,\n            event:  identify(symbol.event)\n        }\n    }),\n\n    acci: (symbol) => create('span', {\n        class: acciClasses[symbol.value] || 'acci',\n        html: acciGlyphs[symbol.value] || glyphs.acciNatural,\n        data: symbol.beat === undefined ? { pitch: symbol.pitch } : {\n            beat:    symbol.beat + 1,\n            pitch:   symbol.pitch,\n            part:    symbol.part,\n            event: identify(symbol.event)\n        }\n    }),\n\n    upledger: (symbol) => create('svg', {\n        class: \"up-ledge ledge\",\n        viewBox: `0 ${0.5 - symbol.rows} 4.4 ${symbol.rows}`,\n        preserveAspectRatio: \"xMidYMax\",\n        style: `height: ${ symbol.rows * 0.125 }em;`,\n        html: `\n            <line x1=\"0\" x2=\"4.4\" y1=\"-6\" y2=\"-6\"></line>\n            <line x1=\"0\" x2=\"4.4\" y1=\"-4\" y2=\"-4\"></line>\n            <line x1=\"0\" x2=\"4.4\" y1=\"-2\" y2=\"-2\"></line>\n            <line x1=\"0\" x2=\"4.4\" y1=\"0\" y2=\"0\"></line>\n        `,\n        data: {\n            beat:  symbol.beat + 1,\n            pitch: symbol.pitch,\n            part:  symbol.part\n        }\n    }),\n\n    downledger: (symbol) => create('svg', {\n        class: \"down-ledge ledge\",\n        viewBox: `0 -0.5 4.4 ${symbol.rows}`,\n        preserveAspectRatio: \"xMidYMin\",\n        style: `height: ${ symbol.rows * 0.125 }em;`,\n        html: `\n            <line x1=\"0\" x2=\"4.4\" y1=\"6\" y2=\"6\"></line>\n            <line x1=\"0\" x2=\"4.4\" y1=\"4\" y2=\"4\"></line>\n            <line x1=\"0\" x2=\"4.4\" y1=\"2\" y2=\"2\"></line>\n            <line x1=\"0\" x2=\"4.4\" y1=\"0\" y2=\"0\"></line>\n        `,\n        data: {\n            beat:  symbol.beat + 1,\n            pitch: symbol.pitch,\n            part:  symbol.part\n        }\n    }),\n\n    note: (symbol) => create('data', {\n        class: `${ symbol.stemDirection === 'up' ? 'up-note' : 'down-note' } note`,\n        style: symbol.stemHeight && `--stem-height: ${ symbol.stemHeight };`,\n        html:  symbol.stave.getNoteHTML(symbol.pitch, symbol.dynamic, symbol.duration),\n        //value: symbol.event.join(' '),\n        data: {\n            beat:     symbol.beat + 1,\n            pitch:    symbol.pitch,\n            duration: symbol.duration,\n            part:     symbol.part,\n            beam:     symbol.beam && identify(symbol.beam[0]),\n            event:    identify(symbol.event)\n        }\n    }),\n\n    beam: (symbol) => create('svg', {\n        // 8th note beams can be rendered directly into the grid. Beams for\n        // shorter durations are rendered as a post process once this SVG is in\n        // the DOM and stem positions can be measured. See beam.js.\n        class: `${symbol.direction}-beam beam`,\n        viewBox: `0 ${ (symbol.range > 0 ? -symbol.range : 0) - 0.5 } 1 ${ abs(symbol.range) + 1 }`,\n        preserveAspectRatio: \"none\",\n        style: `height: ${ (abs(symbol.range) + 1) * 0.125 }em; align-self: ${ symbol.range > 0 ? 'end' : 'start' };`,\n        html: `<path class=\"beam-path\" d=\"M0,${ -0.5 * beamThickness } L1,${ -symbol.range - 0.5 * beamThickness } L1,${ -symbol.range + 0.5 * beamThickness } L0,${ 0.5 * beamThickness } Z\"></path>`,\n        data: {\n            beat:     symbol.beat + 1,\n            pitch:    symbol.pitch,\n            duration: symbol.duration,\n            part:     symbol.part,\n            events:   symbol.events.map(identify).join(' ')\n        }\n    }),\n\n    tie: (symbol) => create('svg', {\n        class: `${ symbol.updown }-tie tie`,\n        viewBox: `0 0 1 1`,\n        preserveAspectRatio: \"none\",\n        html: `<path class=\"tie-path\" transform=\"translate(0, 0.14) scale(1 0.6)\" d=\"M0.979174733,0.0124875307 C0.650597814,1.1195554 0.135029714,1.00095361 0.0165376402,0.026468657 C0.0113570514,0.0135475362 0.00253387291,0.00218807553 0,0 C0.0977526897,1.29523004 0.656681642,1.37089992 1,2.43111793e-08 C0.991901367,2.43111797e-08 0.987703936,0.01248753 0.979174733,0.0124875307 Z M0.979174733,0.0124875307\"></path>`,\n        data: {\n            beat:     symbol.beat + 1,\n            pitch:    symbol.pitch,\n            duration: symbol.duration,\n            part:     symbol.part\n        }\n    }),\n\n    tuplet: (symbol) => create('span', {\n        class: `${ symbol.down ? 'down' : 'up' }-tuplet tuplet`,\n        html: glyphs['tuplet' + symbol.number],\n        data: {\n            beat:     symbol.beat + 1,\n            pitch:    symbol.pitch,\n            duration: symbol.duration,\n            part:     symbol.part\n        },\n        style: `--angle: ${ symbol.angle }deg;`\n    }),\n\n    rest: (symbol) => create('span', {\n        class: \"rest\",\n        html: restGlyphs[symbol.duration.toFixed(2)]\n            || glyphs['rest' + (symbol.duration + '').replace('.', '')]\n            || '',\n        data: {\n            beat:     symbol.beat + 1,\n            pitch:    symbol.pitch,\n            duration: symbol.duration,\n            part:     symbol.part\n        },\n        'aria-hidden': 'true'\n    }),\n\n    default: (function (types) {\n        return function (symbol) {\n            if (types[symbol.type]) return;\n            types[symbol.type] = true;\n            console.log(symbol);\n            console.error('Scribe: symbol type \"' + symbol.type + '\" not rendered');\n        };\n    })({})\n});\n", "\n/**\ncreateBarElements(symbols)\nReturns an array of bar elements each populated with symbol elements.\n**/\n\n\nimport create              from 'dom/create.js';\nimport createSymbolElement from './create-symbol-element.js';\n\n\nfunction toElements(nodes, symbol) {\n    const element = createSymbolElement(symbol);\n    if (element) { nodes.push(element); }\n    return nodes;\n}\n\nfunction toBarElements(elements, bar) {\n    elements.push(create('div', {\n        class: `${ bar.stave.type }-stave stave bar`,\n        data: { beat: bar.beat, duration: bar.duration },\n        children: bar.symbols.reduce(toElements, [])\n    }));\n\n    return elements;\n}\n\nexport default function createBarElements(symbols) {\n    return symbols.reduce(toBarElements, []);\n}\n", "\nimport Signal                    from 'fn/signal.js';\nimport create                    from 'dom/create.js';\nimport element, { getInternals } from 'dom/element.js';\nimport events                    from 'dom/events.js';\nimport { toRootName, toRootNumber } from 'midi/note.js';\n\nimport createSymbols     from '../modules/create-symbols.js';\nimport requestData       from '../modules/request-data.js';\nimport parseSource       from '../modules/parse.js';\nimport { timesigToMeter, meterToTimesig } from '../modules/timesig.js';\nimport Stave             from '../modules/stave.js';\nimport { renderBeam }    from '../modules/beam.js';\n//import createElement     from '../modules/create-element.js';\nimport createBarElements from '../modules/create-bar-elements.js';\n//import svgdefs           from '../modules/svgdefs.js';\n\n\nconst assign = Object.assign;\nconst define = Object.defineProperties;\n\n/* ScribeMusic.stylesheet */\nconst shadowCSSUrl = new URL('shadow.css', import.meta.url);\nconst stylesheet = Signal.of();\nconst stylefns   = [];\n//stylesheet.each((url) => stylefns.forEach((fn) => fn(url)));\n\n/* Element resizing */\nconst resizes = new ResizeObserver((entries) => {\n    for (const entry of entries) {\n        // Render beams\n        getInternals(entry.target)\n        .shadowRoot\n        .querySelectorAll('.beam')\n        .forEach(renderBeam);\n    }\n});\n\n\n/* Register <scribe-music> */\n\nexport default define(element('scribe-music', {\n    shadow: `<link rel=\"stylesheet\" href=\"${ shadowCSSUrl }\" />`,\n\n    construct: function(shadow, internals) {\n        // Listen to updates to ScribeMusic.stylesheet and update the link\n        const stylelink = shadow.querySelector('link');\n        stylefns.push((url) => stylelink.href = url);\n        if (stylesheet.value) stylelink.href = stylesheet.value;\n\n        // Set up listeners for attribute/property changes\n        internals.data      = Signal.of();\n        internals.clef      = Signal.of('treble');\n        internals.key       = Signal.of('C');\n        internals.meter     = Signal.of([-4, \"meter\", 4, 1]);\n        internals.transpose = Signal.of(0);\n\n        /* Safari has some rounding errors to overcome... */\n        internals.isSafari = navigator.userAgent.includes('AppleWebKit/')\n            && !navigator.userAgent.includes('Chrome/')\n            && !navigator.userAgent.includes('Edge/')\n            && !navigator.userAgent.includes('Gecko/');\n    },\n\n    connect: function(shadow, internals) {\n        // If Safari\n        if (internals.isSafari) {\n            this.classList.add('safari');\n        }\n\n        // Update beams on load and resize\n        resizes.observe(this, { box: 'content-box' });\n\n        // If there is no src use text content as data\n        if (!this.src) {\n            const source = this.textContent.trim();\n            internals.data.value = parseSource(this.type, source);\n        }\n\n        // Listens to changes\n        return Signal.frame(() => {\n            const elements = internals.data.value && createBarElements(createSymbols(\n                // Events from data\n                internals.data.value.events,\n                // Clef is a string\n                internals.clef.value,\n                // Key name\n                internals.key.value,\n                // Create an initial [0, \"meter\", ...] event\n                internals.meter.value,\n                // Transpose is a number\n                internals.transpose.value\n            ));\n\n            // Clear the shadow DOM of bars and put new elements in it\n            shadow.querySelectorAll('.bar').forEach((element) => element.remove());\n            shadow.append.apply(shadow, elements);\n\n            // Render beams\n            shadow.querySelectorAll('.beam').forEach(renderBeam);\n        });\n    },\n\n    disconnect: function() {\n        resizes.unobserve(this);\n    }\n}, {\n    clef: {\n        /**\n        clef=\"treble\"\n        Choose the default clef to render. Not that if the rendered sequence\n        contains clef events, they override this choice. Possible clefs are\n        `\"treble\"`, `\"bass\"`, `\"piano\"`, `\"drum\"`, `\"percussion\"`, `\"chord\"`.\n        **/\n        attribute: function(value) { this.clef = value; },\n\n        /**\n        .clef = \"treble\"\n        Choose the default clef to render. Not that if the rendered sequence\n        contains clef events, they override this choice. Possible clefs are\n        `\"treble\"`, `\"bass\"`, `\"piano\"`, `\"drum\"`, `\"percussion\"`, `\"chord\"`.\n        **/\n        get: function() {  return getInternals(this).clef.value; },\n        set: function(value) {\n            if (!Stave[value]) {\n                console.warn('<scribe-music> Attempt to set invalid clef=\"' + value + '\" ignored');\n                return;\n            }\n\n            getInternals(this).clef.value = value;\n        }\n    },\n\n    key: {\n        /**\n        key=\"C\"\n        Choose the key signature. Defaults to \"C\".\n        **/\n        attribute: function(value) {\n            this.key = value === '' ? 'C' : value;\n        },\n\n        /**\n        .key=\"C\"\n        Choose the key signature.\n        **/\n        get: function() { return getInternals(this).key.value; },\n        set: function(value) {\n            const internals = getInternals(this);\n\n            // Validate\n            if (typeof value !== 'string' || !/^[A-G][#b♯♭]?$/.test(value)) {\n                console.warn('<scribe-music> Attempt to set invalid key=\"' + value + '\" ignored');\n                return;\n            }\n\n            // Set\n            internals.key.value = value.replace(/[#b]$/, ($0) => $0 === '#' ? '♯' : '♭');\n        }\n    },\n\n    meter: {\n        /**\n        meter=\"4/4\"\n        Sets the meter. Note that this is overridden by any `\"meter\"` event\n        found at beat `0` in the data.\n        **/\n        attribute: function(value) {\n            // Default to 4/4 where meter attribute simply exists\n            this.meter = value === '' ? '4/4' : value;\n        },\n\n        /**\n        .meter = \"4/4\"\n        Sets the meter. Note that this is overridden by any `\"meter\"` event\n        found at beat `0` in the data.\n        **/\n        get: function() { return meterToTimesig(getInternals(this).meter.value); },\n        set: function(value) { getInternals(this).meter.value = assign([0], timesigToMeter(value)); }\n    },\n\n    transpose: {\n        /**\n        transpose=\"0\"\n        Sets transposition value for display of notation.\n        **/\n        attribute: function(value) { this.transpose = value; },\n\n        /**\n        .transpose = 0\n        Sets transposition value for display of notation.\n        **/\n        get: function() { return getInternals(this).transpose.value; },\n        set: function(value) {\n            // Set integer from value\n            getInternals(this).transpose.value = typeof value === 'number' ?\n                Math.round(value) :\n                parseInt(value, 10) ;\n        }\n    },\n\n    type: {\n        /**\n        type=\"application/json\"\n        Mimetype or type of data to fetch. Possible mimetypes:\n        - `\"text/x-abc\"`\n        - `\"text/plain\"`\n        - `\"application/json\"`\n        **/\n        attribute: function(value) { this.type = value; },\n\n        /**\n        .type = \"application/json\"\n        Mimetype or type of data to fetch. Possible mimetypes:\n        - `\"text/x-abc\"`\n        - `\"text/plain\"`\n        - `\"application/json\"`\n        **/\n        writable: true,\n        value: 'application/json'\n    },\n\n    /**\n    src=\"url\"\n    A path to an ABC, JSON or SEQUENCE file\n    **/\n    src: {\n        attribute: function(src) { this.src = src; },\n        get: function() { return getInternals(this).src; },\n        set: function(src) {\n            const internals = getInternals(this);\n            internals.src = src;\n            const url = new URL(src, window.location);\n\n            // src points to a hash in current document\n            if (window.location.origin === url.origin && window.location.pathname === url.pathname) {\n                const script = this.getRootNode().getElementById(url.hash.slice(1));\n                if (!script) throw new Error('<scribe-music> src script \"' + src + '\" not found in document');\n                this.data = JSON.parse(script.textContent);\n            }\n            else {\n                requestData(this.type, url.href).then((data) => this.data = data);\n            }\n        },\n        default:   null\n    },\n\n    /**\n    .data\n    **/\n    data: {\n        get: function() { return getInternals(this).data.value; },\n        set: function(data) { getInternals(this).data.value = data; },\n        default: null\n    }\n}, null, 'github.com/stephband/scribe/'), {\n    // Define ScribeMusic.styleheet as the stylesheet signal\n    stylesheet: {\n        set: (url) => stylesheet.value = url,\n        get: ()    => stylesheet.value\n    }\n});\n"],
  "mappings": "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",
  "names": ["evaluatingSignal", "hasInvalidDependency", "removeOutput", "signal", "output", "o", "clearInputs", "n", "setDependency", "dependent", "invalidateDependents", "hasInput", "input", "Signal", "_Signal", "object", "value", "ValueSignal", "fn", "context", "PushSignal", "ComputeSignal", "name", "PropertySignal", "FrameSignal", "TickSignal", "TimedSignal", "previous", "evaluatingSignal", "hasInvalidDependency", "#value", "#valid", "#fn", "#context", "#validTime", "time", "isValid", "Observer", "m", "observers", "i", "rendering", "render", "promise", "tick", "frame", "id", "value", "overload", "fn", "map", "key", "handler", "cacheByObject", "fn", "map", "object", "value", "A", "applyFn", "fn", "args", "curry", "muteable", "arity", "memo", "cacheByObject", "object", "partial", "curry_default", "noop", "assignProperty", "overload", "id", "noop", "name", "node", "object", "content", "setAttribute", "assign", "attributes", "names", "n", "assign_default", "curry_default", "svgNamespace", "template", "typeofContent", "type", "content", "createContextFragment", "context", "html", "range", "createSVG", "overload", "tag", "node", "object", "assign_default", "createHTML", "create", "id", "text", "fragment", "create_default", "exec", "regex", "fn", "string", "data", "tokens", "output", "exec_default", "curry_default", "error", "regex", "reducers", "string", "reduce", "acc", "tokens", "n", "capture", "output", "exec", "capture_default", "curry_default", "$internals", "createInternals", "Element", "element", "shadow", "getInternals", "define", "constructors", "formProperties", "name", "getInternals", "supportsCustomisedBuiltIn", "parseNameTag", "capture_default", "data", "captures", "onceEvent", "toLoadPromise", "element", "resolve", "reject", "stop", "object", "getElementConstructor", "tag", "constructor", "transferProperty", "key", "value", "createShadow", "elem", "options", "shadow", "link", "create_default", "fillShadowFromTemplate", "template", "isNotUpgraded", "upgraded", "findByIs", "root", "createDescriptor", "overload", "descriptor", "fn", "definition", "lifecycle", "properties", "log", "attributes", "descriptors", "propname", "Element", "internals", "createInternals", "define", "disabled", "old", "links", "style", "promise", "div", "noop", "upgrade", "store", "n", "attribute", "polyfillByRoot", "to_type_default", "object", "define", "call", "overload", "to_type_default", "fn", "object", "Stopable", "id", "#stopables", "stopables", "throwTypeError", "source", "push", "stream", "value", "n", "stop", "Stopable", "o", "output", "removeInput", "input", "i", "removeOutput", "unpipe", "Consumer", "Each", "fn", "Reduce", "accumulator", "Stream", "inputloop", "values", "BufferStream", "Filter", "FlatMap", "Map", "initial", "Scan", "m", "Slice", "Split", "setResolve", "res", "rej", "noop", "overload", "to_type_default", "object", "PromiseStream", "Value", "inputs", "Merge", "promise", "result", "chunk", "types", "cacheByObject", "clickTimeStamp", "arg", "n", "id", "value", "noop", "self", "create", "freeze", "nothing_default", "noop", "self", "arg", "id", "mod", "d", "n", "mod12", "n", "mod", "rnotename", "rnoteroot", "rnoteoctave", "rhz", "noteNumbers", "drumNames", "slugify", "string", "n", "A4", "frequencyToFloat", "freq", "ref", "number", "toNoteNumber", "name", "rhz", "frequencyToFloat", "r", "rnotename", "noteNumbers", "slugify", "toRootNumber", "mod12", "rnoteroot", "noteNames", "toNoteName", "n", "toRootName", "toNoteOctave", "rnoteoctave", "nothing_default", "get", "key", "object", "get_default", "curry_default", "sum", "a", "b", "mod", "d", "n", "mod12", "n", "mod", "byGreater", "a", "b", "beats", "toBeats", "events", "n", "event", "beat", "byGreater", "arg", "n", "self", "create", "freeze", "nothing_default", "noop", "self", "arg", "id", "unique", "value", "i", "array", "transposeScale", "scale", "transpose", "n", "mod12", "byGreater", "transposeScale4ths", "keys_default", "cScale", "keynumbers", "accidentals", "normaliseKeyName", "name", "$0", "toKeyNumber", "keyname", "toKeyScale", "key", "transposeScale", "transposeScale4ths", "chordNotes", "normaliseExtensionName", "str", "$0", "$maj", "$min", "$dim", "toChordNotes", "root", "extension", "bass", "r", "toRootNumber", "e", "normaliseExtensionName", "chordNotes", "n", "mod12", "byGreater", "to_notes_default", "overload", "get_default", "event", "toChordNotes", "toRootNumber", "to_duration_default", "overload", "get_default", "event", "output", "eventsAtBeat", "events", "beat", "event", "n", "to_duration_default", "initialProb", "transitionProbs", "transitionSum", "sum", "transitionMatrix", "n", "toMatrix", "emissionMatrix", "v", "i", "arr", "computeEmissions", "notes", "emissionMatrixRow", "p", "viterbi", "data", "probs", "matrix", "path", "max", "t", "j", "newpath", "prob", "pushAll", "array1", "array2", "toKeys", "events", "beats", "toBeats", "length", "beat", "beatEvents", "eventsAtBeat", "arraysOfNotes", "to_notes_default", "by", "fn", "a", "b", "fna", "fnb", "by_default", "curry_default", "keysAtBeats", "events", "harmonies", "event", "beats", "toBeats", "keys", "toKeys", "beat", "i", "keyFromBeatKeys", "beatkeys", "n", "glyphs_exports", "__export", "acciDoubleFlat", "acciDoubleSharp", "acciFlat", "acciNatural", "acciParensLeft", "acciParensRight", "acciSharp", "barLine", "barRepeatBegin", "barRepeatDots", "barRepeatEnd", "barRepeatEndBegin", "chordAugmented", "chordBassSlash", "chordBracketLeft", "chordBracketRight", "chordDiminished", "chordGlyphs", "chordHalfDiminished", "chordMajorSeventh", "chordMinor", "chordParensLeftTall", "chordParensRightTall", "clefAlto", "clefBass", "clefDrum", "clefPercussion", "clefTreble", "clefTrebleDown", "clefTrebleUp", "coda", "graceNoteStemDown", "graceNoteStemUp", "head1", "head2", "head4", "headBracketLeft", "headBracketRight", "headCircle", "headCircleX", "headDiamond", "headDiamondWide", "headPlus", "headSlashHorizontalEnds", "headSlashVerticalEnds", "headSlashed2", "headTriangleUp", "headX", "rest0125", "rest01875", "rest025", "rest0375", "rest05", "rest075", "rest1", "rest15", "rest2", "rest3", "rest4", "rest6", "tailDown0125", "tailDown025", "tailDown05", "tailUp0125", "tailUp025", "tailUp05", "timeSig0", "timeSig1", "timeSig2", "timeSig3", "timeSig4", "timeSig5", "timeSig6", "timeSig7", "timeSig8", "timeSig9", "timeSigCommon", "timeSigCutCommon", "tuplet0", "tuplet1", "tuplet2", "tuplet3", "tuplet4", "tuplet5", "tuplet6", "tuplet7", "tuplet8", "tuplet9", "tupletBracket3", "tupletBracket3LongStem", "tupletBracketBegin", "tupletBracketBeginLongStem", "tupletBracketEnd", "tupletBracketEndLongStem", "accidentals", "rpitch", "toSpelling", "keynumber", "event", "transpose", "key", "keys_default", "mod12", "n", "a", "o", "notename", "octave", "toNoteNumber", "toNoteOctave", "toRootNumber", "name", "noteNames", "accidental", "rflat", "rsharp", "rflatsharp", "Stave", "nothing_default", "pitch", "dynamic", "duration", "name", "glyphs_exports", "n", "min", "toNoteNumber", "max", "number", "pitch1", "pitch2", "row1", "rflatsharp", "row2", "i1", "i2", "toSpelling", "y", "DrumStave", "Stave", "clefDrum", "#headnames", "#rows", "pitch", "dynamic", "duration", "number", "toNoteNumber", "name", "head", "glyphs_exports", "html", "headBracketLeft", "headBracketRight", "pitch1", "pitch2", "number1", "number2", "row1", "row2", "key", "event", "transpose", "toNoteName", "toSpelling", "y", "i", "j", "PercussionStave", "DrumStave", "clefPercussion", "pitch", "toNoteNumber", "pitch1", "pitch2", "PianoStave", "Stave", "clefTreble", "clefBass", "numerator", "denominator", "eventId", "glyphs_exports", "pitch", "TrebleUpStave", "Stave", "clefTrebleUp", "TrebleStave", "clefTreble", "TrebleDownStave", "clefTrebleDown", "AltoStave", "clefAlto", "BassStave", "clefBass", "PianoStave", "DrumStave", "PercussionStave", "type", "stave_default", "quantise", "grid", "amount", "beat", "length", "duration", "remainder", "mod", "n", "fromgap", "togap", "barDivisions", "getBarDivisions", "meter", "nothing_default", "getDivision", "divisions", "b1", "b2", "n", "getLastDivision", "config_default", "assign", "abs", "ceil", "floor", "fathercharles", "beatPrecision", "quantiseBeats", "restDurations", "byFatherCharlesPitch", "a", "b", "ai", "fathercharles", "bi", "getStemDirection", "centerPitch", "head", "toNoteNumber", "toDuration", "event", "createBeam", "symbols", "stave", "beam", "n", "part", "i", "assign", "stemDirection", "t", "u", "heads", "buffer", "avgBeginLine", "avgEndLine", "line", "begin", "end", "endRange", "avgRange", "range", "abs", "headEvents", "get_default", "createRest", "durations", "divisions", "endbeat", "tobeat", "beat", "duration", "division", "getDivision", "r", "restDurations", "beatPrecision", "p", "closeTuplet", "tuplet", "number", "centreBeat", "lowestPitchNumber", "h", "centreNumber", "firstNumber", "lastNumber", "pitch", "avgNumber", "avgPitch", "toNoteName", "isStemDown", "symbol", "createSymbols", "bar", "accidentals", "acci", "cScale", "name", "toRootName", "getBarDivisions", "rest", "rsharp", "rflat", "ledgerrows", "createBarSymbols", "state", "parts", "createBar", "key", "meter", "tieheads", "m", "accidentals", "createBars", "events", "beatkeys", "stave", "meter", "transpose", "config", "tieheads", "bars", "eventsAtBeat", "event", "bar", "createBar", "cScale", "n", "keynumber", "toKeyNumber", "keyscale", "toKeyScale", "i", "toRootName", "o", "byFatherCharlesPitch", "key", "keyFromBeatKeys", "startBeat", "quantise", "quantiseBeats", "stopBeat", "toDuration", "pitch", "part", "beat", "division", "tie", "getDivision", "duration", "assign", "getLastDivision", "head", "root", "isInitialMeterEvent", "isInitialKeyEvent", "priorities", "getPriority", "byRenderOrder", "b", "a", "eventsToSymbols", "clef", "keyname", "stave_default", "keysAtBeats", "config_default", "createBarSymbols", "cacheByKey", "fn", "map", "input", "choose", "map", "key", "params", "fn", "mimetypes", "parse", "type", "string", "mimetype", "xml", "parseHTML", "parseSVG", "assign", "config", "data", "id", "createHeaders", "choose", "headers", "createBody", "formDataToJSON", "formDataToQuery", "dataToQuery", "dataToFormData", "formData", "output", "entry", "params", "key", "urlFromData", "url", "createOptions", "method", "head", "controller", "contentType", "options", "respondBlob", "response", "respondJSON", "e", "respondForm", "respondText", "respondDOM", "text", "parseHTML", "create_default", "respondSVG", "parseSVG", "responders", "respond", "mimetype", "request", "contenttype", "requestGet", "matches", "object", "item", "property", "matches_default", "curry_default", "parseCommon", "source", "destination", "property", "i", "str", "pattern", "d", "arr", "abc_common_default", "parseDirective", "tokenizer", "warn", "multilineVars", "tune", "tuneBuilder", "tokenizer_", "warn_", "multilineVars_", "tune_", "tuneBuilder_", "initializeFonts", "fontTypeCanHaveBox", "fontTranslation", "fontFace", "getFontParameter", "tokens", "currentSetting", "str", "position", "cmd", "processNumberOnly", "size", "face", "weight", "style", "decoration", "box", "state", "hyphenLast", "currToken", "word", "psFont", "font", "getChangingFont", "getGlobalFont", "setScale", "scratch", "tok", "num", "drumNames", "interpretPercMap", "restOfString", "key", "pitch", "value", "getRequiredMeasurement", "points", "oneParameterMeasurement", "addMultilineVar", "min", "max", "i", "addMultilineVarBool", "addMultilineVarOneParamChoice", "choices", "choice", "found", "midiCmdParam0", "midiCmdParam1String", "midiCmdParam1Integer", "midiCmdParam1Integer1OptionalInteger", "midiCmdParam2Integer", "midiCmdParam4Integer", "midiCmdParam5Integer", "midiCmdParam1String1Integer", "midiCmdParamFraction", "midiCmdParam1StringVariableIntegers", "parseMidiCommand", "midi", "midi_cmd", "midi_params", "p", "textstr", "textParts", "textarr", "whichFont", "positionChoices", "line", "lt", "parseStretchLast", "sl", "voiceScale", "voiceColor", "vskip", "spaceAbove", "spaceBelow", "lenLine", "textBlock", "abc_common_default", "centerstr", "sfTokens", "sfNum", "addVoice", "id", "newStaff", "bracket", "brace", "continueBar", "staff", "openParen", "openBracket", "openBrace", "justOpenParen", "justOpenBracket", "justOpenBrace", "lastVoice", "addContinueBar", "ty", "t", "vc", "pgNum", "arr", "subCmd", "footerStr", "footerArr", "footer", "percmap", "formatHash", "abc_parse_directive_default", "allNotes", "allPitches", "noteName", "pitchIndex", "all_notes_default", "sharpChords", "flatChords", "sharpChordsFree", "flatChordsFree", "transposeChordName", "chord", "steps", "preferFlats", "freeGCchord", "match", "name", "extra1", "bass", "extra2", "index", "keys", "keyReverse", "createKeyReverse", "allKeys", "i", "keyObj", "j", "mode", "relativeMajor", "key", "maj", "key1sharp", "key2sharp", "key3sharp", "key4sharp", "key5sharp", "key6sharp", "key7sharp", "key1flat", "key2flat", "key3flat", "key4flat", "key5flat", "key6flat", "key7flat", "keys", "keyAccidentals", "key", "newKey", "relativeMajor", "transpose", "keyIndex", "newKey", "newKeyMinor", "multilineVars", "keyName", "root", "acc", "localTranspose", "keyAccidentals", "k", "baseKey", "thisKeyIndex", "recognized", "index", "newKeyName", "transposedKey", "newKeySig", "distance", "chord", "transposeChordName", "pitchToLetter", "accidentalChange", "origPitch", "newPitch", "accidental", "origKeySig", "origPitchLetter", "origAccidental", "i", "accidentals", "currentAccidental", "delta", "newPitchLetter", "newAccidental", "j", "calcAccidental", "accidentals2", "accidentals3", "el", "actual", "all_notes_default", "ret", "abc_transpose_default", "parseKeyVoice", "tokenizer", "warn", "multilineVars", "tune", "tuneBuilder", "tokenizer_", "warn_", "multilineVars_", "tune_", "tuneBuilder_", "keyName", "root", "acc", "localTranspose", "abc_transpose_default", "clefLines", "calcMiddle", "clef", "oct", "value", "mid", "key", "ret", "k", "abc_common_default", "pitches", "pitch", "fixedKey", "parseMiddle", "str", "p", "normalizeAccidentals", "accs", "isInline", "tokens", "abc_parse_directive_default", "retPitch", "mode", "retAcc", "retMode", "oldKey", "keyCompensate", "savedOrigKey", "kk", "i", "found", "j", "kkk", "token", "setCurrentVoice", "id", "line", "e", "start", "end", "isNew", "staffInfo", "addNextTokenToStaffInfo", "name", "attr", "addNextTokenToVoiceInfo", "type", "getNextToken", "addNextNoteTokenToVoiceInfo", "noteToTransposition", "t", "oct2", "cue", "vi", "v", "s", "abc_parse_key_voice_default", "abc_parse_header_default", "tokenizer", "warn", "multilineVars", "tune", "tuneBuilder", "abc_parse_key_voice_default", "abc_parse_directive_default", "title", "origSize", "line", "tokens", "parseNum", "ret", "tok", "parseFraction", "meter", "totalLength", "mv", "e", "relTempo", "dur", "i", "start", "end", "equals", "before", "abc_common_default", "after", "legalChars", "len", "len_arr", "n", "d", "tempoString", "iChar", "tempo", "delaySet", "token", "num", "den", "msg", "startLine", "ws", "startChar", "endChar", "err", "result", "part", "metaTextHeaders", "field", "restOfLine", "legalAccents", "volumeDecorations", "dynamicDecorations", "accentPseudonyms", "accentDynamicPseudonyms", "nonDecorations", "durations", "pitches", "rests", "accMap", "tripletQ", "tokenizer", "warn", "multilineVars", "tune", "tuneBuilder", "header", "MusicParser", "_tokenizer", "_warn", "_multilineVars", "_tune", "_tuneBuilder", "_header", "isInTie", "overlayLevel", "el", "voiceIndex", "line", "i", "startOfLine", "delayStartNewLine", "tripletNotesLeft", "retHeader", "startI", "retInlineHeader", "ret", "letter_to_spacer", "letter_to_chord", "chordName", "addedChord", "ci", "ii", "nonDecorations", "letter_to_accent", "letter_to_grace", "letter_to_bar", "bar", "isFirstVoice", "letter_to_overlay", "letter_to_open_slurs_and_triplets", "chordStartChar", "chordDuration", "rememberEndBeam", "done", "accent", "chordNote", "getCoreNote", "pitch", "setIsInTie", "postChordDone", "addEndBeam", "br2", "getBrokenRhythm", "fraction", "ch", "el2", "core", "durationOfMeasure", "durations", "value", "chord", "x", "y", "ws", "abc_transpose_default", "gra", "gracenotes", "inTie", "acciaccatura", "note", "start", "meter", "macro", "legalAccents", "volumeDecorations", "dynamicDecorations", "ind", "accentPseudonyms", "acc", "accentDynamicPseudonyms", "curr_pos", "orig_bar_len", "ending", "retRep", "tripletQ", "params", "abc_common_default", "scoreTranspose", "abc_parse_key_voice_default", "found", "j", "st", "staff", "index", "canHaveBrokenRhythm", "isComplete", "state", "dottedTie", "durationSetByPreviousNote", "pitches", "accMap", "key", "rests", "num", "Tokenizer", "lines", "multilineVars", "str", "finished", "line", "index", "i", "skipAlpha", "start", "firstThree", "bExplicitOnly", "strOrig", "needsClef", "strClef", "abc_common_default", "j", "name", "colons", "legalChars", "end", "match", "tokens", "ret", "pitches", "accs", "acc", "accTranslation", "ch", "comment", "isLetter", "isNumber", "alphaUntilWhiteSpace", "int2", "float2", "intt", "floatt", "close", "ii", "charMap", "charMap1", "charMap2", "arr", "out", "s", "c", "num", "den", "div", "iSave", "ret2", "getTitleNumber", "thePatterns", "thisPattern", "theTitleNumber", "len", "result", "x", "used", "substInChord", "maxErrorChars", "_matchChar", "matchChar", "pos", "esc", "abc_tokenizer_default", "wrapLines", "tune", "lineBreaks", "barNumbers", "lines", "linesBreakElements", "findLineBreaks", "addLineBreaks", "outputLines", "lastKeySig", "lastStem", "currentBarNumber", "i", "action", "inputStaff", "keys", "k", "skip", "currVoice", "kk", "acc", "ii", "el", "lineBreakArray", "lineBreakIndexes", "lbai", "lineCounter", "outputLine", "line", "lineStart", "j", "staff", "measureNumber", "lbi", "voice", "start", "e", "freeFormLineBreaks", "widths", "lineBreakPoint", "totals", "totalThisLine", "width", "attemptedWidth", "oldDistance", "newDistance", "clone", "arr", "newArr", "oneTry", "measureWidths", "idealWidths", "accumulator", "lineAccumulator", "lineWidths", "lastVariance", "highestVariance", "currLine", "startIndex", "otherTries", "measureWidth", "thisVariance", "varianceIsClose", "newWidths", "newBreaks", "optimizeLineWidths", "explanation", "numLines", "idealWidth", "index", "otherTry", "lineWidth", "smallest", "smallestIndex", "fixedMeasureLineBreaks", "preferredMeasuresPerLine", "thisWidth", "failed", "getRevisedTuneParams", "staffWidth", "params", "revisedParams", "key", "calcLineWraps", "scale", "minSpacing", "minSpacingLimit", "maxSpacing", "accumulatedLineBreaks", "explanations", "s", "section", "usableWidth", "minLineSize", "allowableVariance", "f", "ff", "ret", "wrap_lines_default", "spacing", "spacing_default", "delineTune", "inputLines", "options", "lineBreaks", "outputLines", "inMusicLine", "currentMeter", "currentKey", "currentClef", "currentVocalFont", "currentGChordFont", "currentTripletFont", "currentAnnotationFont", "inputLine", "outputLine", "s", "inputStaff", "outputStaff", "objEqual", "addMeterToVoices", "addKeyToVoices", "addClefToVoices", "addFontToVoices", "v", "outputVoice", "inputVoice", "ii", "cloneLine", "replacer", "key", "value", "meter", "voices", "i", "clef", "font", "type", "input", "output", "inputValue", "outputValue", "line", "keys", "j", "staff", "keys2", "k", "Tune", "copy", "dest", "src", "prop", "attrs", "i", "meter", "multiplier", "computePickupLength", "lines", "barLength", "pickupLength", "j", "v", "voice", "tripletMultiplier", "el", "isSpacer", "bpmOverride", "bpm", "tempo", "beatsPerMeasure", "minutesPerMeasure", "beatLen", "barLen", "line", "num", "den", "char", "staff", "k", "ii", "elem", "addVerticalInfo", "timingEvents", "lastBarTop", "lastBarBottom", "lastEventTop", "lastEventBottom", "e", "ev", "makeSortedArray", "hash", "arr", "a", "b", "diff", "eventHash", "element", "voiceTimeMilliseconds", "top", "height", "measureNumber", "timeDivider", "isTiedState", "nextIsBar", "realDuration", "es", "isTiedToNext", "abc_common_default", "voicesArr", "tempos", "group", "firstStaff", "middleC", "spacing_default", "lastStaff", "bottom", "voices", "noteFound", "elements", "startingDelay", "startingBpm", "warp", "time", "maxVoiceTimeMilliseconds", "voiceTime", "startingRepeatElem", "endingRepeatElem", "tempoDone", "thisMeasure", "ret", "lastHash", "barType", "endRepeat", "startEnding", "startRepeat", "lastVoiceTimeMilliseconds", "el2", "element2", "addEndPoints", "millisecondsPerMeasure", "skipTies", "index", "next", "endX", "lastEl", "beatLength", "statedBeatLength", "measuresOfDelay", "naturalBpm", "beatsPerSecond", "measureLength", "options", "delineTune", "TuneBuilder", "tune", "self", "visualTranspose", "madeChanges", "durationsPerLines", "i", "line", "j", "staff", "overlayVoice", "k", "voice", "durationThisBar", "inOverlay", "overlayDuration", "snipStart", "kk", "event", "ii", "ov", "kkk", "snip", "indexOfLastBar", "findLastBar", "abc_common_default", "el", "start", "fixTitles", "lines", "firstMusicLine", "hasATitle", "barsperstaff", "staffnonote", "currSlur", "simplifyMetaText", "anyDeleted", "s", "v", "hasAny", "wrapMusicLines", "keepThis", "cleanUpSlursInLine", "staffNum", "voiceNum", "x", "addEndSlur", "obj", "num", "chordPos", "offNum", "slurNum", "addStartSlur", "usedNums", "nextNum", "g", "gg", "ggg", "p", "fixClefPlacement", "abc_parse_key_voice_default", "permanentItems", "barNumThisLine", "n", "nextLine", "getNextMusicLine", "cp", "ss", "vv", "startElement", "section", "currentLine", "dottedTie", "type", "startChar", "endChar", "hashParams", "This", "pushNote", "hp", "currStaff", "mid", "mid2", "endBeamHere", "endBeamLast", "dur", "hashParams2", "impliedNaturals", "hash", "str", "info", "spaceAbove", "spaceBelow", "lineLength", "scale", "color", "params", "createVoice", "thisStaff", "found", "stem", "createStaff", "createLine", "font", "isDifferent", "keys", "barNumber", "currentVoice", "lastElement", "index", "currLine", "key", "value", "isArrayOfStrings", "arr", "tune_builder_default", "TuneBuilder", "abc_parse_default", "tune", "Tune", "tuneBuilder", "tune_builder_default", "tokenizer", "wordsContinuation", "symbolContinuation", "t", "addPositioning", "el", "type", "value", "addFont", "multilineVars", "property", "defaultFonts", "elType", "i", "j", "key", "addWarning", "str", "addWarningObject", "warningObject", "encode", "ret", "warn", "line", "col_num", "bad_char", "clean_line", "header", "music", "addWords", "words", "abc_common_default", "word_list", "last_divider", "replace", "addWord", "word", "div", "escNext", "inSlur", "lyric", "addSymbols", "parseLine", "err", "abc_parse_directive_default", "appendLastMeasure", "voice", "nextVoice", "element", "hint", "addHintMeasure", "staff", "nextStaff", "stave", "nextStave", "addHintMeasures", "nextLine", "strTune", "switches", "startPos", "arr", "i2", "all", "backslash", "comment", "padding", "lines", "abc_tokenizer_default", "abc_parse_header_default", "MusicParser", "wasInHeader", "ph", "pl", "x", "wrap_lines_default", "parser", "abc_parse_default", "TODO", "message", "getSequence", "id", "data", "sequence", "matches_default", "findLastOfType", "type", "events", "n", "getAbsoluteFromDiatonicPitch", "root", "degree", "parseABC", "abc", "tune", "line", "sequences", "staff", "i", "clef", "clefEvent", "keyEvent", "roots", "rootN", "denominator", "numerator", "meterEvent", "noteEvent", "voice", "abcPitch", "beat", "lengths", "rnote", "rroot", "parseSequenceText", "source", "data", "events", "n", "time", "type", "event", "m", "root", "extension", "duration", "value", "fromGist", "gist", "file", "parseSource", "fromTheSession", "object", "song", "type", "source", "parseABC", "parseSequenceText", "events", "requestData", "cacheByKey", "requestGet", "request_data_default", "overload", "type", "value", "url", "requestData", "source", "parseSource", "error", "name", "internals", "rtimesig", "timesigToMeter", "string", "groups", "num", "div", "meterToTimesig", "meter", "dur", "den", "windowBox", "rect", "node", "beamThickness", "getDataDuration", "note", "removeBeamPaths", "svg", "childNodes", "renderPathData", "range", "xs", "beam", "createBeamPaths", "durations", "i", "duration", "n", "create_default", "renderBeam", "ids", "parent", "notes", "id", "box", "boxes", "rect", "firstX", "lastX", "$id", "id", "identify", "event", "abs", "chordParts", "acciFlat", "acciSharp", "acciClasses", "acciGlyphs", "acciDoubleSharp", "acciNatural", "acciDoubleFlat", "restGlyphs", "rest2", "rest1", "rest05", "rest025", "rest0125", "rextensionparts", "create_symbol_element_default", "overload", "get_default", "symbol", "create_default", "parts", "rsharp", "rflat", "chordBassSlash", "identify", "glyphs_exports", "beamThickness", "types", "toElements", "nodes", "symbol", "element", "create_symbol_element_default", "toBarElements", "elements", "bar", "create_default", "createBarElements", "symbols", "assign", "define", "shadowCSSUrl", "stylesheet", "Signal", "stylefns", "resizes", "entries", "entry", "getInternals", "renderBeam", "element_default", "element", "shadow", "internals", "stylelink", "url", "source", "parseSource", "elements", "createBarElements", "eventsToSymbols", "value", "stave_default", "$0", "meterToTimesig", "timesigToMeter", "src", "script", "request_data_default", "data"]
}
