
/* Bars */

.bar {
    --columns-per-beat: 24;
    --column-beat-0: 3;
    --barline-thickness: 0.04em;

	display: grid;
	grid-auto-columns: 0px;
	align-content: stretch;
	align-items: stretch;
	justify-content: stretch;
	justify-items: stretch;
	column-gap:    var(--bar-column-gap);
	padding-left:  var(--bar-padding-left);
	padding-right: var(--bar-padding-right);

    /* Default alignment to prevent bar stretching vertically in a flexbox */
    align-self: start;

    /*
    Beat grid. Bars are divided into:
    1  bar-begin column (for clef/key/timesig)
    1  pre-beat column  (for accidentals)
    24 beat duration columns
    1  bar-end column
    */
    grid-template-columns:
        [bar-begin]
        max-content
        repeat(calc(var(--duration) * var(--columns-per-beat) + 1), minmax(max-content, auto))
        max-content
        [bar-end];
}

.bar[data-duration]::after {
    content: '';
    grid-column: -1;
    grid-row: stave-top / stave-bottom;
    align-self: stretch;
    justify-self: end;
    margin-top: calc(0.0625em - 0.5 * var(--barline-thickness));
    margin-bottom: calc(0.0625em - 0.5 * var(--barline-thickness));
    margin-right: calc(-1 * var(--bar-padding-right));
    width: var(--barline-thickness);
    background: currentcolor;
}

.end-bar[data-duration]::after {
    width: 0.11em;
    border-left: var(--barline-thickness) solid currentcolor;
    border-right: var(--barline-thickness) solid currentcolor;
    background: transparent;
}

/*
.end-bar:last-child::after {
    width: 0.17em;
    border-left: var(--barline-thickness) solid currentcolor;
    border-right: calc(2 * var(--barline-thickness)) solid currentcolor;
    background: transparent;
}
*/

.bar.error {
    color: red !important;
}

.bar > .stave-svg {
    color: green;
    background: rgba(210, 160, 80, 0.2);
    grid-row: 9 / span 9;
    grid-column: 1 / span 24;
    align-self: stretch;
}

.bar > [data-beat] {
    /* Place symbol with a beat in its beat column */
    grid-column-start: calc(var(--column-beat-0) + round(var(--beat) * var(--columns-per-beat)));
}




/*
.bar::before,
.bar::after {
	content: '';
	width: var(--bar-line-size, 1px);
	background: currentcolor;
	grid-row: stave-top / stave-bottom;
	align-self: stretch;
	margin-top: 0.0625em;
	margin-bottom: 0.0625em;
}

.bar::before {
	grid-column: bar-begin;
	justify-self: start;
	margin-left: calc(-1 * var(--bar-padding-left));
}

.bar::after {
	grid-column: bar-end;
	justify-self: end;
	margin-right: calc(-1 * var(--bar-padding-right));
}
*/

.safari .bar::after,
:host(.safari) > .bar::after {
	/* Overlap bar lines to disguise Safari rounding errors */
	margin-right: calc(-0.5 * var(--bar-line-size, 1px) - var(--bar-padding-right));
}

/*
.bar::before {
    grid-column: 1;
    justify-self: start;
    width: auto;
}
*/

.bar + .bar > .clef {
    display: none;
}

.bar > .clef {
    justify-self: start;
    grid-column: 1 / span 1;
    margin-left: -0.125em;
    margin-right: 0.25em;
}

.bar > .timesig {
    justify-self: start;
    grid-column: 1 / span 1;
    margin-left: 0;
    margin-right: 0.5em;

    --timesig-gap: 0.5em;
}

.bar > .acci:not([data-beat]) + .timesig {
    /* If they are preceded by a stave, move them right */
    --timesig-gap:   0.3em;
    --clef-acci-gap: 0.9em;
    --acci-acci-gap: 0.3em;
}


/* Sort out ordering of clef / keysig / timesig */

.bar > .clef ~ .acci:not([data-beat]) {
    /* If they are preceded by a stave, move them right */
    --clef-acci-gap: 0.9em;
}
/*
.bar > .timesig,
.bar > .clef + .timesig,
.bar > .clef + .timesig + .timesig {
    --clef-timesig: 1em;
    margin-left: var(--clef-timesig);
}
*/

.bar > .drum-clef + .timesig,
.bar > .percussion-clef + .timesig {
	--clef-timesig: 0.2em;
}


/* Accidentals */

.bar > .acci {
    grid-column-end: span 1;
    justify-self: end;
    margin-left:  var(--acci-margin-left);
    /* Accidentals must have column gap and head margin on their right negated
       before adding the proper margin, becuase they are aligned to the end of
       the column before their head. */
    margin-right: calc(-1 * var(--bar-column-gap) + 1em * var(--acci-margin-right));
    /* Place accidentals in the column before their related heads */
    grid-column-start: calc(var(--column-beat-0) + round(var(--beat) * var(--columns-per-beat)) - 1);
}

.bar > .acci + .acci {
    /* Attempt to space adjacent accidentals. */
    margin-right: 0.1em;
}


/* Notes and ledges */

.bar > .note,
.bar > .ledge {
	grid-column-end: span 1;
	justify-self: start;
}

.bar > .ledge {
	width: auto;
	/* Make ledger take up same space as head */
	margin-left:  -0.125em;
	margin-right: -0.125em;
}


/* Rests
Short rests inhabit one column, longer rests are centered
in their duration span. */

.bar > .rest {
	justify-self: start;
    grid-column-end: span 1;
}

/* Anything shorter than a quarter rest */
.bar > .rest[data-duration^="."],
.bar > .rest[data-duration^="0."] {
    margin-left:  0.03125em;
    margin-right: 0.03125em;
}

/* Triplet quarter rest */
.bar > .rest[data-duration="0.66"],
/* A quarter rest */
.bar > .rest[data-duration="1"],
/* A dotted quarter rest */
.bar > .rest[data-duration^="1.5"],
/* A double dotted quarter rest */
.bar > .rest[data-duration^="1.75"] {
	margin-left:  0.0625em;
    margin-right: 0.0625em;
}

.bar > .rest[data-duration^="1.33"] {
    justify-self: center;
    margin-left: 0.5em;
    margin-right: 0.5em;
    /* Make 2 beat rest span its durations */
    grid-column-end: span calc(round(var(--columns-per-beat) * var(--duration)) - 1);
}

.bar > .rest[data-duration="2"],
.bar > .rest[data-duration="3"],
.bar > .rest[data-duration="3.5"],
.bar > .rest[data-duration="4"],
.bar > .rest[data-duration="6"],
.bar > .rest[data-duration="7"],
.bar > .rest[data-duration="8"] {
	justify-self: center;
	margin-left: 0.75em;
	margin-right: 0.75em;
    /* Make 2 beat rests and longer span their durations */
    grid-column-end: span calc(round(var(--columns-per-beat) * var(--duration)) - 1);
}

.bar > .rest[data-duration="1"] + .rest[data-duration="2"] {
    margin-left: 0.5em;
}


/* Tuplets */

.bar > .tuplet {
    justify-self: stretch;
    align-self: center;
    /* Make tuplets span their heads and rests and no more */
    grid-column-end: span calc(1 + round(var(--duration) * var(--columns-per-beat) * (var(--divisor) - 1) / var(--divisor)));
}

.bar > .tuplet[data-duration="4"],
.bar > .tuplet[data-duration="8"] {
    /* Account for minim and whole rests, symbols that span multiple columns */
    grid-column-end: span calc(round(var(--duration) * var(--columns-per-beat) - 1));
}


/* Beams */

.bar > .beam {
	justify-self: stretch;
	width: auto;
	max-width: none;
    /* Beams span from first head to last head. Their duration is set to the
       difference between the two (not to the total duration) */
    grid-column-end: span calc(round(nearest, var(--duration) * var(--columns-per-beat)));
}

.bar > .up-beam {
	margin-left: calc(-1em * var(--stem-width));
	margin-right: calc(-1 * var(--bar-column-gap));
	transform: translate(calc(1em * var(--head-width)), calc(1em * var(--translate-y, 0)));
}

.bar > .down-beam {
	margin-left:  0;
	margin-right: calc(-1em * var(--stem-width) - var(--bar-column-gap));
	transform: translate(0, calc(1em * var(--translate-y, 0)));
}

/* Words */

.bar > .chord {
	justify-self: start;
	margin-left:  0;
	margin-right: 0.25em;
    /* Make chords span their full duration */
    grid-column-end: span calc(round(nearest, var(--duration) * var(--columns-per-beat)));
}

.bar > .lyric {
	justify-self: start;
	margin-left:  0;
	margin-right: 0.25em;
    grid-column-end: span calc(round(nearest, var(--duration) * var(--columns-per-beat)));
}

.bar > .tie {
	justify-self: stretch;
	/* Make tie span from end of one head to start of next. */
	margin-left: calc(1.125em * var(--head-width));
	min-width: 0.5em;
    /* Ties span from one head to another minus the accidentals column */
    grid-column-end: span calc(round(var(--duration) * var(--columns-per-beat)) - 1);
}

.bar[data-duration="1"] > .tie[data-beat^="0"][data-duration^="1"],
.bar[data-duration="1"] > .tie[data-beat^="0.25"][data-duration^="0.75"],
.bar[data-duration="1"] > .tie[data-beat^="0.33"][data-duration^="0.66"],
.bar[data-duration="1"] > .tie[data-beat^="0.5"][data-duration^="0.5"],
.bar[data-duration="1"] > .tie[data-beat^="0.62"][data-duration^="0.37"],
.bar[data-duration="1"] > .tie[data-beat^="0.66"][data-duration^="0.33"],
.bar[data-duration="1"] > .tie[data-beat^="0.75"][data-duration^="0.25"],
.bar[data-duration="1"] > .tie[data-beat^="0.83"][data-duration^="0.16"],
.bar[data-duration="1"] > .tie[data-beat^="0.87"][data-duration^="0.12"],
.bar[data-duration="1"] > .tie[data-beat^="0.91"][data-duration^="0.08"],

.bar[data-duration="2"] > .tie[data-beat^="0"][data-duration^="2"],
.bar[data-duration="2"] > .tie[data-beat^="0.5"][data-duration^="1.5"],
.bar[data-duration="2"] > .tie[data-beat^="0.66"][data-duration^="1.33"],
.bar[data-duration="2"] > .tie[data-beat^="1"][data-duration^="1"],
.bar[data-duration="2"] > .tie[data-beat^="1.25"][data-duration^="0.75"],
.bar[data-duration="2"] > .tie[data-beat^="1.33"][data-duration^="0.66"],
.bar[data-duration="2"] > .tie[data-beat^="1.5"][data-duration^="0.5"],
.bar[data-duration="2"] > .tie[data-beat^="1.62"][data-duration^="0.37"],
.bar[data-duration="2"] > .tie[data-beat^="1.66"][data-duration^="0.33"],
.bar[data-duration="2"] > .tie[data-beat^="1.75"][data-duration^="0.25"],
.bar[data-duration="2"] > .tie[data-beat^="1.83"][data-duration^="0.16"],
.bar[data-duration="2"] > .tie[data-beat^="1.87"][data-duration^="0.12"],
.bar[data-duration="2"] > .tie[data-beat^="1.91"][data-duration^="0.08"],

.bar[data-duration="3"] > .tie[data-beat^="0"][data-duration^="3"],
.bar[data-duration="3"] > .tie[data-beat^="1"][data-duration^="2"],
.bar[data-duration="3"] > .tie[data-beat^="1.5"][data-duration^="1.5"],
.bar[data-duration="3"] > .tie[data-beat^="1.66"][data-duration^="1.33"],
.bar[data-duration="3"] > .tie[data-beat^="1"][data-duration^="1"],
.bar[data-duration="3"] > .tie[data-beat^="1.25"][data-duration^="0.75"],
.bar[data-duration="3"] > .tie[data-beat^="1.33"][data-duration^="0.66"],
.bar[data-duration="3"] > .tie[data-beat^="1.5"][data-duration^="0.5"],
.bar[data-duration="3"] > .tie[data-beat^="1.62"][data-duration^="0.37"],
.bar[data-duration="3"] > .tie[data-beat^="1.66"][data-duration^="0.33"],
.bar[data-duration="3"] > .tie[data-beat^="1.75"][data-duration^="0.25"],
.bar[data-duration="3"] > .tie[data-beat^="1.83"][data-duration^="0.16"],
.bar[data-duration="3"] > .tie[data-beat^="1.87"][data-duration^="0.12"],
.bar[data-duration="3"] > .tie[data-beat^="1.91"][data-duration^="0.08"],

.bar[data-duration="4"] > .tie[data-beat^="0"][data-duration^="4"],
.bar[data-duration="4"] > .tie[data-beat^="1"][data-duration^="3"],
.bar[data-duration="4"] > .tie[data-beat^="2"][data-duration^="2"],
.bar[data-duration="4"] > .tie[data-beat^="2.5"][data-duration^="1.5"],
.bar[data-duration="4"] > .tie[data-beat^="2.66"][data-duration^="1.33"],
.bar[data-duration="4"] > .tie[data-beat^="3"][data-duration^="1"],
.bar[data-duration="4"] > .tie[data-beat^="3.25"][data-duration^="0.75"],
.bar[data-duration="4"] > .tie[data-beat^="3.33"][data-duration^="0.66"],
.bar[data-duration="4"] > .tie[data-beat^="3.5"][data-duration^="0.5"],
.bar[data-duration="4"] > .tie[data-beat^="3.62"][data-duration^="0.37"],
.bar[data-duration="4"] > .tie[data-beat^="3.66"][data-duration^="0.33"],
.bar[data-duration="4"] > .tie[data-beat^="3.75"][data-duration^="0.25"],
.bar[data-duration="4"] > .tie[data-beat^="3.83"][data-duration^="0.16"],
.bar[data-duration="4"] > .tie[data-beat^="3.87"][data-duration^="0.12"],
.bar[data-duration="4"] > .tie[data-beat^="3.91"][data-duration^="0.08"],

.bar[data-duration="5"] > .tie[data-beat^="1"][data-duration^="4"],
.bar[data-duration="5"] > .tie[data-beat^="2"][data-duration^="3"],
.bar[data-duration="5"] > .tie[data-beat^="3"][data-duration^="2"],
.bar[data-duration="5"] > .tie[data-beat^="3.5"][data-duration^="1.5"],
.bar[data-duration="5"] > .tie[data-beat^="3.66"][data-duration^="1.33"],
.bar[data-duration="5"] > .tie[data-beat^="4"][data-duration^="1"],
.bar[data-duration="5"] > .tie[data-beat^="4.25"][data-duration^="0.75"],
.bar[data-duration="5"] > .tie[data-beat^="4.33"][data-duration^="0.66"],
.bar[data-duration="5"] > .tie[data-beat^="4.5"][data-duration^="0.5"],
.bar[data-duration="5"] > .tie[data-beat^="4.62"][data-duration^="0.37"],
.bar[data-duration="5"] > .tie[data-beat^="4.66"][data-duration^="0.33"],
.bar[data-duration="5"] > .tie[data-beat^="4.75"][data-duration^="0.25"],
.bar[data-duration="5"] > .tie[data-beat^="4.83"][data-duration^="0.16"],
.bar[data-duration="5"] > .tie[data-beat^="4.87"][data-duration^="0.12"],
.bar[data-duration="5"] > .tie[data-beat^="4.91"][data-duration^="0.08"],

.bar[data-duration="6"] > .tie[data-beat^="0"][data-duration^="6"],
.bar[data-duration="6"] > .tie[data-beat^="2"][data-duration^="4"],
.bar[data-duration="6"] > .tie[data-beat^="3"][data-duration^="3"],
.bar[data-duration="6"] > .tie[data-beat^="4"][data-duration^="2"],
.bar[data-duration="6"] > .tie[data-beat^="4.5"][data-duration^="1.5"],
.bar[data-duration="6"] > .tie[data-beat^="4.66"][data-duration^="1.33"],
.bar[data-duration="6"] > .tie[data-beat^="5"][data-duration^="1"],
.bar[data-duration="6"] > .tie[data-beat^="5.25"][data-duration^="0.75"],
.bar[data-duration="6"] > .tie[data-beat^="5.33"][data-duration^="0.66"],
.bar[data-duration="6"] > .tie[data-beat^="5.5"][data-duration^="0.5"],
.bar[data-duration="6"] > .tie[data-beat^="5.62"][data-duration^="0.37"],
.bar[data-duration="6"] > .tie[data-beat^="5.66"][data-duration^="0.33"],
.bar[data-duration="6"] > .tie[data-beat^="5.75"][data-duration^="0.25"],
.bar[data-duration="6"] > .tie[data-beat^="5.83"][data-duration^="0.16"],
.bar[data-duration="6"] > .tie[data-beat^="5.87"][data-duration^="0.12"],
.bar[data-duration="6"] > .tie[data-beat^="5.91"][data-duration^="0.08"] {
    /* Stretch ties over following bar line */
    /* - bar start gap - half of head width */
    margin-right: -0.375em;
}



/* Double bar line */

.bar > .barline {
    grid-column: -1;
    white-space: nowrap;
}

.bar {
    position: relative;
}

.bar > .barcount {
    position: absolute;
    grid-column: auto;
    grid-row: auto;
    left: -1em;
    top: calc(50% + 2.4em);
    width: 2em;
    font-family: system-ui;
    font-size: 0.3125em;
    line-height: 0.8em;
    text-align: center;
    white-space: nowrap;
}

.bar > .BARREPEAT {
    justify-self: center;
    margin-left: 0.5em;
    margin-right: 0.5em;
    grid-column-end: span calc(var(--columns-per-beat) * var(--duration));
}

.end-bar + .bar::before {
    /* Bar count */
    content: attr(data-count);
    position: absolute;
    grid-column: 1;
    grid-row: barcount;
    left: calc(-1 * var(--bar-padding-left) / 0.3125 - 1em);/* - 1em / 0.3125);*/
    top: 0;
    width: 2em;
    font-family: system-ui;
    font-size: 0.3125em;
    line-height: 0.8em;
    text-align: center;
    white-space: nowrap;
}

.bar:first-child::before,
:not(.bar) + .bar::before {
    display: none;
}
